{"version":3,"mappings":";qIAEK,MAACA,EAAI,CACR,QAASC,EACT,SAAUC,EACV,UAAWC,EACX,UAAW,CACT,aAAc,IAAMC,EAAA,WAAO,aAAsB,OAAAH,KAAA,8BAAE,KAAM,GAAM,EAAE,EAAE,EACnE,YAAa,IAAKG,EAAA,IAAC,OAAO,qBAAsB,8BAChD,aAAc,UAAM,OAAO,qBAAsB,EAAC,2BACnD,EACD,SAAU,CAAC,EAAGC,EAAGC,IAAM,IAAIC,EAAEF,EAAG,IAAIH,EAAE,EAAGM,EAAE,EAAGC,EAAG,CAAE,CAACJ,CAAC,EAAGC,CAAC,CAAE,CAAC,CAAC,CAC/D","names":["m","n","r","l","__vitePreload","a","e","i","s","t"],"ignoreList":[0],"sources":["../../node_modules/@wormhole-foundation/wormhole-connect/lib/solana-C5D4LdxL.mjs"],"sourcesContent":["import { S as n, e as r, f as i, c as s, g as t } from \"./index-DgePBEwv.mjs\";\nimport { g as l } from \"./signer-CSn2uQ3I.mjs\";\nconst m = {\n  Address: n,\n  Platform: r,\n  getSigner: l,\n  protocols: {\n    WormholeCore: () => import(\"./index-DgePBEwv.mjs\").then((o) => o.dP),\n    TokenBridge: () => import(\"./index-CscLQMzV.mjs\"),\n    CircleBridge: () => import(\"./index-BMH6cJU8.mjs\")\n  },\n  getChain: (o, a, e) => new i(a, new r(o, s(o, t, { [a]: e })))\n};\nexport {\n  m as default\n};\n"],"file":"assets/solana-C5D4LdxL.js"}