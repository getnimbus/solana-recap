import{iy as t,iz as n,iA as o,iB as c,iC as u,iD as l}from"./index.js";import{a9 as d,iN as f,iO as g,iE as j,iH as v,iG as S,iJ as y,iI as E,iP as U,iQ as O,iW as k,iV as F,iR as M,aa as T,iX as x,iY as A,iM as C,iS as P,iT as R,iL as w,iZ as B,i_ as I,i$ as K,iK as L,iF as N,j0 as V,j1 as W,iU as Y,j2 as z,o as D,n as G,j3 as H,j4 as J,j5 as Q,j6 as X,j7 as Z}from"./index.js";import{S as q,a as _,d as aa,s as sa}from"./index3.js";function p(){for(var a=[],s=0;s<arguments.length;s++)a[s]=arguments[s];var r=t(a),i=n(a,1/0),e=a;return e.length?e.length===1?c(e[0]):u(i)(l(e,r)):o}export{d as BehaviorSubject,o as EMPTY,f as EmptyError,g as ObjectUnsubscribedError,j as Observable,v as ReplaySubject,q as Scheduler,S as Subject,y as Subscriber,E as Subscription,U as UnsubscriptionError,_ as asyncScheduler,O as concat,k as concatAll,F as config,aa as debounceTime,M as defer,T as distinctUntilChanged,x as distinctUntilKeyChanged,A as filter,C as firstValueFrom,l as from,P as fromEvent,R as fromEventPattern,w as identity,B as map,I as mapTo,p as merge,u as mergeAll,K as mergeMap,L as noop,N as observable,V as observeOn,W as pluck,Y as scheduled,z as share,D as shareReplay,sa as skip,G as startWith,H as subscribeOn,J as switchMap,Q as take,X as takeUntil,Z as withLatestFrom};
