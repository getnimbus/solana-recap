{"version":3,"file":"index-BBMlYvye.js","sources":["../../node_modules/@wormhole-foundation/wormhole-connect/lib/index-BBMlYvye.mjs"],"sourcesContent":["var U = Object.defineProperty;\nvar W = (h, t, e) => t in h ? U(h, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : h[t] = e;\nvar c = (h, t, e) => W(h, typeof t != \"symbol\" ? t + \"\" : t, e);\nimport \"./index-1U60lnae.mjs\";\nimport { C as p, G as v } from \"./cosmwasm-DY1PMAJO.mjs\";\nimport { b as o, c as g, C as x } from \"./unsignedTransaction-CzttHBqx.mjs\";\nimport { p as u, N as d, ah as B, c2 as C, ac as a, bB as E, bZ as q, bC as y, bH as I, ai as D } from \"./index-DgePBEwv.mjs\";\nclass k {\n  constructor(t, e, r, s) {\n    c(this, \"network\");\n    c(this, \"chain\");\n    c(this, \"rpc\");\n    c(this, \"contracts\");\n    c(this, \"tokenBridge\");\n    c(this, \"translator\");\n    this.network = t, this.chain = e, this.rpc = r, this.contracts = s;\n    const n = this.contracts.tokenBridge;\n    if (!n)\n      throw new Error(`Wormhole Token Bridge contract for domain ${e} not found`);\n    if (this.tokenBridge = n, this.translator = this.contracts.translator, this.translator !== void 0 && this.translator === \"\")\n      throw new Error(\"Translator address may be undefined but not empty string\");\n  }\n  static async fromRpc(t, e) {\n    const [r, s] = await p.chainFromRpc(t), n = e[s];\n    if (n.network !== r)\n      throw new Error(`Network mismatch: ${n.network} != ${r}`);\n    return new k(r, s, t, e[s].contracts);\n  }\n  async isWrappedAsset(t) {\n    try {\n      return await this.getOriginalAsset(t), !0;\n    } catch {\n    }\n    return !1;\n  }\n  async hasWrappedAsset(t) {\n    try {\n      return await this.getWrappedAsset(t), !0;\n    } catch {\n    }\n    return !1;\n  }\n  async getWrappedAsset(t) {\n    if (t.chain === this.chain)\n      throw new Error(`Expected foreign chain, got ${t.chain}`);\n    if (u(t.address))\n      throw new Error(\"Native asset cannot be a wrapped asset\");\n    const e = d.encode(t.address.toUniversalAddress().toUint8Array()), { address: r } = await this.rpc.queryContractSmart(this.tokenBridge, {\n      wrapped_registry: {\n        chain: B(t.chain),\n        address: e\n      }\n    });\n    return C(this.chain, r);\n  }\n  async getOriginalAsset(t) {\n    let e = new a(t);\n    e.denomType === \"factory\" && (e = v.factoryToCw20(e));\n    const r = await this.rpc.queryContractSmart(e.toString(), {\n      wrapped_asset_info: {}\n    }), s = E(r.asset_chain), n = d.decode(r.asset_address);\n    return {\n      chain: s,\n      address: new q(new Uint8Array(n))\n    };\n  }\n  async getTokenUniversalAddress(t) {\n    return new a(t).toUniversalAddress();\n  }\n  async getTokenNativeAddress(t, e) {\n    return new a(e).toNative();\n  }\n  async isTransferCompleted(t) {\n    const e = d.encode(y(t));\n    return (await this.rpc.queryContractSmart(this.tokenBridge, {\n      is_vaa_redeemed: { vaa: e }\n    })).is_redeemed;\n  }\n  async *createAttestation(t, e) {\n    if (!e)\n      throw new Error(\"Payer required to create attestation\");\n    const r = new a(t).toString(), s = new a(e).toString(), n = 0, w = u(t) ? {\n      native_token: {\n        denom: p.getNativeDenom(this.network, this.chain)\n      }\n    } : {\n      token: { contract_addr: r }\n    };\n    yield this.createUnsignedTx({\n      msgs: [\n        o(s, this.tokenBridge, {\n          create_asset_meta: { asset_info: w, nonce: n }\n        })\n      ],\n      fee: g(this.network, this.chain),\n      memo: \"Wormhole - Create Attestation\"\n    }, \"TokenBridge.createAttestation\");\n  }\n  async *submitAttestation(t, e) {\n    if (!e)\n      throw new Error(\"Payer required to submit attestation\");\n    const r = new a(e).toString();\n    yield this.createUnsignedTx({\n      msgs: [\n        o(r, this.tokenBridge, {\n          submit_vaa: { data: y(t) }\n        })\n      ],\n      fee: g(this.network, this.chain),\n      memo: \"Wormhole - Submit Attestation\"\n    }, \"TokenBridge.submitAttestation\");\n  }\n  async *transfer(t, e, r, s, n) {\n    const w = Math.round(Math.random() * 1e5), f = \"0\", S = B(e.chain), b = d.encode(e.address.toUniversalAddress().toUint8Array()), N = p.getNativeDenom(this.network, this.chain), A = u(r);\n    let i = A ? N : r.toString();\n    i.startsWith(\"factory\") && (i = v.factoryToCw20(new a(i)).toString());\n    const l = new a(t).toString(), _ = (m) => {\n      const T = {\n        asset: {\n          amount: s.toString(),\n          info: m\n        },\n        recipient_chain: S,\n        recipient: b,\n        fee: f,\n        nonce: w\n      };\n      return n ? {\n        initiate_transfer_with_payload: { ...T, payload: d.encode(n) }\n      } : {\n        initiate_transfer: T\n      };\n    };\n    if (A) {\n      const m = [\n        o(l, this.tokenBridge, { deposit_tokens: {} }, [\n          { amount: s.toString(), denom: i }\n        ]),\n        o(l, this.tokenBridge, _({\n          native_token: { denom: i }\n        }))\n      ];\n      yield this.createUnsignedTx({\n        msgs: m,\n        fee: g(this.network, this.chain),\n        memo: \"Wormhole - Initiate Native Transfer\"\n      }, \"TokenBridge.transferNative\");\n    } else {\n      const m = [\n        o(l, i, {\n          increase_allowance: {\n            spender: this.tokenBridge,\n            amount: s.toString(),\n            expires: { never: {} }\n          }\n        }),\n        o(l, this.tokenBridge, _({\n          token: { contract_addr: i }\n        }), [{ amount: s.toString(), denom: i }])\n      ];\n      yield this.createUnsignedTx({\n        msgs: m,\n        fee: g(this.network, this.chain),\n        memo: \"Wormhole - Initiate Transfer\"\n      }, \"TokenBridge.transfer\");\n    }\n  }\n  async *redeem(t, e, r = !0) {\n    const s = d.encode(y(e)), n = new a(t).toString(), f = this.translator && new a(this.translator).toUniversalAddress().equals(e.payload.to.address) ? o(n, this.translator, {\n      complete_transfer_and_convert: {\n        vaa: s\n      }\n    }) : o(n, this.tokenBridge, {\n      submit_vaa: { data: s }\n    });\n    yield this.createUnsignedTx({\n      msgs: [f],\n      fee: g(this.network, this.chain),\n      memo: \"Wormhole - Complete Transfer\"\n    }, \"TokenBridge.redeem\");\n  }\n  async parseTransactionDetails(t) {\n    throw new Error(\"Not implemented\");\n  }\n  async getWrappedNative() {\n    return C(this.chain, p.getNativeDenom(this.network, this.chain));\n  }\n  createUnsignedTx(t, e, r = !1) {\n    return new x(t, this.network, this.chain, e, r);\n  }\n}\nI(D, \"TokenBridge\", k);\nexport {\n  k as CosmwasmTokenBridge\n};\n"],"names":["U","W","c","s","n","p","u","d","B","C","a","v","E","q","y","w","o","g","f","b","A","_","m","T","x","I","D"],"mappings":"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","x_google_ignoreList":[0]}