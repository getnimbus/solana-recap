{"version":3,"file":"number.js","sources":["../../node_modules/@web3-onboard/common/node_modules/@noble/hashes/esm/_assert.js","../../node_modules/@web3-onboard/common/node_modules/@noble/hashes/esm/_u64.js","../../node_modules/@web3-onboard/common/node_modules/@noble/hashes/esm/utils.js","../../node_modules/@web3-onboard/common/node_modules/@noble/hashes/esm/sha3.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/hash/keccak256.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/errors/address.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/lru.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/address/getAddress.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/address/isAddress.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/data/concat.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/data/slice.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/errors/cursor.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/cursor.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/unit/formatGwei.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/errors/transaction.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/errors/node.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/formatters/formatter.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/formatters/transactionRequest.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/formatters/transaction.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/formatters/block.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/blob/blobsToCommitments.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/blob/blobsToProofs.js","../../node_modules/@web3-onboard/common/node_modules/@noble/hashes/esm/_sha2.js","../../node_modules/@web3-onboard/common/node_modules/@noble/hashes/esm/sha256.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/hash/sha256.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/constants/blob.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/constants/kzg.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/errors/blob.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/blob/toBlobs.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/blob/toBlobSidecars.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/transaction/getTransactionType.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/formatters/log.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/errors/chain.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/chain/defineChain.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/encoding/toRlp.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/formatters/transactionReceipt.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/transaction/assertTransaction.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/transaction/serializeAccessList.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/utils/transaction/serializeTransaction.js","../../node_modules/@web3-onboard/common/node_modules/viem/_esm/constants/number.js"],"sourcesContent":["function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`Expected boolean, not ${b}`);\n}\nfunction bytes(b, ...lengths) {\n    if (!(b instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(hash.outputLen);\n    number(hash.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nconst u8a = (a) => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    if (!u8a(bytes))\n        throw new Error('Uint8Array expected');\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const len = hex.length;\n    if (len % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n    const array = new Uint8Array(len / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!u8a(data))\n        throw new Error(`expected Uint8Array, got ${typeof data}`);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n    let pad = 0; // walk through each item, ensure they have proper type\n    arrays.forEach((a) => {\n        if (!u8a(a))\n            throw new Error('Uint8Array expected');\n        r.set(a, pad);\n        pad += a.length;\n    });\n    return r;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { Hash, u32, toBytes, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        number(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        keccakP(this.state32, this.rounds);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        exists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        exists(this, false);\n        bytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        number(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        output(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { keccak_256 } from '@noble/hashes/sha3';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function keccak256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = keccak_256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=keccak256.js.map","import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAddressError'\n        });\n    }\n}\n//# sourceMappingURL=address.js.map","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize)\n            this.delete(this.keys().next().value);\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { stringToBytes, } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { LruMap } from '../lru.js';\nimport { isAddress } from './isAddress.js';\nexport const checksumAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function checksumAddress(address_, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`))\n        return checksumAddressCache.get(`${address_}.${chainId}`);\n    const hexAddress = chainId\n        ? `${chainId}${address_.toLowerCase()}`\n        : address_.substring(2).toLowerCase();\n    const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n            address[i] = address[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n            address[i + 1] = address[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n}\nexport function getAddress(address, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (!isAddress(address, { strict: false }))\n        throw new InvalidAddressError({ address });\n    return checksumAddress(address, chainId);\n}\n//# sourceMappingURL=getAddress.js.map","import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\nexport const isAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    if (isAddressCache.has(address))\n        return isAddressCache.get(address);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(address, result);\n    return result;\n}\n//# sourceMappingURL=isAddress.js.map","export function concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nexport function concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nexport function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n//# sourceMappingURL=concat.js.map","import { SliceOffsetOutOfBoundsError, } from '../../errors/data.js';\nimport { isHex } from './isHex.js';\nimport { size } from './size.js';\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice(value, start, end, { strict } = {}) {\n    if (isHex(value, { strict: false }))\n        return sliceHex(value, start, end, {\n            strict,\n        });\n    return sliceBytes(value, start, end, {\n        strict,\n    });\n}\nfunction assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n        throw new SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: size(value),\n        });\n}\nfunction assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        size(value) !== end - start) {\n        throw new SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: size(value),\n        });\n    }\n}\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = value_.slice(start, end);\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = `0x${value_\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n//# sourceMappingURL=slice.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NegativeOffsetError'\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PositionOutOfBoundsError'\n        });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RecursiveReadLimitExceededError'\n        });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeConflictError'\n        });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidLegacyVError'\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializableTransactionError'\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionType'\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSerializedTransactionError'\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidStorageKeySizeError'\n        });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionExecutionError'\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionNotFoundError'\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionReceiptNotFoundError'\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WaitForTransactionReceiptTimeoutError'\n        });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ExecutionRevertedError'\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooHigh'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'FeeCapTooLow'\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooHighError'\n        });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceTooLowError'\n        });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'NonceMaxValueError'\n        });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InsufficientFundsError'\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooHighError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'IntrinsicGasTooLowError'\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TransactionTypeNotSupportedError'\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TipAboveFeeCapError'\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownNodeError'\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n};\nexport function formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n//# sourceMappingURL=transactionRequest.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n    '0x0': 'legacy',\n    '0x1': 'eip2930',\n    '0x2': 'eip1559',\n    '0x3': 'eip4844',\n};\nexport function formatTransaction(transaction) {\n    const transaction_ = {\n        ...transaction,\n        blockHash: transaction.blockHash ? transaction.blockHash : null,\n        blockNumber: transaction.blockNumber\n            ? BigInt(transaction.blockNumber)\n            : null,\n        chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n        gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n        maxFeePerBlobGas: transaction.maxFeePerBlobGas\n            ? BigInt(transaction.maxFeePerBlobGas)\n            : undefined,\n        maxFeePerGas: transaction.maxFeePerGas\n            ? BigInt(transaction.maxFeePerGas)\n            : undefined,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n            ? BigInt(transaction.maxPriorityFeePerGas)\n            : undefined,\n        nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n        to: transaction.to ? transaction.to : null,\n        transactionIndex: transaction.transactionIndex\n            ? Number(transaction.transactionIndex)\n            : null,\n        type: transaction.type\n            ? transactionType[transaction.type]\n            : undefined,\n        typeHex: transaction.type ? transaction.type : undefined,\n        value: transaction.value ? BigInt(transaction.value) : undefined,\n        v: transaction.v ? BigInt(transaction.v) : undefined,\n    };\n    transaction_.yParity = (() => {\n        // If `yParity` is provided, we will use it.\n        if (transaction.yParity)\n            return Number(transaction.yParity);\n        // If no `yParity` provided, try derive from `v`.\n        if (typeof transaction_.v === 'bigint') {\n            if (transaction_.v === 0n || transaction_.v === 27n)\n                return 0;\n            if (transaction_.v === 1n || transaction_.v === 28n)\n                return 1;\n            if (transaction_.v >= 35n)\n                return transaction_.v % 2n === 0n ? 1 : 0;\n        }\n        return undefined;\n    })();\n    if (transaction_.type === 'legacy') {\n        delete transaction_.accessList;\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n        delete transaction_.yParity;\n    }\n    if (transaction_.type === 'eip2930') {\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n    }\n    if (transaction_.type === 'eip1559') {\n        delete transaction_.maxFeePerBlobGas;\n    }\n    return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/ defineFormatter('transaction', formatTransaction);\n//# sourceMappingURL=transaction.js.map","import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n    const transactions = block.transactions?.map((transaction) => {\n        if (typeof transaction === 'string')\n            return transaction;\n        return formatTransaction(transaction);\n    });\n    return {\n        ...block,\n        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n        excessBlobGas: block.excessBlobGas\n            ? BigInt(block.excessBlobGas)\n            : undefined,\n        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n        hash: block.hash ? block.hash : null,\n        logsBloom: block.logsBloom ? block.logsBloom : null,\n        nonce: block.nonce ? block.nonce : null,\n        number: block.number ? BigInt(block.number) : null,\n        size: block.size ? BigInt(block.size) : undefined,\n        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n        transactions,\n        totalDifficulty: block.totalDifficulty\n            ? BigInt(block.totalDifficulty)\n            : null,\n    };\n}\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock);\n//# sourceMappingURL=block.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = [];\n    for (const blob of blobs)\n        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));\n    return (to === 'bytes'\n        ? commitments\n        : commitments.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToCommitments.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = (typeof parameters.commitments[0] === 'string'\n        ? parameters.commitments.map((x) => hexToBytes(x))\n        : parameters.commitments);\n    const proofs = [];\n    for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n        const commitment = commitments[i];\n        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));\n    }\n    return (to === 'bytes'\n        ? proofs\n        : proofs.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToProofs.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nexport class SHA2 extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_sha2.js.map","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function sha256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n    const { commitment, version = 1 } = parameters;\n    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n    const versionedHash = sha256(commitment, 'bytes');\n    versionedHash.set([version], 0);\n    return (to === 'bytes' ? versionedHash : bytesToHex(versionedHash));\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","import { commitmentToVersionedHash, } from './commitmentToVersionedHash.js';\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes(parameters) {\n    const { commitments, version } = parameters;\n    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(commitmentToVersionedHash({\n            commitment,\n            to,\n            version,\n        }));\n    }\n    return hashes;\n}\n//# sourceMappingURL=commitmentsToVersionedHashes.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** Blob limit per transaction. */\nexport const blobsPerTransaction = 6;\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32;\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096;\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -\n    // terminator byte (0x80).\n    1 -\n    // zero byte (0x00) appended to each field element.\n    1 * fieldElementsPerBlob * blobsPerTransaction;\n//# sourceMappingURL=blob.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** The number of bytes in a KZG commitment. */\nexport const bytesPerCommitment = 48;\n/** The number of bytes in a KZG proof. */\nexport const bytesPerProof = 48;\nexport const versionedHashVersionKzg = 1;\n//# sourceMappingURL=kzg.js.map","import { versionedHashVersionKzg } from '../constants/kzg.js';\nimport { BaseError } from './base.js';\nexport class BlobSizeTooLargeError extends BaseError {\n    constructor({ maxSize, size }) {\n        super('Blob size is too large.', {\n            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BlobSizeTooLargeError'\n        });\n    }\n}\nexport class EmptyBlobError extends BaseError {\n    constructor() {\n        super('Blob data must not be empty.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'EmptyBlobError'\n        });\n    }\n}\nexport class InvalidVersionedHashSizeError extends BaseError {\n    constructor({ hash, size, }) {\n        super(`Versioned hash \"${hash}\" size is invalid.`, {\n            metaMessages: ['Expected: 32', `Received: ${size}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashSizeError'\n        });\n    }\n}\nexport class InvalidVersionedHashVersionError extends BaseError {\n    constructor({ hash, version, }) {\n        super(`Versioned hash \"${hash}\" version is invalid.`, {\n            metaMessages: [\n                `Expected: ${versionedHashVersionKzg}`,\n                `Received: ${version}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidVersionedHashVersionError'\n        });\n    }\n}\n//# sourceMappingURL=blob.js.map","import { bytesPerBlob, bytesPerFieldElement, fieldElementsPerBlob, maxBytesPerTransaction, } from '../../constants/blob.js';\nimport { BlobSizeTooLargeError, EmptyBlobError, } from '../../errors/blob.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs(parameters) {\n    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');\n    const data = (typeof parameters.data === 'string'\n        ? hexToBytes(parameters.data)\n        : parameters.data);\n    const size_ = size(data);\n    if (!size_)\n        throw new EmptyBlobError();\n    if (size_ > maxBytesPerTransaction)\n        throw new BlobSizeTooLargeError({\n            maxSize: maxBytesPerTransaction,\n            size: size_,\n        });\n    const blobs = [];\n    let active = true;\n    let position = 0;\n    while (active) {\n        const blob = createCursor(new Uint8Array(bytesPerBlob));\n        let size = 0;\n        while (size < fieldElementsPerBlob) {\n            const bytes = data.slice(position, position + (bytesPerFieldElement - 1));\n            // Push a zero byte so the field element doesn't overflow the BLS modulus.\n            blob.pushByte(0x00);\n            // Push the current segment of data bytes.\n            blob.pushBytes(bytes);\n            // If we detect that the current segment of data bytes is less than 31 bytes,\n            // we can stop processing and push a terminator byte to indicate the end of the blob.\n            if (bytes.length < 31) {\n                blob.pushByte(0x80);\n                active = false;\n                break;\n            }\n            size++;\n            position += 31;\n        }\n        blobs.push(blob);\n    }\n    return (to === 'bytes'\n        ? blobs.map((x) => x.bytes)\n        : blobs.map((x) => bytesToHex(x.bytes)));\n}\n//# sourceMappingURL=toBlobs.js.map","import { blobsToCommitments, } from './blobsToCommitments.js';\nimport { blobsToProofs } from './blobsToProofs.js';\nimport { toBlobs } from './toBlobs.js';\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars(parameters) {\n    const { data, kzg, to } = parameters;\n    const blobs = parameters.blobs ?? toBlobs({ data: data, to });\n    const commitments = parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg, to });\n    const proofs = parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg, to });\n    const sidecars = [];\n    for (let i = 0; i < blobs.length; i++)\n        sidecars.push({\n            blob: blobs[i],\n            commitment: commitments[i],\n            proof: proofs[i],\n        });\n    return sidecars;\n}\n//# sourceMappingURL=toBlobSidecars.js.map","import { InvalidSerializableTransactionError, } from '../../errors/transaction.js';\nexport function getTransactionType(transaction) {\n    if (transaction.type)\n        return transaction.type;\n    if (typeof transaction.blobs !== 'undefined' ||\n        typeof transaction.blobVersionedHashes !== 'undefined' ||\n        typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n        typeof transaction.sidecars !== 'undefined')\n        return 'eip4844';\n    if (typeof transaction.maxFeePerGas !== 'undefined' ||\n        typeof transaction.maxPriorityFeePerGas !== 'undefined') {\n        return 'eip1559';\n    }\n    if (typeof transaction.gasPrice !== 'undefined') {\n        if (typeof transaction.accessList !== 'undefined')\n            return 'eip2930';\n        return 'legacy';\n    }\n    throw new InvalidSerializableTransactionError({ transaction });\n}\n//# sourceMappingURL=getTransactionType.js.map","export function formatLog(log, { args, eventName, } = {}) {\n    return {\n        ...log,\n        blockHash: log.blockHash ? log.blockHash : null,\n        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n        logIndex: log.logIndex ? Number(log.logIndex) : null,\n        transactionHash: log.transactionHash ? log.transactionHash : null,\n        transactionIndex: log.transactionIndex\n            ? Number(log.transactionIndex)\n            : null,\n        ...(eventName ? { args, eventName } : {}),\n    };\n}\n//# sourceMappingURL=log.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainDoesNotSupportContract'\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainMismatchError'\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ChainNotFoundError'\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ClientChainNotConfiguredError'\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidChainIdError'\n        });\n    }\n}\n//# sourceMappingURL=chain.js.map","export function defineChain(chain) {\n    return {\n        formatters: undefined,\n        fees: undefined,\n        serializers: undefined,\n        ...chain,\n    };\n}\n//# sourceMappingURL=defineChain.js.map","import { BaseError } from '../../errors/base.js';\nimport { createCursor, } from '../cursor.js';\nimport { hexToBytes } from './toBytes.js';\nimport { bytesToHex } from './toHex.js';\nexport function toRlp(bytes, to = 'hex') {\n    const encodable = getEncodable(bytes);\n    const cursor = createCursor(new Uint8Array(encodable.length));\n    encodable.encode(cursor);\n    if (to === 'hex')\n        return bytesToHex(cursor.bytes);\n    return cursor.bytes;\n}\nexport function bytesToRlp(bytes, to = 'bytes') {\n    return toRlp(bytes, to);\n}\nexport function hexToRlp(hex, to = 'hex') {\n    return toRlp(hex, to);\n}\nfunction getEncodable(bytes) {\n    if (Array.isArray(bytes))\n        return getEncodableList(bytes.map((x) => getEncodable(x)));\n    return getEncodableBytes(bytes);\n}\nfunction getEncodableList(list) {\n    const bodyLength = list.reduce((acc, x) => acc + x.length, 0);\n    const sizeOfBodyLength = getSizeOfLength(bodyLength);\n    const length = (() => {\n        if (bodyLength <= 55)\n            return 1 + bodyLength;\n        return 1 + sizeOfBodyLength + bodyLength;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bodyLength <= 55) {\n                cursor.pushByte(0xc0 + bodyLength);\n            }\n            else {\n                cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);\n                if (sizeOfBodyLength === 1)\n                    cursor.pushUint8(bodyLength);\n                else if (sizeOfBodyLength === 2)\n                    cursor.pushUint16(bodyLength);\n                else if (sizeOfBodyLength === 3)\n                    cursor.pushUint24(bodyLength);\n                else\n                    cursor.pushUint32(bodyLength);\n            }\n            for (const { encode } of list) {\n                encode(cursor);\n            }\n        },\n    };\n}\nfunction getEncodableBytes(bytesOrHex) {\n    const bytes = typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex;\n    const sizeOfBytesLength = getSizeOfLength(bytes.length);\n    const length = (() => {\n        if (bytes.length === 1 && bytes[0] < 0x80)\n            return 1;\n        if (bytes.length <= 55)\n            return 1 + bytes.length;\n        return 1 + sizeOfBytesLength + bytes.length;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bytes.length === 1 && bytes[0] < 0x80) {\n                cursor.pushBytes(bytes);\n            }\n            else if (bytes.length <= 55) {\n                cursor.pushByte(0x80 + bytes.length);\n                cursor.pushBytes(bytes);\n            }\n            else {\n                cursor.pushByte(0x80 + 55 + sizeOfBytesLength);\n                if (sizeOfBytesLength === 1)\n                    cursor.pushUint8(bytes.length);\n                else if (sizeOfBytesLength === 2)\n                    cursor.pushUint16(bytes.length);\n                else if (sizeOfBytesLength === 3)\n                    cursor.pushUint24(bytes.length);\n                else\n                    cursor.pushUint32(bytes.length);\n                cursor.pushBytes(bytes);\n            }\n        },\n    };\n}\nfunction getSizeOfLength(length) {\n    if (length < 2 ** 8)\n        return 1;\n    if (length < 2 ** 16)\n        return 2;\n    if (length < 2 ** 24)\n        return 3;\n    if (length < 2 ** 32)\n        return 4;\n    throw new BaseError('Length is too large.');\n}\n//# sourceMappingURL=toRlp.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n    '0x0': 'reverted',\n    '0x1': 'success',\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n    const receipt = {\n        ...transactionReceipt,\n        blockNumber: transactionReceipt.blockNumber\n            ? BigInt(transactionReceipt.blockNumber)\n            : null,\n        contractAddress: transactionReceipt.contractAddress\n            ? transactionReceipt.contractAddress\n            : null,\n        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n            ? BigInt(transactionReceipt.cumulativeGasUsed)\n            : null,\n        effectiveGasPrice: transactionReceipt.effectiveGasPrice\n            ? BigInt(transactionReceipt.effectiveGasPrice)\n            : null,\n        gasUsed: transactionReceipt.gasUsed\n            ? BigInt(transactionReceipt.gasUsed)\n            : null,\n        logs: transactionReceipt.logs\n            ? transactionReceipt.logs.map((log) => formatLog(log))\n            : null,\n        to: transactionReceipt.to ? transactionReceipt.to : null,\n        transactionIndex: transactionReceipt.transactionIndex\n            ? hexToNumber(transactionReceipt.transactionIndex)\n            : null,\n        status: transactionReceipt.status\n            ? receiptStatuses[transactionReceipt.status]\n            : null,\n        type: transactionReceipt.type\n            ? transactionType[transactionReceipt.type] || transactionReceipt.type\n            : null,\n    };\n    if (transactionReceipt.blobGasPrice)\n        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n    if (transactionReceipt.blobGasUsed)\n        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n    return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter('transactionReceipt', formatTransactionReceipt);\n//# sourceMappingURL=transactionReceipt.js.map","import { versionedHashVersionKzg } from '../../constants/kzg.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { EmptyBlobError, InvalidVersionedHashSizeError, InvalidVersionedHashVersionError, } from '../../errors/blob.js';\nimport { InvalidChainIdError, } from '../../errors/chain.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { size } from '../data/size.js';\nimport { slice } from '../data/slice.js';\nimport { hexToNumber } from '../encoding/fromHex.js';\nexport function assertTransactionEIP4844(transaction) {\n    const { blobVersionedHashes } = transaction;\n    if (blobVersionedHashes) {\n        if (blobVersionedHashes.length === 0)\n            throw new EmptyBlobError();\n        for (const hash of blobVersionedHashes) {\n            const size_ = size(hash);\n            const version = hexToNumber(slice(hash, 0, 1));\n            if (size_ !== 32)\n                throw new InvalidVersionedHashSizeError({ hash, size: size_ });\n            if (version !== versionedHashVersionKzg)\n                throw new InvalidVersionedHashVersionError({\n                    hash,\n                    version,\n                });\n        }\n    }\n    assertTransactionEIP1559(transaction);\n}\nexport function assertTransactionEIP1559(transaction) {\n    const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\nexport function assertTransactionEIP2930(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.');\n    if (gasPrice && gasPrice > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n}\nexport function assertTransactionLegacy(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to, accessList, } = transaction;\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof chainId !== 'undefined' && chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.');\n    if (gasPrice && gasPrice > 2n ** 256n - 1n)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n    if (accessList)\n        throw new BaseError('`accessList` is not a valid Legacy Transaction attribute.');\n}\n//# sourceMappingURL=assertTransaction.js.map","import { InvalidAddressError, } from '../../errors/address.js';\nimport { InvalidStorageKeySizeError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(accessList) {\n    if (!accessList || accessList.length === 0)\n        return [];\n    const serializedAccessList = [];\n    for (let i = 0; i < accessList.length; i++) {\n        const { address, storageKeys } = accessList[i];\n        for (let j = 0; j < storageKeys.length; j++) {\n            if (storageKeys[j].length - 2 !== 64) {\n                throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] });\n            }\n        }\n        if (!isAddress(address, { strict: false })) {\n            throw new InvalidAddressError({ address });\n        }\n        serializedAccessList.push([address, storageKeys]);\n    }\n    return serializedAccessList;\n}\n//# sourceMappingURL=serializeAccessList.js.map","import { InvalidLegacyVError, } from '../../errors/transaction.js';\nimport { blobsToCommitments, } from '../blob/blobsToCommitments.js';\nimport { blobsToProofs, } from '../blob/blobsToProofs.js';\nimport { commitmentsToVersionedHashes, } from '../blob/commitmentsToVersionedHashes.js';\nimport { toBlobSidecars, } from '../blob/toBlobSidecars.js';\nimport { concatHex } from '../data/concat.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToHex, toHex } from '../encoding/toHex.js';\nimport { toRlp } from '../encoding/toRlp.js';\nimport { assertTransactionEIP1559, assertTransactionEIP2930, assertTransactionEIP4844, assertTransactionLegacy, } from './assertTransaction.js';\nimport { getTransactionType, } from './getTransactionType.js';\nimport { serializeAccessList, } from './serializeAccessList.js';\nexport function serializeTransaction(transaction, signature) {\n    const type = getTransactionType(transaction);\n    if (type === 'eip1559')\n        return serializeTransactionEIP1559(transaction, signature);\n    if (type === 'eip2930')\n        return serializeTransactionEIP2930(transaction, signature);\n    if (type === 'eip4844')\n        return serializeTransactionEIP4844(transaction, signature);\n    return serializeTransactionLegacy(transaction, signature);\n}\nfunction serializeTransactionEIP4844(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP4844(transaction);\n    let blobVersionedHashes = transaction.blobVersionedHashes;\n    let sidecars = transaction.sidecars;\n    // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n    if (transaction.blobs &&\n        (typeof blobVersionedHashes === 'undefined' ||\n            typeof sidecars === 'undefined')) {\n        const blobs = (typeof transaction.blobs[0] === 'string'\n            ? transaction.blobs\n            : transaction.blobs.map((x) => bytesToHex(x)));\n        const kzg = transaction.kzg;\n        const commitments = blobsToCommitments({\n            blobs,\n            kzg,\n        });\n        if (typeof blobVersionedHashes === 'undefined')\n            blobVersionedHashes = commitmentsToVersionedHashes({\n                commitments,\n            });\n        if (typeof sidecars === 'undefined') {\n            const proofs = blobsToProofs({ blobs, commitments, kzg });\n            sidecars = toBlobSidecars({ blobs, commitments, proofs });\n        }\n    }\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        maxFeePerBlobGas ? toHex(maxFeePerBlobGas) : '0x',\n        blobVersionedHashes ?? [],\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    const blobs = [];\n    const commitments = [];\n    const proofs = [];\n    if (sidecars)\n        for (let i = 0; i < sidecars.length; i++) {\n            const { blob, commitment, proof } = sidecars[i];\n            blobs.push(blob);\n            commitments.push(commitment);\n            proofs.push(proof);\n        }\n    return concatHex([\n        '0x03',\n        sidecars\n            ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n                toRlp([serializedTransaction, blobs, commitments, proofs])\n            : // If sidecars are disabled, standard envelope is used:\n                toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP1559(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP1559(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x02',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP2930(transaction, signature) {\n    const { chainId, gas, data, nonce, to, value, accessList, gasPrice } = transaction;\n    assertTransactionEIP2930(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x01',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionLegacy(transaction, signature) {\n    const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction;\n    assertTransactionLegacy(transaction);\n    let serializedTransaction = [\n        nonce ? toHex(nonce) : '0x',\n        gasPrice ? toHex(gasPrice) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n    ];\n    if (signature) {\n        const v = (() => {\n            // EIP-155 (inferred chainId)\n            if (signature.v >= 35n) {\n                const inferredChainId = (signature.v - 35n) / 2n;\n                if (inferredChainId > 0)\n                    return signature.v;\n                return 27n + (signature.v === 35n ? 0n : 1n);\n            }\n            // EIP-155 (explicit chainId)\n            if (chainId > 0)\n                return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);\n            // Pre-EIP-155 (no chainId)\n            const v = 27n + (signature.v === 27n ? 0n : 1n);\n            if (signature.v !== v)\n                throw new InvalidLegacyVError({ v: signature.v });\n            return v;\n        })();\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(v),\n            signature.r,\n            signature.s,\n        ];\n    }\n    else if (chainId > 0) {\n        serializedTransaction = [\n            ...serializedTransaction,\n            toHex(chainId),\n            '0x',\n            '0x',\n        ];\n    }\n    return toRlp(serializedTransaction);\n}\nexport function toYParitySignatureArray(transaction, signature) {\n    const { r, s, v, yParity } = signature ?? transaction;\n    if (typeof r === 'undefined')\n        return [];\n    if (typeof s === 'undefined')\n        return [];\n    if (typeof v === 'undefined' && typeof yParity === 'undefined')\n        return [];\n    const yParity_ = (() => {\n        if (typeof yParity === 'number')\n            return yParity ? toHex(1) : '0x';\n        if (v === 0n)\n            return '0x';\n        if (v === 1n)\n            return toHex(1);\n        return v === 27n ? '0x' : toHex(1);\n    })();\n    return [yParity_, trim(r), trim(s)];\n}\n//# sourceMappingURL=serializeTransaction.js.map","export const maxInt8 = 2n ** (8n - 1n) - 1n;\nexport const maxInt16 = 2n ** (16n - 1n) - 1n;\nexport const maxInt24 = 2n ** (24n - 1n) - 1n;\nexport const maxInt32 = 2n ** (32n - 1n) - 1n;\nexport const maxInt40 = 2n ** (40n - 1n) - 1n;\nexport const maxInt48 = 2n ** (48n - 1n) - 1n;\nexport const maxInt56 = 2n ** (56n - 1n) - 1n;\nexport const maxInt64 = 2n ** (64n - 1n) - 1n;\nexport const maxInt72 = 2n ** (72n - 1n) - 1n;\nexport const maxInt80 = 2n ** (80n - 1n) - 1n;\nexport const maxInt88 = 2n ** (88n - 1n) - 1n;\nexport const maxInt96 = 2n ** (96n - 1n) - 1n;\nexport const maxInt104 = 2n ** (104n - 1n) - 1n;\nexport const maxInt112 = 2n ** (112n - 1n) - 1n;\nexport const maxInt120 = 2n ** (120n - 1n) - 1n;\nexport const maxInt128 = 2n ** (128n - 1n) - 1n;\nexport const maxInt136 = 2n ** (136n - 1n) - 1n;\nexport const maxInt144 = 2n ** (144n - 1n) - 1n;\nexport const maxInt152 = 2n ** (152n - 1n) - 1n;\nexport const maxInt160 = 2n ** (160n - 1n) - 1n;\nexport const maxInt168 = 2n ** (168n - 1n) - 1n;\nexport const maxInt176 = 2n ** (176n - 1n) - 1n;\nexport const maxInt184 = 2n ** (184n - 1n) - 1n;\nexport const maxInt192 = 2n ** (192n - 1n) - 1n;\nexport const maxInt200 = 2n ** (200n - 1n) - 1n;\nexport const maxInt208 = 2n ** (208n - 1n) - 1n;\nexport const maxInt216 = 2n ** (216n - 1n) - 1n;\nexport const maxInt224 = 2n ** (224n - 1n) - 1n;\nexport const maxInt232 = 2n ** (232n - 1n) - 1n;\nexport const maxInt240 = 2n ** (240n - 1n) - 1n;\nexport const maxInt248 = 2n ** (248n - 1n) - 1n;\nexport const maxInt256 = 2n ** (256n - 1n) - 1n;\nexport const minInt8 = -(2n ** (8n - 1n));\nexport const minInt16 = -(2n ** (16n - 1n));\nexport const minInt24 = -(2n ** (24n - 1n));\nexport const minInt32 = -(2n ** (32n - 1n));\nexport const minInt40 = -(2n ** (40n - 1n));\nexport const minInt48 = -(2n ** (48n - 1n));\nexport const minInt56 = -(2n ** (56n - 1n));\nexport const minInt64 = -(2n ** (64n - 1n));\nexport const minInt72 = -(2n ** (72n - 1n));\nexport const minInt80 = -(2n ** (80n - 1n));\nexport const minInt88 = -(2n ** (88n - 1n));\nexport const minInt96 = -(2n ** (96n - 1n));\nexport const minInt104 = -(2n ** (104n - 1n));\nexport const minInt112 = -(2n ** (112n - 1n));\nexport const minInt120 = -(2n ** (120n - 1n));\nexport const minInt128 = -(2n ** (128n - 1n));\nexport const minInt136 = -(2n ** (136n - 1n));\nexport const minInt144 = -(2n ** (144n - 1n));\nexport const minInt152 = -(2n ** (152n - 1n));\nexport const minInt160 = -(2n ** (160n - 1n));\nexport const minInt168 = -(2n ** (168n - 1n));\nexport const minInt176 = -(2n ** (176n - 1n));\nexport const minInt184 = -(2n ** (184n - 1n));\nexport const minInt192 = -(2n ** (192n - 1n));\nexport const minInt200 = -(2n ** (200n - 1n));\nexport const minInt208 = -(2n ** (208n - 1n));\nexport const minInt216 = -(2n ** (216n - 1n));\nexport const minInt224 = -(2n ** (224n - 1n));\nexport const minInt232 = -(2n ** (232n - 1n));\nexport const minInt240 = -(2n ** (240n - 1n));\nexport const minInt248 = -(2n ** (248n - 1n));\nexport const minInt256 = -(2n ** (256n - 1n));\nexport const maxUint8 = 2n ** 8n - 1n;\nexport const maxUint16 = 2n ** 16n - 1n;\nexport const maxUint24 = 2n ** 24n - 1n;\nexport const maxUint32 = 2n ** 32n - 1n;\nexport const maxUint40 = 2n ** 40n - 1n;\nexport const maxUint48 = 2n ** 48n - 1n;\nexport const maxUint56 = 2n ** 56n - 1n;\nexport const maxUint64 = 2n ** 64n - 1n;\nexport const maxUint72 = 2n ** 72n - 1n;\nexport const maxUint80 = 2n ** 80n - 1n;\nexport const maxUint88 = 2n ** 88n - 1n;\nexport const maxUint96 = 2n ** 96n - 1n;\nexport const maxUint104 = 2n ** 104n - 1n;\nexport const maxUint112 = 2n ** 112n - 1n;\nexport const maxUint120 = 2n ** 120n - 1n;\nexport const maxUint128 = 2n ** 128n - 1n;\nexport const maxUint136 = 2n ** 136n - 1n;\nexport const maxUint144 = 2n ** 144n - 1n;\nexport const maxUint152 = 2n ** 152n - 1n;\nexport const maxUint160 = 2n ** 160n - 1n;\nexport const maxUint168 = 2n ** 168n - 1n;\nexport const maxUint176 = 2n ** 176n - 1n;\nexport const maxUint184 = 2n ** 184n - 1n;\nexport const maxUint192 = 2n ** 192n - 1n;\nexport const maxUint200 = 2n ** 200n - 1n;\nexport const maxUint208 = 2n ** 208n - 1n;\nexport const maxUint216 = 2n ** 216n - 1n;\nexport const maxUint224 = 2n ** 224n - 1n;\nexport const maxUint232 = 2n ** 232n - 1n;\nexport const maxUint240 = 2n ** 240n - 1n;\nexport const maxUint248 = 2n ** 248n - 1n;\nexport const maxUint256 = 2n ** 256n - 1n;\n//# sourceMappingURL=number.js.map"],"names":["number","n","bytes","b","lengths","exists","instance","checkFinished","output","out","min","U32_MASK64","_32n","fromBig","le","split","lst","Ah","Al","h","l","rotlSH","rotlSL","rotlBH","rotlBL","u8a","a","u32","arr","createView","rotr","word","shift","isLE","utf8ToBytes","str","toBytes","data","Hash","wrapConstructor","hashCons","hashC","msg","tmp","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","t","j","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","rotlL","keccakP","s","rounds","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","Keccak","blockLen","suffix","outputLen","enableXOF","state","len","pos","take","i","bufferOut","to","gen","keccak_256","keccak256","value","to_","isHex","InvalidAddressError","BaseError","address","LruMap","size","key","checksumAddressCache","checksumAddress","address_","chainId","hexAddress","hash","stringToBytes","result","addressRegex","isAddressCache","isAddress","options","strict","concatHex","values","acc","slice","start","end","sliceHex","sliceBytes","assertEndOffset","SliceOffsetOutOfBoundsError","value_","NegativeOffsetError","offset","PositionOutOfBoundsError","length","position","RecursiveReadLimitExceededError","count","limit","staticCursor","position_","byte","oldPosition","createCursor","recursiveReadLimit","cursor","formatGwei","wei","unit","formatUnits","gweiUnits","prettyPrint","args","entries","maxLength","InvalidLegacyVError","v","InvalidSerializableTransactionError","transaction","InvalidStorageKeySizeError","storageKey","FeeCapTooHighError","cause","maxFeePerGas","TipAboveFeeCapError","maxPriorityFeePerGas","defineFormatter","type","format","exclude","overrides","formatted","rpcTransactionType","formatTransactionRequest","request","rpcRequest","bytesToHex","numberToHex","defineTransactionRequest","transactionType","formatTransaction","transaction_","hexToNumber","defineTransaction","formatBlock","block","transactions","defineBlock","blobsToCommitments","parameters","kzg","blobs","hexToBytes","commitments","blob","blobsToProofs","proofs","commitment","setBigUint64","view","byteOffset","_u32_max","wh","wl","SHA2","padOffset","buffer","dataView","oview","outLen","res","finished","destroyed","Chi","c","Maj","SHA256_K","IV","SHA256_W","SHA256","A","C","D","E","F","G","H","W15","W2","s0","s1","sigma1","T1","T2","sha256","noble_sha256","toHex","commitmentToVersionedHash","version","versionedHash","commitmentsToVersionedHashes","hashes","blobsPerTransaction","bytesPerFieldElement","fieldElementsPerBlob","bytesPerBlob","maxBytesPerTransaction","versionedHashVersionKzg","BlobSizeTooLargeError","maxSize","EmptyBlobError","InvalidVersionedHashSizeError","InvalidVersionedHashVersionError","toBlobs","size_","active","toBlobSidecars","sidecars","getTransactionType","formatLog","log","eventName","InvalidChainIdError","defineChain","chain","toRlp","encodable","getEncodable","getEncodableList","getEncodableBytes","list","bodyLength","sizeOfBodyLength","getSizeOfLength","encode","bytesOrHex","sizeOfBytesLength","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","defineTransactionReceipt","assertTransactionEIP4844","blobVersionedHashes","assertTransactionEIP1559","assertTransactionEIP2930","gasPrice","assertTransactionLegacy","accessList","serializeAccessList","serializedAccessList","storageKeys","serializeTransaction","signature","serializeTransactionEIP1559","serializeTransactionEIP2930","serializeTransactionEIP4844","serializeTransactionLegacy","gas","nonce","maxFeePerBlobGas","serializedTransaction","toYParitySignatureArray","proof","r","yParity","trim","maxUint16"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]}