{"version":3,"mappings":"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","names":["b","A","n","l","_","C","g","x","R","i","S","y","o","T","a","p","h","j","d","r","c","u","s","f","I","E","w","m","$","D","k","N","F","__vitePreload","B","H"],"ignoreList":[0],"sources":["../../node_modules/@wormhole-foundation/wormhole-connect/lib/algorand-DGFW1DOS.mjs"],"sourcesContent":["var b = Object.defineProperty;\nvar A = (e, n, t) => n in e ? b(e, n, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[n] = t;\nvar l = (e, n, t) => A(e, typeof n != \"symbol\" ? n + \"\" : n, t);\nimport { C, i as x, aE as w, k as R, aF as i, l as S, aG as y, o as T, p, aH as h, q as j, t as E, aI as k, aJ as N, c as B } from \"./index-DgePBEwv.mjs\";\nclass _ extends C {\n}\nconst g = class g extends x {\n  constructor(n, t) {\n    super(n, t ?? R(n, g._platform));\n  }\n  getRpc(n) {\n    if (n in this.config)\n      return new i.Algodv2(\"\", this.config[n].rpc);\n    throw new Error(\"No configuration available for chain: \" + n);\n  }\n  getChain(n) {\n    if (n in this.config)\n      return new _(n, this);\n    throw new Error(\"No configuration available for chain: \" + n);\n  }\n  static nativeTokenId(n, t) {\n    if (!g.isSupportedChain(t))\n      throw new Error(`invalid chain for Algorand: ${t}`);\n    return S.chainAddress(t, y);\n  }\n  static isNativeTokenId(n, t, o) {\n    return !g.isSupportedChain(t) || o.chain !== t ? !1 : this.nativeTokenId(n, t) == o;\n  }\n  static isSupportedChain(n) {\n    return T(n) === g._platform;\n  }\n  static async getDecimals(n, t, o) {\n    const a = p(o) ? 0 : new h(o).toInt();\n    if (a === 0)\n      return j(g._platform);\n    const d = await t.getAssetByID(a).do(), r = i.modelsv2.Asset.from_obj_for_encoding(d);\n    if (!r.params || !r.params.decimals)\n      throw new Error(\"Could not fetch token details\");\n    return Number(r.params.decimals);\n  }\n  static async getBalance(n, t, o, a) {\n    const d = p(a) ? 0 : new h(a).toInt();\n    if (d === 0) {\n      const c = await t.accountInformation(o).do(), u = i.modelsv2.Account.from_obj_for_encoding(c);\n      return BigInt(u.amount);\n    }\n    const r = await t.accountAssetInformation(o, d).do(), s = i.modelsv2.AssetHolding.from_obj_for_encoding(r);\n    return BigInt(s.amount);\n  }\n  static async getBalances(n, t, o, a) {\n    let d;\n    if (a.includes(\"native\")) {\n      const s = await t.accountInformation(o).do(), c = i.modelsv2.Account.from_obj_for_encoding(s);\n      d = BigInt(c.amount);\n    }\n    return a.map(async (s) => {\n      if (p(s))\n        return { native: d };\n      const c = new h(s).toInt(), u = await t.accountAssetInformation(o, c).do(), f = i.modelsv2.AssetHolding.from_obj_for_encoding(u);\n      return BigInt(f.amount);\n    }).reduce((s, c) => Object.assign(s, c), {});\n  }\n  static async sendWait(n, t, o) {\n    const r = o.map((f, I) => i.decodeSignedTransaction(f)).map((f, I) => f.txn.txID()), { txId: s } = await t.sendRawTransaction(o).do();\n    if (!s)\n      throw new Error(\"Transaction(s) failed to send\");\n    const c = await i.waitForConfirmation(t, s, 4);\n    if (!i.modelsv2.PendingTransactionResponse.from_obj_for_encoding(c).confirmedRound)\n      throw new Error(\"Transaction(s) could not be confirmed in 4 rounds\");\n    return r;\n  }\n  static async getLatestBlock(n) {\n    const t = await n.status().do(), o = i.modelsv2.NodeStatusResponse.from_obj_for_encoding(t);\n    if (!o.lastRound)\n      throw new Error(\"Error getting status from node\");\n    return Number(o.lastRound);\n  }\n  static async getLatestFinalizedBlock(n) {\n    const t = await n.status().do(), o = i.modelsv2.NodeStatusResponse.from_obj_for_encoding(t);\n    if (!o.lastRound)\n      throw new Error(\"Error getting status from node\");\n    return Number(o.lastRound);\n  }\n  static chainFromChainId(n) {\n    const t = E(g._platform, n);\n    if (t === void 0)\n      throw new Error(`Unknown native chain id ${n}`);\n    const [o, a] = t;\n    return [o, a];\n  }\n  static async chainFromRpc(n) {\n    const t = await n.versionsCheck().do(), o = i.modelsv2.Version.from_obj_for_encoding(t);\n    return this.chainFromChainId(o.genesisId);\n  }\n};\nl(g, \"_platform\", w);\nlet m = g;\nasync function $(e, n) {\n  const [t, o] = await m.chainFromRpc(e);\n  return new D(o, e, n);\n}\nclass D {\n  constructor(n, t, o, a = !1) {\n    l(this, \"_chain\");\n    l(this, \"_debug\");\n    l(this, \"_account\");\n    this._chain = n, this._debug = a, this._account = k(o);\n  }\n  chain() {\n    return this._chain;\n  }\n  address() {\n    return this._account.addr;\n  }\n  async sign(n) {\n    const t = [], o = n.map((r, s) => r.transaction.tx), a = N(o), d = n.map((r, s) => (r.transaction.tx = a[s], r));\n    for (const r of d) {\n      const { description: s, transaction: c } = r, { tx: u, signer: f } = c;\n      this._debug && (console.log(u._getDictForDisplay()), console.log(u.txID())), f ? (this._debug && console.log(`Signing: ${s} with signer ${f.address} for address ${this.address()}`), t.push(await f.signTxn(u))) : (this._debug && console.log(`Signing: ${s} without signer for address ${this.address()}`), t.push(u.signTxn(this._account.sk)));\n    }\n    return t;\n  }\n}\nconst F = {\n  Address: h,\n  Platform: m,\n  getSigner: $,\n  protocols: {\n    WormholeCore: () => import(\"./index-BaZ9ZXQ8.mjs\").then((e) => e.i),\n    TokenBridge: () => import(\"./index-Dlnoph5j.mjs\")\n  },\n  getChain: (e, n, t) => new _(n, new m(e, B(e, w, {\n    [n]: t\n  })))\n}, H = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  default: F\n}, Symbol.toStringTag, { value: \"Module\" }));\nexport {\n  m as A,\n  H as a\n};\n"],"file":"assets/algorand-DGFW1DOS.js"}