{"version":3,"file":"Profile.js","sources":["../../src/UI/Profile/Summary.svelte","../../src/UI/Profile/IconSocialMedia.svelte","../../src/UI/Profile/SocialMedia.svelte","../../src/layouts/Profile.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { createQuery } from \"@tanstack/svelte-query\";\n  import { formatBalance } from \"~/utils/index\";\n  import { user, chain } from \"~/store\";\n  import { getHoldingToken, handleValidateAddress } from \"~/lib/queryAPI\";\n  import { t } from \"~/lib/i18n\";\n  import { isNimbusVersion } from \"~/utils/constants\";\n\n  import Loading from \"~/components/Loading.svelte\";\n  import LoadingPremium from \"~/components/LoadingPremium.svelte\";\n  import TooltipNumber from \"~/components/TooltipNumber.svelte\";\n\n  export let selectedAddress;\n\n  let topThreeTokenHolding: any = [];\n  let closedHoldingPosition: any = [];\n  let netWorth = 0;\n\n  $: queryValidate = createQuery({\n    queryKey: [\"validate\", selectedAddress],\n    queryFn: () => handleValidateAddress(selectedAddress),\n    retry: false,\n    enabled: Boolean(selectedAddress && selectedAddress?.length !== 0),\n  });\n\n  $: queryTokenHolding = createQuery({\n    queryKey: [\"token-holding\", selectedAddress],\n    queryFn: () =>\n      getHoldingToken(selectedAddress, $chain, $queryValidate.data),\n    enabled: Boolean(\n      selectedAddress?.length !== 0 &&\n        Object.keys($user).length !== 0 &&\n        !$queryValidate.isFetching,\n    ),\n  });\n\n  $: {\n    if (\n      !$queryTokenHolding.isError &&\n      $queryTokenHolding.data &&\n      $queryTokenHolding?.data !== undefined\n    ) {\n      const data = $queryTokenHolding?.data?.filter(\n        (item: any) =>\n          Number(item?.amount) !== 0 && Number(item.price.price) !== 0,\n      );\n\n      const formatData = data.map((item: any) => {\n        return {\n          ...item,\n          value: Number(item.amount) * Number(item.price.price),\n        };\n      });\n\n      closedHoldingPosition = $queryTokenHolding?.data\n        ?.filter(\n          (item: any) =>\n            item?.profit?.realizedProfit !== undefined &&\n            Number(item.amount) === 0,\n        )\n        .sort(\n          (a: any, b: any) =>\n            Number(b?.profit.realizedProfit) - Number(a?.profit.realizedProfit),\n        );\n\n      netWorth = formatData.reduce(\n        (prev: any, item: any) => prev + item.value,\n        0,\n      );\n\n      const sortFormatToken = formatData.sort(\n        (a: any, b: any) => b.value - a.value,\n      );\n\n      topThreeTokenHolding = sortFormatToken.slice(0, 3).map((item: any) => {\n        return {\n          ...item,\n          ratio: (item.value / netWorth) * 100,\n        };\n      });\n    }\n  }\n</script>\n\n<div class=\"xl:col-span-2 col-span-4 border border_0000001a rounded-xl\">\n  {#if $queryTokenHolding.isFetching}\n    <div class=\"w-full h-full flex justify-center items-center p-6\">\n      {#if isNimbusVersion}\n        <LoadingPremium />\n      {:else}\n        <Loading />\n      {/if}\n    </div>\n  {:else}\n    <div class=\"flex flex-col gap-3 p-6\">\n      {#if netWorth !== 0}\n        <div>\n          {$t(\"Your Portfolio is value at\")}\n          <span class=\"font-medium\">\n            ${formatBalance(netWorth)}\n          </span>\n          {$t(\"is diversified across\")}\n          {#each topThreeTokenHolding as item}\n            <span class=\"font-medium\">\n              {item.name}\n              (<TooltipNumber number={item.ratio} type=\"percent\" />%),\n            </span>{\" \"}\n          {/each}\n          {$t(\"and other assets\")}.\n        </div>\n        {#if closedHoldingPosition.length !== 0 && closedHoldingPosition[0]?.profit?.realizedProfit > 0}\n          <div>\n            {$t(\"The best trading is\")}\n            <span class=\"font-medium\">\n              {closedHoldingPosition[0]?.name}\n            </span>\n            {$t(\"with\")}\n            <span class=\"font-medium text-green-400\">\n              ${formatBalance(closedHoldingPosition[0]?.profit?.realizedProfit)}\n              {$t(\"earning\")}\n            </span>\n          </div>\n        {/if}\n      {:else}\n        <div>\n          {$t(\"Your Portfolio is value at\")}\n          <span class=\"font-medium\">\n            ${formatBalance(netWorth)}\n          </span>\n        </div>\n      {/if}\n    </div>\n  {/if}\n</div>\n\n<style></style>\n","<script>\n  export let type;\n</script>\n\n{#if type === \"Twitter\"}\n  <!-- twitter img -->\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"40\"\n    height=\"40\"\n    viewBox=\"0 0 448 512\"\n  >\n    <path\n      fill=\"currentColor\"\n      d=\"M64 32C28.7 32 0 60.7 0 96v320c0 35.3 28.7 64 64 64h320c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zm297.1 84L257.3 234.6L379.4 396h-95.6L209 298.1L123.3 396H75.8l111-126.9L69.7 116h98l67.7 89.5l78.2-89.5h47.5zm-37.8 251.6L153.4 142.9h-28.3l171.8 224.7h26.3z\"\n    />\n  </svg>\n{:else if type === \"Telegram\"}\n  <!-- telegram img -->\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"40\"\n    height=\"40\"\n    viewBox=\"0 0 256 256\"\n  >\n    <defs>\n      <linearGradient id=\"logosTelegram0\" x1=\"50%\" x2=\"50%\" y1=\"0%\" y2=\"100%\">\n        <stop offset=\"0%\" stop-color=\"#2AABEE\" /><stop\n          offset=\"100%\"\n          stop-color=\"#229ED9\"\n        />\n      </linearGradient>\n    </defs>\n    <path\n      fill=\"url(#logosTelegram0)\"\n      d=\"M128 0C94.06 0 61.48 13.494 37.5 37.49A128.038 128.038 0 0 0 0 128c0 33.934 13.5 66.514 37.5 90.51C61.48 242.506 94.06 256 128 256s66.52-13.494 90.5-37.49c24-23.996 37.5-56.576 37.5-90.51c0-33.934-13.5-66.514-37.5-90.51C194.52 13.494 161.94 0 128 0Z\"\n    />\n    <path\n      fill=\"#FFF\"\n      d=\"M57.94 126.648c37.32-16.256 62.2-26.974 74.64-32.152c35.56-14.786 42.94-17.354 47.76-17.441c1.06-.017 3.42.245 4.96 1.49c1.28 1.05 1.64 2.47 1.82 3.467c.16.996.38 3.266.2 5.038c-1.92 20.24-10.26 69.356-14.5 92.026c-1.78 9.592-5.32 12.808-8.74 13.122c-7.44.684-13.08-4.912-20.28-9.63c-11.26-7.386-17.62-11.982-28.56-19.188c-12.64-8.328-4.44-12.906 2.76-20.386c1.88-1.958 34.64-31.748 35.26-34.45c.08-.338.16-1.598-.6-2.262c-.74-.666-1.84-.438-2.64-.258c-1.14.256-19.12 12.152-54 35.686c-5.1 3.508-9.72 5.218-13.88 5.128c-4.56-.098-13.36-2.584-19.9-4.708c-8-2.606-14.38-3.984-13.82-8.41c.28-2.304 3.46-4.662 9.52-7.072Z\"\n    />\n  </svg>\n{/if}\n\n<style></style>\n","<script lang=\"ts\">\n  import { isDarkMode } from \"~/store\";\n  import { t } from \"~/lib/i18n\";\n\n  import Button from \"~/components/Button.svelte\";\n  import IconSocialMedia from \"~/UI/Profile/IconSocialMedia.svelte\";\n  import AppOverlay from \"~/components/Overlay.svelte\";\n\n  export let isEdit;\n  export let typeSocialMedia: \"Twitter\" | \"Telegram\";\n  export let socialData;\n  export let submitSocialData = (data) => {};\n\n  let isOpenModal = false;\n  let linkHref = \"\";\n  let userName = socialData.username;\n  let label = socialData.label;\n\n  $: {\n    if (typeSocialMedia) {\n      switch (typeSocialMedia) {\n        case \"Twitter\":\n          linkHref = \"https://twitter.com/\";\n          break;\n        case \"Telegram\":\n          linkHref = \"https://t.me/\";\n          break;\n        default:\n          linkHref = \"\";\n      }\n    }\n  }\n\n  const onSubmitGetSocialInfo = () => {\n    submitSocialData({\n      label,\n      username: userName,\n      type: typeSocialMedia,\n    });\n    isOpenModal = false;\n\n    label = \"\";\n    userName = \"\";\n  };\n\n  $: {\n    if (Object.keys(socialData).length !== 0) {\n      userName = socialData.username;\n      label = socialData.label;\n    }\n  }\n</script>\n\n<div\n  class=\"w-full h-full rounded-xl border border_0000001a p-5 flex flex-col gap-2\"\n>\n  <IconSocialMedia type={typeSocialMedia} />\n\n  <div class=\"flex flex-col mb-2\">\n    <div class=\"text-base\">\n      {socialData.label || typeSocialMedia}\n    </div>\n    <div class=\"text-sm text-gray-400\">\n      @{socialData?.username || \"username\"}\n    </div>\n  </div>\n\n  {#if socialData && socialData?.username?.length !== 0}\n    <div class=\"h-[40px]\">\n      {#if isEdit}\n        <Button variant={typeSocialMedia} on:click={() => (isOpenModal = true)}>\n          {$t(\"Edit info\")}\n        </Button>\n      {:else}\n        <Button variant={typeSocialMedia}>\n          <a target=\"_blank\" href={linkHref + socialData?.username}\n            >{typeSocialMedia === \"Telegram\" ? $t(\"Chat with me\") : $t(\"Follow\")}</a\n          >\n        </Button>\n      {/if}\n    </div>\n  {:else}\n    <div class=\"h-[40px]\">\n      {#if isEdit}\n        <Button variant={typeSocialMedia} on:click={() => (isOpenModal = true)}>\n          {$t(\"Add info\")}\n        </Button>\n      {:else}\n        <Button variant={typeSocialMedia} disabled>\n          {typeSocialMedia === \"Telegram\" ? $t(\"Chat with me\") : $t(\"Follow\")}\n        </Button>\n      {/if}\n    </div>\n  {/if}\n</div>\n\n<!-- Modal get user social info -->\n<AppOverlay\n  clickOutSideToClose\n  isOpen={isOpenModal}\n  on:close={() => {\n    isOpenModal = false;\n  }}\n>\n  <div class=\"flex flex-col gap-4 xl:mt-0 mt-4\">\n    <div class=\"title-3 font-semibold\">{$t(\"Add your social information\")}</div>\n    <form\n      on:submit|preventDefault={onSubmitGetSocialInfo}\n      class=\"flex flex-col gap-3\"\n    >\n      <div\n        class={`flex flex-col gap-1 input-2 input-border w-full py-[6px] px-3 ${\n          label && !$isDarkMode ? \"bg-[#F0F2F7]\" : \"bg_fafafbff\"\n        }`}\n      >\n        <div\n          class={`text-base font-medium ${\n            $isDarkMode ? \"text-gray-400\" : \"text-[#666666]\"\n          }`}\n        >\n          {$t(\"Label\")}\n        </div>\n        <input\n          type=\"text\"\n          id=\"label\"\n          name=\"label\"\n          placeholder=\"Your label\"\n          value={label}\n          class={`p-0 border-none focus:outline-none focus:ring-0 text-sm font-normal text-[#5E656B] placeholder-[#5E656B] ${\n            label && !$isDarkMode ? \"bg-[#F0F2F7]\" : \"bg-transparent\"\n          } ${\n            $isDarkMode ? \"text-white\" : \"text-[#5E656B] placeholder-[#5E656B]\"\n          }`}\n          on:change={(event) => {\n            label = event?.target.value;\n          }}\n        />\n      </div>\n\n      <div\n        class={`flex flex-col gap-1 input-2 input-border w-full py-[6px] px-3 ${\n          userName && !$isDarkMode ? \"bg-[#F0F2F7]\" : \"bg_fafafbff\"\n        }`}\n      >\n        <div\n          class={`text-base font-medium ${\n            $isDarkMode ? \"text-gray-400\" : \"text-[#666666]\"\n          }`}\n        >\n          {$t(\"Username\")}\n        </div>\n        <input\n          type=\"text\"\n          id=\"username\"\n          name=\"username\"\n          placeholder={$t(\"Your username\")}\n          value={userName}\n          class={`p-0 border-none focus:outline-none focus:ring-0 text-sm font-normal text-[#5E656B] placeholder-[#5E656B] ${\n            userName && !$isDarkMode ? \"bg-[#F0F2F7]\" : \"bg-transparent\"\n          } ${\n            $isDarkMode ? \"text-white\" : \"text-[#5E656B] placeholder-[#5E656B]\"\n          }`}\n          on:change={(event) => {\n            userName = event?.target.value;\n          }}\n        />\n      </div>\n\n      <div class=\"flex justify-end gap-4\">\n        <div class=\"w-[120px]\">\n          <Button\n            variant=\"secondary\"\n            on:click={() => {\n              isOpenModal = false;\n              label = socialData?.label || \"\";\n              userName = socialData?.username || \"\";\n            }}\n          >\n            {$t(\"Cancel\")}\n          </Button>\n        </div>\n        <div class=\"w-[120px]\">\n          <Button type=\"submit\">{$t(\"Submit\")}</Button>\n        </div>\n      </div>\n    </form>\n  </div>\n</AppOverlay>\n\n<style>\n  :global(body) .bg_fafafbff {\n    background: #fafafbff;\n  }\n  :global(body.dark) .bg_fafafbff {\n    background: #212121;\n  }\n</style>\n","<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n  import { shorterAddress } from \"~/utils/index\";\n  import { triggerToast, triggerClickOutside } from \"~/utils/functions\";\n  import { nimbus } from \"~/lib/network\";\n  import { createQuery } from \"@tanstack/svelte-query\";\n  import {\n    user,\n    isDarkMode,\n    typeWallet,\n    userId,\n    userPublicAddress,\n    chain,\n  } from \"~/store\";\n  import { flatMap } from \"lodash\";\n  import { detectedGeneration } from \"~/lib/chains\";\n  import {\n    handleValidateAddress,\n    getHoldingNFT,\n    getListAddress,\n  } from \"~/lib/queryAPI\";\n  import { t } from \"~/lib/i18n\";\n  import { isNimbusVersion } from \"~/utils/constants\";\n\n  import RandomAvatar from \"~/components/RandomAvatar.svelte\";\n  import ProfitData from \"~/UI/Profile/ProfitData.svelte\";\n  import InviterQr from \"~/UI/Profile/InviterQR.svelte\";\n  import Summary from \"~/UI/Profile/Summary.svelte\";\n  import SocialMedia from \"~/UI/Profile/SocialMedia.svelte\";\n  import ClosedPositionChart from \"~/UI/Profile/ClosedPositionChart.svelte\";\n  import TopProfitAndLoss from \"~/UI/Profile/TopProfitAndLoss.svelte\";\n  import Button from \"~/components/Button.svelte\";\n  import AppOverlay from \"~/components/Overlay.svelte\";\n  import LoadingPremium from \"~/components/LoadingPremium.svelte\";\n  import TooltipNumber from \"~/components/TooltipNumber.svelte\";\n  import ErrorBoundary from \"~/components/ErrorBoundary.svelte\";\n  import Loading from \"~/components/Loading.svelte\";\n\n  import UpArrow from \"~/assets/up-arrow.svg\";\n\n  let userProfile: any = {};\n  let dataNftHighlight = {};\n  let dataNftHolding: any = [];\n  let listAddress: any = [];\n  let showPopover = false;\n  let isEdit = false;\n  let isLoadingSaveProfile = false;\n  let isOpenModalSelectNFT = false;\n\n  let userIdParams = \"\";\n  let selectedAddress = \"\";\n  // let description = \"What's on your mind?\";\n  let description = $t(\"on your mind\");\n  let selectProfileNFT: any = {};\n  let socialDataTwitter = {\n    label: \"Twitter\",\n    username: \"\",\n  };\n  let socialDataTelegram = {\n    label: \"Telegram\",\n    username: \"\",\n  };\n\n  onMount(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    let idParams = urlParams.get(\"id\");\n    if (idParams) {\n      userIdParams = idParams;\n      getUserProfile(idParams);\n    }\n  });\n\n  const submitSocialData = (data: any) => {\n    if (data.type === \"Twitter\") {\n      socialDataTwitter = {\n        label: data.label,\n        username: data.username,\n      };\n    }\n    if (data.type === \"Telegram\") {\n      socialDataTelegram = {\n        label: data.label,\n        username: data.username,\n      };\n    }\n  };\n\n  const handleSubmitProfile = async () => {\n    isLoadingSaveProfile = true;\n    try {\n      const payload = {\n        intro: description,\n        profileAddress: selectedAddress,\n        social: {\n          twitter: {\n            id: socialDataTwitter.username,\n            status: socialDataTwitter.label,\n          },\n          telegram: {\n            id: socialDataTelegram.username,\n            status: socialDataTelegram.label,\n          },\n        },\n        highlightNft: {\n          chain: selectProfileNFT?.chain,\n          tokenId: selectProfileNFT?.tokenId?.toString(),\n          contractAddress: selectProfileNFT?.contractAddress,\n        },\n      };\n\n      await nimbus.put(`/users/${userIdParams}/profile`, payload);\n      triggerToast($t(\"Your profile updated successfully!\"), \"success\");\n    } catch (e) {\n      console.error(e);\n      triggerToast(\n        $t(\"Something wrong when updating your profile. Please try again!\"),\n        \"fail\",\n      );\n    } finally {\n      isLoadingSaveProfile = false;\n      isEdit = false;\n    }\n  };\n\n  const handleCancelEditProfile = () => {\n    isEdit = false;\n\n    selectedAddress = userProfile?.profileAddress || $userPublicAddress;\n    selectProfileNFT = dataNftHighlight;\n    description = userProfile?.intro || $t(\"on your mind\");\n    socialDataTelegram = {\n      label: userProfile.social?.telegram?.status || \"Telegram\",\n      username: userProfile.social?.telegram?.id || \"\",\n    };\n    socialDataTwitter = {\n      label: userProfile.social?.twitter?.status || \"Twitter\",\n      username: userProfile.social?.twitter?.id || \"\",\n    };\n  };\n\n  const getUserProfile = async (id) => {\n    try {\n      const response: any = await nimbus.get(`/users/${id}/profile`);\n      userProfile = response?.data;\n\n      selectedAddress = userProfile?.profileAddress || $userPublicAddress;\n      description = userProfile?.intro || $t(\"on your mind\");\n      socialDataTelegram = {\n        label: userProfile.social?.telegram?.status || \"Telegram\",\n        username: userProfile.social?.telegram?.id || \"\",\n      };\n      socialDataTwitter = {\n        label: userProfile.social?.twitter?.status || \"Twitter\",\n        username: userProfile.social?.twitter?.id || \"\",\n      };\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  $: queryValidate = createQuery({\n    queryKey: [\"validate\", selectedAddress],\n    queryFn: () => handleValidateAddress(selectedAddress),\n    retry: false,\n    enabled: Boolean(selectedAddress && selectedAddress?.length !== 0),\n  });\n\n  const formatDataListAddress = (data: any) => {\n    listAddress = data?.map((item: any) => {\n      return {\n        id: item.id,\n        type: item.type,\n        label: item.label,\n        value: item.type === \"CEX\" ? item.id : item.accountId,\n        logo: item.type === \"CEX\" ? item.logo : detectedGeneration(item.type),\n      };\n    });\n  };\n\n  const formatDataHoldingNFT = (data: any) => {\n    const flattenData = flatMap(data, (item) => {\n      return item.tokens?.map((token: any) => ({\n        ...item,\n        ...token,\n      }));\n    });\n\n    dataNftHolding = flattenData?.map((item) => {\n      return {\n        chain: item?.collection?.chain || \"\",\n        tokenId: item?.tokenId || \"\",\n        contractAddress: item?.contractAddress || \"\",\n\n        imageUrl:\n          item?.imageUrl ||\n          \"https://i.seadn.io/gae/TLlpInyXo6n9rzaWHeuXxM6SDoFr0cFA0TWNpFQpv5-oNpXlYKzxsVUynd0XUIYBW2G8eso4-4DSQuDR3LC_2pmzfHCCrLBPcBdU?auto=format&dpr=1&w=384\",\n        rarityScore: item?.rarityScore || 0,\n        name: item?.name || \"\",\n        collection: item?.collection || {},\n        nativeToken: item?.nativeToken || {},\n        marketPrice: item?.marketPrice || 0,\n        floorPrice: item?.floorPrice || 0,\n        price: item?.price || 0,\n        cost: item?.cost || 0,\n      };\n    });\n  };\n\n  // query nft holding\n  $: queryNftHolding = createQuery({\n    queryKey: [\"nft-holding\", selectedAddress],\n    queryFn: () => getHoldingNFT(selectedAddress, $chain, $queryValidate.data),\n    enabled:\n      selectedAddress?.length !== 0 &&\n      Object.keys($user)?.length !== 0 &&\n      !$queryValidate.isFetching,\n  });\n\n  $: {\n    if (!$queryNftHolding.isError && $queryNftHolding.data !== undefined) {\n      formatDataHoldingNFT($queryNftHolding.data);\n    }\n  }\n\n  // query list address\n  $: query = createQuery({\n    queryKey: [\"list-address\"],\n    queryFn: () => getListAddress(),\n    enabled: $user && Object.keys($user)?.length !== 0,\n  });\n\n  $: {\n    if (\n      !$query.isError &&\n      $query.data !== undefined &&\n      $query.data.length !== 0\n    ) {\n      formatDataListAddress($query.data);\n    }\n  }\n\n  $: {\n    if (\n      Object.keys(userProfile)?.length !== 0 &&\n      userProfile?.highlightNft !== null &&\n      Object.keys(userProfile?.highlightNft)?.length !== 0 &&\n      dataNftHolding?.length !== 0\n    ) {\n      dataNftHighlight =\n        dataNftHolding?.find(\n          (item: any) =>\n            item.contractAddress.toLowerCase() ===\n            userProfile?.highlightNft.contractAddress.toLowerCase(),\n        ) || {};\n\n      selectProfileNFT = dataNftHighlight;\n    }\n  }\n</script>\n\n<ErrorBoundary>\n  <div\n    class=\"xl:min-h-screen max-w-[1600px] m-auto w-[94%] py-8 flex flex-col gap-10\"\n  >\n    <div class=\"flex flex-col justify-center gap-2\">\n      <div class=\"text-4xl font-medium\">{$t(\"My Profile\")}</div>\n      <div class=\"text-xl\">\n        {$t(\"One place\")}\n      </div>\n    </div>\n\n    <form\n      on:submit|preventDefault={handleSubmitProfile}\n      class=\"flex flex-col gap-4\"\n    >\n      {#if $userId && Object.keys($user)?.length !== 0 && $userId === userIdParams}\n        <div class=\"flex items-center justify-end gap-2\">\n          {#if isEdit}\n            <div class=\"w-[120px]\">\n              <Button variant=\"secondary\" on:click={handleCancelEditProfile}>\n                {$t(\"Cancel\")}\n              </Button>\n            </div>\n            <div class=\"w-[120px]\">\n              <Button\n                type=\"submit\"\n                isLoading={isLoadingSaveProfile}\n                disabled={isLoadingSaveProfile}\n              >\n                {$t(\"Save\")}\n              </Button>\n            </div>\n          {:else}\n            <div class=\"xl:w-[160px] w-[220px]\">\n              <Button on:click={() => (isEdit = true)}>\n                {$t(\"Edit your profile\")}\n              </Button>\n            </div>\n          {/if}\n        </div>\n      {/if}\n\n      <div\n        class=\"w-full flex xl:flex-row flex-col rounded-xl py-10 xl:px-10 px-4 gap-9 border-2 border_0000001a\"\n      >\n        <div class=\"xl:w-[20%] w-full flex flex-col gap-5 items-center\">\n          <div class=\"flex flex-col gap-3 items-center justify-start\">\n            <RandomAvatar size={80} />\n\n            <div\n              class={`relative py-1 ${isEdit ? \"button\" : \"\"}`}\n              on:click={() => {\n                if (isEdit) {\n                  showPopover = !showPopover;\n                }\n              }}\n              use:triggerClickOutside\n              on:click_outside={() => {\n                showPopover = false;\n              }}\n            >\n              <div\n                class={`text-base font-medium flex items-center gap-2 ${\n                  $isDarkMode || isEdit ? \"text-white\" : \"text-black\"\n                }`}\n              >\n                {shorterAddress(selectedAddress)}\n                {#if isEdit}\n                  <img\n                    src={UpArrow}\n                    alt=\"\"\n                    class=\"transform rotate-180 w-3 h-3\"\n                    class:rotate-0={showPopover}\n                  />\n                {/if}\n              </div>\n\n              {#if showPopover}\n                <div\n                  class=\"select_content mt-2 absolute left-1/2 transform -translate-x-1/2 z-8 flex flex-col p-2 text-sm transform rounded-lg top-8 w-max xl:max-h-[310px] max-h-[380px]\"\n                  style=\"box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.15); overflow-y: overlay;\"\n                >\n                  {#each listAddress as item}\n                    <div\n                      class={`cursor-pointer p-2 rounded-lg ${\n                        $isDarkMode ? \"hover:bg-[#000]\" : \"hover:bg-gray-100\"\n                      }`}\n                      on:click={() => {\n                        selectedAddress = item.value;\n\n                        description = $t(\"on your mind\");\n                        selectProfileNFT = {};\n                        socialDataTwitter = {\n                          label: \"Twitter\",\n                          username: \"\",\n                        };\n                        socialDataTelegram = {\n                          label: \"Telegram\",\n                          username: \"\",\n                        };\n\n                        showPopover = false;\n                      }}\n                    >\n                      <div class=\"flex items-center gap-2\">\n                        <img\n                          src={item.logo}\n                          alt=\"\"\n                          class=\"w-5 h-5 rounded-full\"\n                        />\n                        <div class=\"flex flex-col\">\n                          <div class=\"text-xs font-medium text_00000099\">\n                            {item.label}\n                          </div>\n                          <div\n                            class={`text-xs ${\n                              $isDarkMode ? \"text-white\" : \"text-black\"\n                            }`}\n                          >\n                            {shorterAddress(item?.value)}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  {/each}\n                </div>\n              {/if}\n            </div>\n          </div>\n\n          <InviterQr />\n        </div>\n        <div class=\"flex-1 flex flex-col gap-4\">\n          <div class=\"text-3xl font-medium\">{$t(\"My Story\")}</div>\n          <div class=\"grid grid-cols-4 gap-6\">\n            <Summary {selectedAddress} />\n\n            <div\n              class=\"xl:col-span-2 col-span-4 p-5 rounded-xl border border_0000001a\"\n            >\n              {#if selectProfileNFT && Object.keys(selectProfileNFT)?.length !== 0}\n                <div class=\"h-full flex sm:flex-row flex-col gap-3\">\n                  <div\n                    class=\"sm:w-2/5 w-full flex flex-col gap-2 justify-center items-center\"\n                  >\n                    <img\n                      src={selectProfileNFT?.imageUrl}\n                      alt=\"\"\n                      class=\"rounded-xl w-full h-[200px] object-contain\"\n                    />\n                    {#if isEdit}\n                      <div class=\"w-max\">\n                        <Button\n                          variant=\"secondary\"\n                          on:click={() => (isOpenModalSelectNFT = true)}\n                        >\n                          {$t(\"Change\")}\n                        </Button>\n                      </div>\n                    {/if}\n                  </div>\n                  <div\n                    class=\"flex-1 w-full h-full flex flex-col justify-center gap-5\"\n                  >\n                    <div class=\"flex flex-col\">\n                      <div class=\"font-medium text-lg\">\n                        {selectProfileNFT?.name}\n                      </div>\n                      <div class=\"flex items-center gap-2 text-lg font-medium\">\n                        <div>\n                          {[\"EVM\", \"MOVE\"].includes($typeWallet)\n                            ? \"Token ID\"\n                            : \"Inscription\"}\n                        </div>\n                        <div>\n                          #{selectProfileNFT?.tokenId}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"flex flex-col gap-2\">\n                      <div class=\"flex justify-between\">\n                        <div class=\"text-gray-400\">{$t(\"Rarity\")}</div>\n                        <div>{selectProfileNFT?.rarityScore}</div>\n                      </div>\n\n                      <div class=\"flex justify-between\">\n                        <div class=\"text-gray-400\">{$t(\"Floor Price\")}</div>\n                        <div class=\"flex items-center\">\n                          <TooltipNumber\n                            number={Number(selectProfileNFT?.floorPrice)}\n                            type=\"balance\"\n                          />\n                          <span class=\"ml-1\">\n                            {selectProfileNFT?.nativeToken?.symbol || \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              {:else}\n                <div\n                  class=\"flex flex-col justify-center items-center gap-2 w-full h-full\"\n                >\n                  <div>\n                    {$t(\"There is no NFT highlight yet in your profile\")}\n                  </div>\n                  {#if $user && Object.keys($user)?.length !== 0 && isEdit}\n                    <div class=\"w-max\">\n                      <Button\n                        variant=\"tertiary\"\n                        on:click={() => (isOpenModalSelectNFT = true)}\n                      >\n                        {$t(\"Add\")} NFT\n                      </Button>\n                    </div>\n                  {/if}\n                </div>\n              {/if}\n            </div>\n\n            <div\n              class=\"xl:col-span-2 col-span-4 p-6 bg-dark-50 text-white rounded-xl\"\n            >\n              {#if isEdit}\n                <textarea\n                  maxlength=\"300\"\n                  rows=\"5\"\n                  value={description}\n                  class=\"bg-dark-50 text-white rounded-lg border-0 outline-none w-full\"\n                  on:change={({ target: { value } }) => (description = value)}\n                />\n              {:else}\n                <div>{description}</div>\n              {/if}\n            </div>\n\n            <div\n              class=\"xl:col-span-2 col-span-4 grid md:grid-cols-2 grid-cols-1 gap-6\"\n            >\n              <SocialMedia\n                {isEdit}\n                typeSocialMedia=\"Twitter\"\n                socialData={socialDataTwitter}\n                {submitSocialData}\n              />\n              <SocialMedia\n                {isEdit}\n                typeSocialMedia=\"Telegram\"\n                socialData={socialDataTelegram}\n                {submitSocialData}\n              />\n            </div>\n\n            <ProfitData {selectedAddress} />\n\n            <TopProfitAndLoss {selectedAddress} />\n\n            <ClosedPositionChart {selectedAddress} />\n          </div>\n        </div>\n      </div>\n    </form>\n  </div>\n</ErrorBoundary>\n\n<!-- Modal select NFT profile -->\n<AppOverlay\n  clickOutSideToClose\n  isOpen={isOpenModalSelectNFT}\n  on:close={() => {\n    isOpenModalSelectNFT = false;\n  }}\n>\n  <div class=\"flex flex-col gap-4\">\n    <div class=\"xl:title-3 title-2 font-semibold\">\n      {$t(\"Select your NFT to set your profile\")}\n    </div>\n    {#if $queryNftHolding.isFetching}\n      <div class=\"flex items-center justify-center h-[465px]\">\n        {#if isNimbusVersion}\n          <LoadingPremium />\n        {:else}\n          <Loading />\n        {/if}\n      </div>\n    {:else}\n      <div>\n        {#if $queryNftHolding.isError || dataNftHolding?.length === 0}\n          <div\n            class=\"flex justify-center items-center p-[6px] h-[465px] text-lg text-gray-400\"\n          >\n            {$t(\"Empty\")}\n          </div>\n        {:else}\n          <div class=\"overflow-y-auto h-[563px] grid grid-cols-3 gap-6\">\n            {#each dataNftHolding as item}\n              <div\n                class=\"rounded-xl border border_0000001a overflow-hidden h-[260px] cursor-pointer\"\n                on:click={() => {\n                  selectProfileNFT = item;\n                  isOpenModalSelectNFT = false;\n                }}\n              >\n                <img\n                  src={item?.imageUrl}\n                  alt=\"\"\n                  class=\"w-full h-full object-contain\"\n                />\n              </div>\n            {/each}\n          </div>\n        {/if}\n      </div>\n    {/if}\n  </div>\n</AppOverlay>\n\n<style>\n  .button {\n    width: max-content;\n    border-radius: 1000px;\n    padding: 4px 18px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    gap: 8px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n  }\n\n  :global(body) .button {\n    background: #20295b;\n  }\n  :global(body.dark) .button {\n    background: #212121;\n  }\n\n  :global(body) .select_content {\n    background: #ffffff;\n    border: 0.5px solid transparent;\n  }\n  :global(body.dark) .select_content {\n    background: #131313;\n    border: 0.5px solid #cdcdcd59;\n  }\n</style>\n"],"names":["ctx","insert","target","div","anchor","t0_value","t3_value","formatBalance","append","span","dirty","set_data","t0","t3","t5_value","t8_value","i","if_block","create_if_block_3","current","t5","each_blocks","t8","tooltipnumber_changes","t4_value","t7_value","t9_value","span0","span1","t2","t2_value","t4","t7","t9","svg","defs","linearGradient","stop0","stop1","path0","path1","path","create_if_block","create_if_block_1","type","$$props","t_1_value","t_1","a","attr","input0","input0_class_value","null_to_empty","div2","div2_class_value","input1","input1_placeholder_value","input1_class_value","div4","div4_class_value","div8","div0","form","div1","div3","div7","div5","div6","t1","t1_value","click_handler","$$invalidate","isOpenModal","click_handler_1","event","label","userName","socialData","UpArrow","img","img_src_value","shorterAddress","src_url_equal","t11_value","t13_value","t16_value","create_if_block_5","div14","div13","div12","div11","div9","div10","t11","t13","t16","textarea","show_if_1","t6_value","create_if_block_8","create_if_block_7","div3_class_value","t6","create_if_block_2","isEdit","selectedAddress","item","description","$t","selectProfileNFT","socialDataTwitter","socialDataTelegram","showPopover","click_handler_3","isOpenModalSelectNFT","click_handler_4","change_handler","value"],"mappings":"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"}