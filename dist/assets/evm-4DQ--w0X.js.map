{"version":3,"mappings":"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","names":["L","G","s","O","n","e","l","S","h","u","t","E","a","w","B","W","r","P","z","b","f","i","g","H","$","v","y","C","x","T","A","p","d","F","N","_","D","K","M","__vitePreload","R","j","q"],"ignoreList":[0],"sources":["../../node_modules/@wormhole-foundation/wormhole-connect/lib/evm-4DQ--w0X.mjs"],"sourcesContent":["var L = Object.defineProperty;\nvar G = (s) => {\n  throw TypeError(s);\n};\nvar O = (s, n, e) => n in s ? L(s, n, { enumerable: !0, configurable: !0, writable: !0, value: e }) : s[n] = e;\nvar l = (s, n, e) => O(s, typeof n != \"symbol\" ? n + \"\" : n, e), S = (s, n, e) => n.has(s) || G(\"Cannot \" + e);\nvar h = (s, n, e) => (S(s, n, \"read from private field\"), e ? e.call(s) : n.get(s)), u = (s, n, e) => n.has(s) ? G(\"Cannot add the same private member more than once\") : n instanceof WeakSet ? n.add(s) : n.set(s, e), o = (s, n, e, t) => (S(s, n, \"write to private field\"), t ? t.call(s, e) : n.set(s, e), e);\nvar E = (s, n, e, t) => ({\n  set _(r) {\n    o(s, n, r, e);\n  },\n  get _() {\n    return h(s, n, t);\n  }\n});\nimport { A as B, d as W, W as b, E as f, P as $, a as M, b as R, c as j, _ as q } from \"./index-DgePBEwv.mjs\";\nvar a, c;\nconst w = class w extends B {\n  /**\n   *  Creates a new **NonceManager** to manage %%signer%%.\n   */\n  constructor(e) {\n    super(e.provider);\n    /**\n     *  The Signer being managed.\n     */\n    l(this, \"signer\");\n    u(this, a);\n    u(this, c);\n    W(this, { signer: e }), o(this, a, null), o(this, c, 0);\n  }\n  async getAddress() {\n    return this.signer.getAddress();\n  }\n  connect(e) {\n    return new w(this.signer.connect(e));\n  }\n  async getNonce(e) {\n    if (e === \"pending\") {\n      h(this, a) == null && o(this, a, super.getNonce(\"pending\"));\n      const t = h(this, c);\n      return await h(this, a) + t;\n    }\n    return super.getNonce(e);\n  }\n  /**\n   *  Manually increment the nonce. This may be useful when managng\n   *  offline transactions.\n   */\n  increment() {\n    E(this, c)._++;\n  }\n  /**\n   *  Resets the nonce, causing the **NonceManager** to reload the current\n   *  nonce from the blockchain on the next transaction.\n   */\n  reset() {\n    o(this, c, 0), o(this, a, null);\n  }\n  async sendTransaction(e) {\n    const t = this.getNonce(\"pending\");\n    return this.increment(), e = await this.signer.populateTransaction(e), e.nonce = await t, await this.signer.sendTransaction(e);\n  }\n  signTransaction(e) {\n    return this.signer.signTransaction(e);\n  }\n  signMessage(e) {\n    return this.signer.signMessage(e);\n  }\n  signTypedData(e, t, r) {\n    return this.signer.signTypedData(e, t, r);\n  }\n};\na = new WeakMap(), c = new WeakMap();\nlet P = w;\nasync function z(s, n, e) {\n  const t = typeof n == \"string\" ? new b(n, s) : n, r = (e == null ? void 0 : e.chain) ?? (await f.chainFromRpc(s))[1], i = new P(t);\n  if (i.provider === null)\n    try {\n      i.connect(s);\n    } catch (g) {\n      console.error(\"Cannot connect to network for signer\", g);\n    }\n  return new H(r, await t.getAddress(), i, e);\n}\nclass H extends $ {\n  constructor(e, t, r, i) {\n    super(e, t, r);\n    l(this, \"opts\");\n    this.opts = i;\n  }\n  chain() {\n    return this._chain;\n  }\n  address() {\n    return this._address;\n  }\n  async sign(e) {\n    var v, y, C, x, T, A;\n    const t = this.chain(), r = [];\n    let i = 500000n, g = 100000000000n, m = 1500000000n, p = 100000000n;\n    if (((v = this.opts) == null ? void 0 : v.overrides) === void 0 && t !== \"Celo\") {\n      const d = await this._signer.provider.getFeeData();\n      g = d.gasPrice ?? g, m = d.maxFeePerGas ?? m, p = d.maxPriorityFeePerGas ?? p;\n    }\n    ((y = this.opts) == null ? void 0 : y.maxGasLimit) !== void 0 && (i = i > ((C = this.opts) == null ? void 0 : C.maxGasLimit) ? (x = this.opts) == null ? void 0 : x.maxGasLimit : i);\n    const F = t === \"Oasis\" ? { gasLimit: i, gasPrice: g, type: 0 } : { gasLimit: i, maxFeePerGas: m, maxPriorityFeePerGas: p };\n    for (const d of e) {\n      const { transaction: N, description: _ } = d;\n      (T = this.opts) != null && T.debug && console.log(`Signing: ${_} for ${this.address()}`);\n      const D = {\n        ...N,\n        ...F,\n        from: this.address(),\n        nonce: await this._signer.getNonce(),\n        // Override any existing values with those passed in the constructor\n        ...(A = this.opts) == null ? void 0 : A.overrides\n      };\n      r.push(await this._signer.signTransaction(D));\n    }\n    return r;\n  }\n}\nconst K = {\n  Address: M,\n  Platform: f,\n  getSigner: z,\n  protocols: {\n    WormholeCore: () => import(\"./index-DgePBEwv.mjs\").then((s) => s.dO),\n    TokenBridge: () => import(\"./index-CNq6iUaG.mjs\"),\n    PorticoBridge: () => import(\"./index-rJ51Opss.mjs\"),\n    CircleBridge: () => import(\"./index-DIbdsPe6.mjs\")\n  },\n  getChain: (s, n, e) => new R(n, new f(s, j(s, q, {\n    [n]: e\n  })))\n};\nexport {\n  K as default\n};\n"],"file":"assets/evm-4DQ--w0X.js"}