{"version":3,"file":"index-BxyQAGp1.js","sources":["../../node_modules/@wormhole-foundation/wormhole-connect/lib/index-BxyQAGp1.mjs"],"sourcesContent":["import { bm as f, bn as t, bo as e, bp as c, bq as O, br as b, b1 as o, bs as d, bt as p } from \"./index-DgePBEwv.mjs\";\nimport { bu as h } from \"./index-DgePBEwv.mjs\";\nclass A extends Error {\n  constructor(r) {\n    super(r);\n  }\n}\nclass m extends A {\n  constructor() {\n    super(...arguments), this.name = \"TokenOwnerOffCurveError\";\n  }\n}\nconst l = f([\n  t(\"mintAuthorityOption\"),\n  e(\"mintAuthority\"),\n  c(\"supply\"),\n  O(\"decimals\"),\n  b(\"isInitialized\"),\n  t(\"freezeAuthorityOption\"),\n  e(\"freezeAuthority\")\n]);\nl.span;\nasync function E(s, r, n = !1, u = d, a = p) {\n  if (!n && !o.isOnCurve(r.toBuffer()))\n    throw new m();\n  const [i] = await o.findProgramAddress([r.toBuffer(), u.toBuffer(), s.toBuffer()], a);\n  return i;\n}\nexport {\n  p as ASSOCIATED_TOKEN_PROGRAM_ID,\n  l as MintLayout,\n  h as TOKEN_2022_PROGRAM_ID,\n  d as TOKEN_PROGRAM_ID,\n  A as TokenError,\n  m as TokenOwnerOffCurveError,\n  E as getAssociatedTokenAddress\n};\n"],"names":["A","m","l","f","t","e","c","O","b","E","n","u","d","a","p","o","i"],"mappings":"qJAEA,MAAMA,UAAU,KAAM,CACpB,YAAY,EAAG,CACb,MAAM,CAAC,CACX,CACA,CACA,MAAMC,UAAUD,CAAE,CAChB,aAAc,CACZ,MAAM,GAAG,SAAS,EAAG,KAAK,KAAO,yBACrC,CACA,CACK,MAACE,EAAIC,EAAE,CACVC,EAAE,qBAAqB,EACvBC,EAAE,eAAe,EACjBC,EAAE,QAAQ,EACVC,EAAE,UAAU,EACZC,EAAE,eAAe,EACjBJ,EAAE,uBAAuB,EACzBC,EAAE,iBAAiB,CACrB,CAAC,EACDH,EAAE,KACF,eAAeO,EAAE,EAAG,EAAGC,EAAI,GAAIC,EAAIC,EAAGC,EAAIC,EAAG,CAC3C,GAAI,CAACJ,GAAK,CAACK,EAAE,UAAU,EAAE,UAAU,EACjC,MAAM,IAAId,EACZ,KAAM,CAACe,CAAC,EAAI,MAAMD,EAAE,mBAAmB,CAAC,EAAE,SAAU,EAAEJ,EAAE,SAAQ,EAAI,EAAE,SAAU,CAAA,EAAGE,CAAC,EACpF,OAAOG,CACT","x_google_ignoreList":[0]}