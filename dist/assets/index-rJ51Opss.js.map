{"version":3,"file":"index-rJ51Opss.js","sources":["../../node_modules/@wormhole-foundation/wormhole-connect/lib/index-rJ51Opss.mjs"],"sourcesContent":["var G = Object.defineProperty;\nvar H = (p, e, t) => e in p ? G(p, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : p[e] = t;\nvar u = (p, e, t) => H(p, typeof e != \"symbol\" ? e + \"\" : e, t);\nimport { bv as D, p as C, u as T, ah as S, X as I, l as s, bw as L, ax as V, E as B, a as F, bx as f, by as h, bz as M, bA as g, bB as j, aU as y, bC as X, bD as Y, bE as J, bF as K, bG as Z, bH as tt, _ as et } from \"./index-DgePBEwv.mjs\";\nimport { EvmTokenBridge as nt } from \"./index-CNq6iUaG.mjs\";\nconst v = new D([\n  \"function start((bytes32,address,address,address,address,address,uint256,uint256,uint256,uint256)) returns (address,uint16,uint64)\",\n  \"function receiveMessageAndSwap(bytes)\"\n]), ot = new D([\n  \"function quoteExactInputSingle((address,address,uint256,uint24,uint160)) public view returns (uint256,uint160,uint32,uint256)\"\n]), st = \"https://gfx.relayers.xlabs.xyz/api/v1/swap/quote\";\nclass rt {\n  static async quoteRelayer(e, t, o) {\n    var i;\n    if (C(t) || C(o))\n      throw new Error(\"how did you get here tho?\");\n    const n = T.encode(t.toUniversalAddress().toUint8Array(), !1), r = T.encode(o.toUniversalAddress().toUint8Array(), !1), a = { targetChain: S(e), sourceToken: n, targetToken: r };\n    try {\n      const c = await I.post(st, a);\n      return BigInt(c.data.fee);\n    } catch (c) {\n      throw I.isAxiosError(c) ? new Error(`Error getting relayer fee: ${(i = c.response) == null ? void 0 : i.statusText}`) : c;\n    }\n  }\n}\nconst A = 100, x = {\n  ETH: [\n    s.tokenId(\"Arbitrum\", \"native\"),\n    s.tokenId(\"Base\", \"native\"),\n    s.tokenId(\"Ethereum\", \"native\"),\n    s.tokenId(\"Optimism\", \"native\")\n  ],\n  WETH: [\n    s.tokenId(\"Arbitrum\", \"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1\"),\n    s.tokenId(\"Avalanche\", \"0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB\"),\n    s.tokenId(\"Base\", \"0x4200000000000000000000000000000000000006\"),\n    s.tokenId(\"Bsc\", \"0x2170Ed0880ac9A755fd29B2688956BD959F933F8\"),\n    s.tokenId(\"Ethereum\", \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\"),\n    s.tokenId(\"Optimism\", \"0x4200000000000000000000000000000000000006\"),\n    s.tokenId(\"Polygon\", \"0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\")\n  ],\n  wstETH: [\n    s.tokenId(\"Arbitrum\", \"0x5979D7b546E38E414F7E9822514be443A4800529\"),\n    s.tokenId(\"Base\", \"0xc1CBa3fCea344f92D9239c08C0568f6F2F0ee452\"),\n    s.tokenId(\"Ethereum\", \"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0\"),\n    s.tokenId(\"Optimism\", \"0x1F32b1c2345538c0c6f582fCB022739c4A194Ebb\"),\n    s.tokenId(\"Polygon\", \"0x03b54A6e9a984069379fae1a4fC4dBAE93B3bCCD\")\n  ],\n  USDT: [\n    s.tokenId(\"Arbitrum\", \"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9\"),\n    s.tokenId(\"Avalanche\", \"0x9702230A8Ea53601f5cD2dc00fDBc13d4dF4A8c7\"),\n    s.tokenId(\"Base\", \"0xfde4C96c8593536E31F229EA8f37b2ADa2699bb2\"),\n    s.tokenId(\"Bsc\", \"0x55d398326f99059fF775485246999027B3197955\"),\n    s.tokenId(\"Ethereum\", \"0xdAC17F958D2ee523a2206206994597C13D831ec7\"),\n    s.tokenId(\"Optimism\", \"0x94b008aA00579c1307B0EF2c499aD98a8ce58e58\"),\n    s.tokenId(\"Polygon\", \"0xc2132D05D31c914a87C6611C10748AEb04B58e8F\"),\n    s.tokenId(\"Celo\", \"0x48065fbBE25f71C9282ddf5e1cD6D6A887483D5e\")\n  ]\n};\nclass b {\n  constructor(e, t, o, n) {\n    u(this, \"network\");\n    u(this, \"chain\");\n    u(this, \"provider\");\n    u(this, \"contracts\");\n    u(this, \"chainId\");\n    u(this, \"core\");\n    u(this, \"tokenBridge\");\n    if (this.network = e, this.chain = t, this.provider = o, this.contracts = n, !n.portico)\n      throw new Error(\"Unsupported chain, no contract addresses for: \" + t);\n    this.core = new L(e, t, o, n), this.tokenBridge = new nt(e, t, o, n), this.chainId = V.get(e, t);\n  }\n  static async fromRpc(e, t) {\n    const [o, n] = await B.chainFromRpc(e), r = t[n];\n    if (r.network !== o)\n      throw new Error(`Network mismatch: ${r.network} != ${o}`);\n    return new b(o, n, e, r.contracts);\n  }\n  async *transfer(e, t, o, n, r, d, a) {\n    const { minAmountStart: i, minAmountFinish: c } = a.swapAmounts;\n    if (i === 0n)\n      throw new Error(\"Invalid min swap amount\");\n    if (c === 0n)\n      throw new Error(\"Invalid min swap amount\");\n    const w = new F(e).toString(), [k, E] = f(this.network, this.chain, o), [U, P] = f(this.network, t.chain, r), l = h(E), q = h(await this.getTransferrableToken(l)), R = h(t), N = h(P), O = (/* @__PURE__ */ new Date()).valueOf() % 2 ** 4, $ = M.serializeFlagSet({\n      flags: {\n        shouldWrapNative: k,\n        shouldUnwrapNative: U\n      },\n      recipientChain: S(t.chain),\n      bridgeNonce: O,\n      feeTierStart: A,\n      feeTierFinish: A,\n      padding: new Uint8Array(19)\n    }), Q = v.encodeFunctionData(\"start\", [\n      [\n        $,\n        l.toLowerCase(),\n        q,\n        N.toLowerCase(),\n        R,\n        d,\n        n.toString(),\n        i.toString(),\n        c.toString(),\n        a.relayerFee.toString()\n      ]\n    ]), W = this.getTokenGroup(E.address.toString()), m = this.getPorticoAddress(W);\n    k || (yield* this.approve(l, w, n, m));\n    const _ = await this.core.getMessageFee(), z = {\n      to: m,\n      data: Q,\n      value: _ + (k ? n : 0n)\n    };\n    yield this.createUnsignedTransaction(g(z, w), \"PorticoBridge.Transfer\");\n  }\n  async *redeem(e, t) {\n    const o = j(t.payload.payload.flagSet.recipientChain), n = t.payload.payload.finalTokenAddress.toNative(o).toString(), r = this.getTokenGroup(n), d = this.getPorticoAddress(r), i = await new y(d, v.fragments, this.provider).getFunction(\"receiveMessageAndSwap\").populateTransaction(X(t)), c = new F(e).toString();\n    yield this.createUnsignedTransaction(g(i, c), \"PorticoBridge.Redeem\");\n  }\n  async isTransferCompleted(e) {\n    return await this.tokenBridge.tokenBridge.isTransferCompleted(Y(e.hash));\n  }\n  async quoteSwap(e, t, o, n) {\n    const [, r] = f(this.network, this.chain, e), [, d] = f(this.network, this.chain, t), a = h(r), i = h(d);\n    if (J(a, i))\n      return n;\n    const c = this.getQuoterAddress(o);\n    return (await new y(c, ot.fragments, this.provider).getFunction(\"quoteExactInputSingle\").staticCall([a, i, n, A, 0]))[0];\n  }\n  async quoteRelay(e, t) {\n    return await rt.quoteRelayer(this.chain, e, t);\n  }\n  // For a given token, return the Wormhole-wrapped/highway token\n  // that actually gets bridged from this chain\n  async getTransferrableToken(e) {\n    const t = s.tokenId(this.chain, e), [, o] = f(this.network, this.chain, t);\n    if (this.chain === \"Ethereum\")\n      return o;\n    const n = Object.values(x).find((a) => a.find((i) => i.chain === this.chain && h(i) === h(o)));\n    if (!n)\n      throw new Error(`No token group found for ${e} on ${this.chain}`);\n    const r = n.find((a) => a.chain === \"Ethereum\");\n    if (!r)\n      throw new Error(`No Ethereum origin token found for ${e} on ${this.chain}`);\n    const d = await this.tokenBridge.getWrappedAsset(r);\n    return s.tokenId(this.chain, d.toString());\n  }\n  supportedTokens() {\n    const e = [];\n    for (const [t, o] of Object.entries(x))\n      for (const n of o)\n        n.chain === this.chain && e.push({ group: t, token: n });\n    return e;\n  }\n  getTokenGroup(e) {\n    const o = this.supportedTokens().find((n) => h(n.token) === e);\n    if (!o)\n      throw new Error(\"Token not found\");\n    return o.group;\n  }\n  async *approve(e, t, o, n) {\n    const r = B.getTokenImplementation(this.provider, e);\n    if (await r.allowance(t, n) < o) {\n      const a = await r.approve.populateTransaction(n, o);\n      yield this.createUnsignedTransaction(g(a, t), \"PorticoBridge.Approve\");\n    }\n  }\n  createUnsignedTransaction(e, t) {\n    return new K(Z(e, this.chainId), this.network, this.chain, t, !1);\n  }\n  getPorticoAddress(e) {\n    const t = this.contracts.portico;\n    return e === \"USDT\" && t.porticoPancakeSwap || t.porticoUniswap;\n  }\n  getQuoterAddress(e) {\n    const t = this.contracts.portico;\n    return e === \"USDT\" && t.pancakeSwapQuoterV2 || t.uniswapQuoterV2;\n  }\n}\ntt(et, \"PorticoBridge\", b);\nexport {\n  b as EvmPorticoBridge\n};\n"],"names":["G","H","p","u","v","D","ot","st","rt","o","i","C","n","T","r","a","S","c","I","A","s","L","nt","V","B","d","w","F","k","f","U","P","l","h","q","R","N","O","$","M","Q","W","m","_","z","g","j","y","X","Y","J","K","Z","tt","et"],"mappings":"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","x_google_ignoreList":[0]}