{"version":3,"file":"index-Dlnoph5j.js","sources":["../../node_modules/@wormhole-foundation/wormhole-connect/lib/index-Dlnoph5j.mjs"],"sourcesContent":["var J = Object.defineProperty;\nvar Q = (O, e, t) => e in O ? J(O, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : O[e] = t;\nvar d = (O, e, t) => Q(O, typeof e != \"symbol\" ? e + \"\" : e, t);\nimport { A as C, S as g, a as X } from \"./index-BaZ9ZXQ8.mjs\";\nimport { cZ as Y, ae as S, ah as $, c_ as F, aH as I, c$ as v, d0 as q, bB as tt, cd as b, bZ as et, p as H, c2 as K, d1 as y, d2 as u, d3 as k, d4 as U, bC as L, d5 as Z, d6 as st, d7 as z, d8 as ot, bH as nt, aE as rt } from \"./index-DgePBEwv.mjs\";\nimport { A as at } from \"./algorand-DGFW1DOS.mjs\";\nconst V = Y.fromSignature(\"portal_transfer(byte[])byte[]\"), c = class c {\n  constructor(e, t, n, o) {\n    d(this, \"network\");\n    d(this, \"chain\");\n    d(this, \"connection\");\n    d(this, \"contracts\");\n    d(this, \"chainId\");\n    d(this, \"coreBridge\");\n    d(this, \"coreAppId\");\n    d(this, \"coreAppAddress\");\n    d(this, \"tokenBridgeAppId\");\n    d(this, \"tokenBridgeAddress\");\n    if (this.network = e, this.chain = t, this.connection = n, this.contracts = o, this.chainId = $(t), !o.coreBridge)\n      throw new Error(`Core contract address for chain ${t} not found`);\n    const r = BigInt(o.coreBridge);\n    if (this.coreAppId = r, this.coreAppAddress = F(r), this.coreBridge = new C(e, t, n, o), !o.tokenBridge)\n      throw new Error(`TokenBridge contract address for chain ${t} not found`);\n    const a = BigInt(o.tokenBridge);\n    this.tokenBridgeAppId = a, this.tokenBridgeAddress = F(a);\n  }\n  static async fromRpc(e, t) {\n    const [n, o] = await at.chainFromRpc(e), r = t[o];\n    if (r.network !== n)\n      throw new Error(`Network mismatch: ${r.network} != ${n}`);\n    return new c(n, o, e, r.contracts);\n  }\n  // Checks a native address to see if it's a wrapped version\n  async isWrappedAsset(e) {\n    const t = new I(e).toInt();\n    if (t === 0)\n      return !1;\n    const n = await this.connection.getAssetByID(t).do(), r = v.from_obj_for_encoding(n).params.creator, a = await this.connection.accountInformation(r).exclude(\"all\").do(), s = q.from_obj_for_encoding(a);\n    return (s == null ? void 0 : s.authAddr) === this.tokenBridgeAddress;\n  }\n  // Returns the original asset with its foreign chain\n  async getOriginalAsset(e) {\n    const t = new I(e).toInt(), n = await this.connection.getAssetByID(t).do(), o = v.from_obj_for_encoding(n), r = await g.decodeLocalState(this.connection, this.tokenBridgeAppId, o.params.creator);\n    if (r.length < 94)\n      throw new Error(\"Invalid local state data\");\n    const a = r.slice(92, 94), s = tt(b.decode(a)), p = new et(r.slice(60, 92));\n    return { chain: s, address: p };\n  }\n  async getTokenUniversalAddress(e) {\n    return new I(e).toUniversalAddress();\n  }\n  async getTokenNativeAddress(e, t) {\n    return new I(t).toNative();\n  }\n  // Returns the address of the native version of this asset\n  async getWrappedAsset(e) {\n    if (H(e.address))\n      throw new Error(\"native asset cannot be a wrapped asset\");\n    const t = g.forWrappedAsset(this.tokenBridgeAppId, e), n = await g.decodeLocalState(this.connection, this.tokenBridgeAppId, t.address());\n    if (n.length < 8)\n      throw new Error(\"Invalid wrapped asset data\");\n    return K(this.chain, b.decode(n.slice(0, 8)).toString());\n  }\n  // Checks if a wrapped version exists\n  async hasWrappedAsset(e) {\n    try {\n      return await this.getWrappedAsset(e), !0;\n    } catch {\n    }\n    return !1;\n  }\n  async getWrappedNative() {\n    return K(this.chain, \"0\");\n  }\n  async isTransferCompleted(e) {\n    const t = g.forMessageId(this.tokenBridgeAppId, {\n      sequence: e.sequence,\n      chain: e.emitterChain,\n      emitter: e.emitterAddress\n    });\n    try {\n      return await g.checkBitsSet(this.connection, this.tokenBridgeAppId, t.address(), e.sequence);\n    } catch {\n    }\n    return !1;\n  }\n  // Creates a Token Attestation VAA containing metadata about\n  // the token that may be submitted to a Token Bridge on another chain\n  // to allow it to create a wrapped version of the token\n  async *createAttestation(e, t) {\n    if (!t)\n      throw new Error(\"Payer required to create attestation\");\n    const n = new I(t).toString(), o = new I(e).toInt(), r = [], a = await this.connection.getTransactionParams().do(), s = g.forEmitter(this.coreAppId, new I(this.tokenBridgeAddress).toUint8Array()), { accounts: [p], txs: w } = await C.maybeCreateStorageTx(this.connection, n, this.coreAppId, s, a);\n    r.push(...w);\n    let f = \"\", i;\n    if (o !== 0) {\n      const l = await this.connection.getAssetByID(o).do(), j = v.from_obj_for_encoding(l), E = await this.connection.accountInformation(j.params.creator).do();\n      if (i = q.from_obj_for_encoding(E), i.authAddr === this.tokenBridgeAddress.toString())\n        throw new Error(\"Cannot re-attest wormhole assets\");\n    }\n    const T = g.forNativeAsset(this.tokenBridgeAppId, BigInt(o)), B = await C.maybeCreateStorageTx(this.connection, n, this.tokenBridgeAppId, T);\n    f = B.accounts[0], r.push(...B.txs);\n    const m = y({\n      from: n,\n      appIndex: u(this.tokenBridgeAppId),\n      onComplete: k.NoOpOC,\n      appArgs: [c.noop],\n      suggestedParams: a\n    });\n    r.push({ tx: m });\n    const A = await this.coreBridge.getMessageFee();\n    if (A > BigInt(0)) {\n      const l = U({\n        from: n,\n        suggestedParams: a,\n        to: this.tokenBridgeAddress,\n        amount: A\n      });\n      r.push({ tx: l });\n    }\n    let W = [p, f, this.coreAppAddress];\n    i && W.push(i.address);\n    let h = y({\n      appArgs: [c.attestToken, b.toBytes(o, 8)],\n      accounts: W,\n      appIndex: u(this.tokenBridgeAppId),\n      foreignApps: [u(this.coreAppId)],\n      foreignAssets: [o],\n      from: n,\n      onComplete: k.NoOpOC,\n      suggestedParams: a\n    });\n    A > BigInt(0) ? h.fee *= 3 : h.fee *= 2, r.push({ tx: h });\n    for (const l of r)\n      yield this.createUnsignedTx(l, \"TokenBridge.createAttestation\", !0);\n  }\n  // Submits the Token Attestation VAA to the Token Bridge\n  // to create the wrapped token represented by the data in the VAA\n  async *submitAttestation(e, t, n) {\n    if (!t)\n      throw new Error(\"Sender required to submit attestation\");\n    n || (n = await this.connection.getTransactionParams().do());\n    const o = t.toString(), a = g.forWrappedAsset(this.tokenBridgeAppId, e.payload.token).address(), s = [], p = [], w = await g.decodeLocalState(this.connection, this.tokenBridgeAppId, a);\n    w.length > 8 && p.push(new I(w.slice(0, 8)).toInt()), s.push({\n      tx: U({\n        from: o,\n        to: a,\n        amount: 1e5,\n        suggestedParams: n\n      })\n    });\n    let f = new Uint8Array(1);\n    f[0] = 1, s.push({\n      tx: y({\n        appArgs: [c.noop, f],\n        appIndex: u(this.tokenBridgeAppId),\n        from: o,\n        onComplete: k.NoOpOC,\n        suggestedParams: n\n      })\n    }), f = new Uint8Array(1), f[0] = 2, s.push({\n      tx: y({\n        appArgs: [c.noop, f],\n        appIndex: u(this.tokenBridgeAppId),\n        from: o,\n        onComplete: k.NoOpOC,\n        suggestedParams: n\n      })\n    }), s.push({\n      tx: y({\n        accounts: [],\n        appArgs: [c.receiveAttest, L(e)],\n        appIndex: u(this.tokenBridgeAppId),\n        foreignAssets: p,\n        from: o,\n        onComplete: k.NoOpOC,\n        suggestedParams: n\n      })\n    }), s[s.length - 1].tx.fee = s[s.length - 1].tx.fee * 2;\n    for (const i of s)\n      yield this.createUnsignedTx(i, \"TokenBridge.submitAttestation\", !0);\n  }\n  async *transfer(e, t, n, o, r) {\n    const a = e.toString(), s = H(n) ? 0 : new I(n).toInt(), p = o, w = $(t.chain), f = t.address.toUniversalAddress().toUint8Array(), i = await this.connection.getTransactionParams().do(), T = BigInt(0), B = g.fromData({\n      appId: this.coreAppId,\n      appAddress: Z(this.coreAppAddress).publicKey,\n      idx: BigInt(0),\n      address: Z(this.tokenBridgeAddress).publicKey\n    }), m = [], { accounts: [A], txs: W } = await C.maybeCreateStorageTx(this.connection, a, this.coreAppId, B, i);\n    m.push(...W);\n    let h = \"\", l, j = !1;\n    if (s !== 0) {\n      const x = await this.connection.getAssetByID(s).do();\n      h = v.from_obj_for_encoding(x).params.creator;\n      const R = await this.connection.accountInformation(h).do();\n      l = q.from_obj_for_encoding(R), j = l.authAddr === this.tokenBridgeAddress.toString();\n    }\n    const E = await this.coreBridge.getMessageFee();\n    if (E > 0 && m.push({\n      tx: U({\n        from: a,\n        to: this.tokenBridgeAddress,\n        amount: E,\n        suggestedParams: i\n      })\n    }), !j) {\n      const x = g.forNativeAsset(this.tokenBridgeAppId, BigInt(s)), { accounts: [N], txs: R } = await C.maybeCreateStorageTx(this.connection, a, this.tokenBridgeAppId, x, i);\n      h = N, R.push(...R);\n    }\n    if (s !== 0 && !await c.isOptedInToAsset(this.connection, h, s)) {\n      const x = U({\n        from: a,\n        to: h,\n        amount: 1e5,\n        suggestedParams: i\n      });\n      let N = y({\n        from: a,\n        appIndex: u(this.tokenBridgeAppId),\n        onComplete: k.NoOpOC,\n        appArgs: [c.optIn, st(s, 8)],\n        foreignAssets: [s],\n        accounts: [h],\n        suggestedParams: i\n      });\n      N.fee *= 2, m.unshift({ tx: x }, { tx: N });\n    }\n    const G = y({\n      from: a,\n      appIndex: u(this.tokenBridgeAppId),\n      onComplete: k.NoOpOC,\n      appArgs: [c.noop],\n      suggestedParams: i\n    });\n    m.push({ tx: G });\n    let _ = [];\n    if (s === 0) {\n      const x = U({\n        from: a,\n        to: h,\n        amount: p,\n        suggestedParams: i\n      });\n      m.push({ tx: x }), _ = [A, h, h];\n    } else {\n      const x = z({\n        from: a,\n        to: h,\n        amount: p,\n        assetIndex: s,\n        suggestedParams: i\n      });\n      m.push({ tx: x }), _ = l != null && l.address ? [A, h, l.address] : [A, h];\n    }\n    const M = [\n      c.sendTransfer,\n      b.toBytes(s, 8),\n      b.toBytes(p, 8),\n      f,\n      b.toBytes(w, 8),\n      b.toBytes(T, 8)\n    ];\n    r && M.push(r);\n    const P = y({\n      from: a,\n      appIndex: u(this.tokenBridgeAppId),\n      onComplete: k.NoOpOC,\n      appArgs: M,\n      foreignApps: [u(this.coreAppId)],\n      foreignAssets: [s],\n      accounts: _,\n      suggestedParams: i\n    });\n    P.fee *= 2, m.push({ tx: P });\n    for (const x of m)\n      yield this.createUnsignedTx(x, \"TokenBridge.transfer\", !0);\n  }\n  async *redeem(e, t, n = !0, o) {\n    o || (o = await this.connection.getTransactionParams().do());\n    const r = new I(e).toString(), { accounts: a, txs: s } = await C.submitVAAHeader(this.connection, this.coreAppId, this.tokenBridgeAppId, t, r);\n    let p, w = \"\", f = [], i = 0;\n    if (t.payload.token.chain !== this.chain) {\n      p = g.forWrappedAsset(this.tokenBridgeAppId, t.payload.token), w = p.address();\n      const A = await g.decodeLocalState(this.connection, this.tokenBridgeAppId, w);\n      i = new I(A.slice(0, 8)).toInt();\n    } else {\n      const A = new I(t.payload.token.address).toBigInt();\n      p = g.forNativeAsset(this.tokenBridgeAppId, A), w = p.address(), i = u(A);\n    }\n    a.push(w);\n    let T = 0, B = \"\";\n    if (t.payloadName === \"TransferWithPayload\" ? (T = new I(t.payload.to.address).toInt(), B = F(T)) : B = new I(t.payload.to.address.toUint8Array()).toString(), a.push(B), i !== 0 && (f.push(i), !await c.isOptedInToAsset(this.connection, B, i))) {\n      if (r != B)\n        throw new Error(\"Cannot ASA optin for somebody else (asset \" + i.toString() + \")\");\n      s.unshift({\n        tx: z({\n          amount: 0,\n          assetIndex: i,\n          from: r,\n          suggestedParams: o,\n          to: r\n        })\n      });\n    }\n    const m = {\n      accounts: a,\n      appArgs: [c.completeTransfer, L(t)],\n      appIndex: u(this.tokenBridgeAppId),\n      foreignAssets: f,\n      from: r,\n      onComplete: k.NoOpOC,\n      suggestedParams: o\n    };\n    s.push({\n      tx: y(m)\n    }), s[s.length - 1].tx.fee = s[s.length - 1].tx.fee * (t.payloadName === \"Transfer\" && t.payload.fee !== void 0 && t.payload.fee === 0n ? 2 : 3), t.payloadName === \"TransferWithPayload\" && (s[s.length - 1].tx.appForeignApps = [T], s.push({\n      tx: y({\n        appArgs: [\n          V.getSelector(),\n          V.args[0].type.encode(L(t))\n        ],\n        appIndex: T,\n        foreignAssets: f,\n        from: r,\n        onComplete: k.NoOpOC,\n        suggestedParams: o\n      })\n    }));\n    for (const A of s)\n      yield this.createUnsignedTx(A, \"TokenBridge.redeem\", !0);\n  }\n  /**\n   * Checks if the asset has been opted in by the receiver\n   * @param client Algodv2 client\n   * @param asset Algorand asset index\n   * @param receiver Account address\n   * @returns Promise with True if the asset was opted in, False otherwise\n   */\n  static async isOptedInToAsset(e, t, n) {\n    var o;\n    try {\n      const r = await e.accountAssetInformation(t, n).do();\n      return (((o = ot.from_obj_for_encoding(r).assetHolding) == null ? void 0 : o.amount) ?? 0) > 0;\n    } catch {\n    }\n    return !1;\n  }\n  createUnsignedTx(e, t, n = !0) {\n    return new X(e, this.network, this.chain, t, n);\n  }\n};\nd(c, \"sendTransfer\", S.encode(\"sendTransfer\")), d(c, \"attestToken\", S.encode(\"attestToken\")), d(c, \"noop\", S.encode(\"nop\")), d(c, \"optIn\", S.encode(\"optin\")), d(c, \"completeTransfer\", S.encode(\"completeTransfer\")), d(c, \"receiveAttest\", S.encode(\"receiveAttest\"));\nlet D = c;\nnt(rt, \"TokenBridge\", D);\nexport {\n  D as AlgorandTokenBridge,\n  V as TransferMethodSelector\n};\n"],"names":["J","Q","O","e","t","d","V","Y","c","$","F","C","a","at","I","r","v","q","g","s","tt","b","et","H","K","w","f","l","j","E","B","m","y","u","k","A","U","W","h","p","L","i","Z","x","R","N","st","G","_","z","M","P","ot","X","S","D","nt","rt"],"mappings":"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","x_google_ignoreList":[0]}