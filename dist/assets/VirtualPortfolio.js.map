{"version":3,"file":"VirtualPortfolio.js","sources":["../../node_modules/date-picker-svelte/dist/TimePicker.svelte","../../node_modules/date-picker-svelte/dist/date-utils.js","../../node_modules/date-picker-svelte/dist/locale.js","../../node_modules/date-picker-svelte/dist/DatePicker.svelte","../../node_modules/date-picker-svelte/dist/parse.js","../../node_modules/date-picker-svelte/dist/DateInput.svelte","../../src/UI/VirtualPortfolio/FormVirtualPortfolio.svelte","../../src/UI/VirtualPortfolio/Allocation.svelte","../../src/UI/VirtualPortfolio/Performance.svelte","../../src/UI/VirtualPortfolio/Holding.svelte","../../src/UI/VirtualPortfolio/HoldingHistoryChange.svelte","../../src/UI/VirtualPortfolio/Summary.svelte","../../src/UI/VirtualPortfolio/VirtualPortfolio.svelte","../../src/UI/VirtualPortfolio/Dashboard.svelte","../../src/UI/VirtualPortfolio/MyPaperTradeDashboard.svelte","../../src/layouts/VirtualPortfolio.svelte"],"sourcesContent":["<script lang=\"ts\">export let browseDate;\nexport let timePrecision;\nexport let setTime;\nlet fields = [];\nfunction select(node) {\n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.selectNodeContents(node);\n    selection?.removeAllRanges();\n    selection?.addRange(range);\n}\nfunction keydown(e) {\n    if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {\n        const value = get_value(e.currentTarget);\n        const delta = e.key === 'ArrowUp' ? 1 : -1;\n        set_value(e.currentTarget, value + delta, true);\n        e.preventDefault();\n        select(e.currentTarget);\n    }\n    else if (e.key === 'ArrowLeft' || e.key === 'ArrowRight' || ':;-,.'.includes(e.key)) {\n        const field_index = fields.indexOf(e.currentTarget);\n        const delta = e.key === 'ArrowLeft' ? -1 : 1;\n        const el = fields[field_index + delta];\n        e.preventDefault();\n        if (el) {\n            el.focus();\n            select(el);\n        }\n    }\n}\nfunction get_value(node) {\n    const label = get_field(node).label;\n    if (label === 'Hours') {\n        return browseDate.getHours();\n    }\n    else if (label === 'Minutes') {\n        return browseDate.getMinutes();\n    }\n    else if (label === 'Seconds') {\n        return browseDate.getSeconds();\n    }\n    else {\n        return browseDate.getMilliseconds();\n    }\n}\nfunction clamp(value, max, loop_around) {\n    if (loop_around && value < 0) {\n        return max;\n    }\n    else if (loop_around && value > max) {\n        return 0;\n    }\n    else {\n        return Math.max(0, Math.min(max, value));\n    }\n}\nfunction get_field(element) {\n    const label = element.getAttribute('aria-label');\n    if (label === 'Hours') {\n        return { label, len: 2, max: 23 };\n    }\n    else if (label === 'Minutes') {\n        return { label, len: 2, max: 59 };\n    }\n    else if (label === 'Seconds') {\n        return { label, len: 2, max: 59 };\n    }\n    else if (label === 'Milliseconds') {\n        return { label, len: 3, max: 999 };\n    }\n    else {\n        throw new Error('Invalid label ' + label);\n    }\n}\n$: setText(browseDate);\nfunction setText(d) {\n    const hours = ('00' + d.getHours()).slice(-2);\n    const minutes = ('00' + d.getMinutes()).slice(-2);\n    const seconds = ('00' + d.getSeconds()).slice(-2);\n    const milliseconds = ('000' + d.getMilliseconds()).slice(-3);\n    if (fields[0] && fields[0].innerText !== hours) {\n        fields[0].innerText = hours;\n    }\n    if (fields[1] && fields[1].innerText !== minutes) {\n        fields[1].innerText = minutes;\n    }\n    if (fields[2] && fields[2].innerText !== seconds) {\n        fields[2].innerText = seconds;\n    }\n    if (fields[3] && fields[3].innerText !== milliseconds) {\n        fields[3].innerText = milliseconds;\n    }\n}\nfunction set_value(node, value, loop_around = false) {\n    const field = get_field(node);\n    value = clamp(value, field.max, loop_around);\n    if (field.label === 'Hours') {\n        browseDate.setHours(value);\n    }\n    else if (field.label === 'Minutes') {\n        browseDate.setMinutes(value);\n    }\n    else if (field.label === 'Seconds') {\n        browseDate.setSeconds(value);\n    }\n    else if (field.label === 'Milliseconds') {\n        browseDate.setMilliseconds(value);\n    }\n    browseDate = setTime(browseDate);\n    setText(browseDate);\n}\nfunction parse(text, length) {\n    return parseInt(text.replace(/[^\\d]/g, '').slice(-length));\n}\nfunction input(e_unknown) {\n    const e = e_unknown; // type error workaround\n    const field = get_field(e.currentTarget);\n    let new_value;\n    if (e.inputType === 'insertText') {\n        const original_text = '000' + get_value(e.currentTarget);\n        new_value = parse(original_text + e.currentTarget.innerText, field.len);\n        if (new_value > field.max && e.data) {\n            new_value = parse(e.data, field.len);\n        }\n    }\n    else {\n        new_value = parse('000' + e.currentTarget.innerText, field.len);\n    }\n    set_value(e.currentTarget, new_value);\n    select(e.currentTarget);\n}\nfunction focus(e) {\n    select(e.currentTarget);\n}\n</script>\n\n{#if timePrecision}\n\t<div\n\t\tclass=\"time-picker\"\n\t\trole=\"none\"\n\t\ton:mousedown={(e) => {\n\t\t\tif (e.target instanceof HTMLElement && e.target.tagName === 'SPAN') {\n\t\t\t\te.target.focus()\n\t\t\t\te.preventDefault() // prevent text dragging\n\t\t\t}\n\t\t}}\n\t>\n\t\t<span\n\t\t\tbind:this={fields[0]}\n\t\t\trole=\"spinbutton\"\n\t\t\taria-label=\"Hours\"\n\t\t\ttabindex=\"0\"\n\t\t\tcontenteditable\n\t\t\tinputmode=\"numeric\"\n\t\t\ton:keydown={keydown}\n\t\t\ton:input={input}\n\t\t\ton:focus={focus}>{('00' + browseDate.getHours()).slice(-2)}</span\n\t\t>:\n\t\t<span\n\t\t\tbind:this={fields[1]}\n\t\t\trole=\"spinbutton\"\n\t\t\taria-label=\"Minutes\"\n\t\t\ttabindex=\"0\"\n\t\t\tcontenteditable\n\t\t\tinputmode=\"numeric\"\n\t\t\ton:keydown={keydown}\n\t\t\ton:input={input}\n\t\t\ton:focus={focus}>{('00' + browseDate.getMinutes()).slice(-2)}</span\n\t\t>\n\t\t{#if timePrecision !== 'minute'}\n\t\t\t:<span\n\t\t\t\tbind:this={fields[2]}\n\t\t\t\trole=\"spinbutton\"\n\t\t\t\taria-label=\"Seconds\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\tcontenteditable\n\t\t\t\tinputmode=\"numeric\"\n\t\t\t\ton:keydown={keydown}\n\t\t\t\ton:input={input}\n\t\t\t\ton:focus={focus}>{('00' + browseDate.getSeconds()).slice(-2)}</span\n\t\t\t>\n\t\t\t{#if timePrecision !== 'second'}\n\t\t\t\t.<span\n\t\t\t\t\tbind:this={fields[3]}\n\t\t\t\t\trole=\"spinbutton\"\n\t\t\t\t\taria-label=\"Milliseconds\"\n\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\tcontenteditable\n\t\t\t\t\tinputmode=\"numeric\"\n\t\t\t\t\ton:keydown={keydown}\n\t\t\t\t\ton:input={input}\n\t\t\t\t\ton:focus={focus}>{('000' + browseDate.getMilliseconds()).slice(-3)}</span\n\t\t\t\t>\n\t\t\t{/if}\n\t\t{/if}\n\t</div>\n{/if}\n\n<style>.time-picker {\n  font-size: 1.1em;\n  display: flex;\n  align-items: center;\n  width: fit-content;\n  border: 1px solid rgba(108, 120, 147, 0.3);\n  border-radius: 3px;\n  margin: auto;\n  font-variant-numeric: tabular-nums;\n  margin-top: 6px;\n}\n\nspan {\n  user-select: all;\n  outline: none;\n  position: relative;\n  z-index: 1;\n  padding: 4px 0px;\n}\nspan:not(:focus)::selection {\n  background-color: transparent;\n}\nspan:first-child {\n  padding-left: 6px;\n}\nspan:last-child {\n  padding-right: 6px;\n}</style>\n","export function isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\nexport function getMonthLength(year, month) {\n    const feb = isLeapYear(year) ? 29 : 28;\n    const monthLengths = [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    return monthLengths[month];\n}\nexport function toText(date, formatTokens) {\n    let text = '';\n    if (date) {\n        for (const token of formatTokens) {\n            if (typeof token === 'string') {\n                text += token;\n            }\n            else {\n                text += token.toString(date);\n            }\n        }\n    }\n    return text;\n}\nexport function getMonthDays(year, month) {\n    const monthLength = getMonthLength(year, month);\n    const days = [];\n    for (let i = 0; i < monthLength; i++) {\n        days.push({\n            year: year,\n            month: month,\n            number: i + 1,\n        });\n    }\n    return days;\n}\nexport function getCalendarDays(value, weekStartsOn) {\n    const year = value.getFullYear();\n    const month = value.getMonth();\n    const firstWeekday = new Date(year, month, 1).getDay();\n    let days = [];\n    // add last month\n    const daysBefore = (firstWeekday - weekStartsOn + 7) % 7;\n    if (daysBefore > 0) {\n        let lastMonth = month - 1;\n        let lastMonthYear = year;\n        if (lastMonth === -1) {\n            lastMonth = 11;\n            lastMonthYear = year - 1;\n        }\n        days = getMonthDays(lastMonthYear, lastMonth).slice(-daysBefore);\n    }\n    // add current month\n    days = days.concat(getMonthDays(year, month));\n    // add next month\n    let nextMonth = month + 1;\n    let nextMonthYear = year;\n    if (nextMonth === 12) {\n        nextMonth = 0;\n        nextMonthYear = year + 1;\n    }\n    const daysAfter = 42 - days.length;\n    days = days.concat(getMonthDays(nextMonthYear, nextMonth).slice(0, daysAfter));\n    return days;\n}\n","export function getLocaleDefaults() {\n    return {\n        weekdays: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n        months: [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ],\n        shortMonths: [\n            'Jan',\n            'Feb',\n            'Mar',\n            'Apr',\n            'May',\n            'Jun',\n            'Jul',\n            'Aug',\n            'Sep',\n            'Oct',\n            'Nov',\n            'Dec',\n        ],\n        weekStartsOn: 1,\n    };\n}\nexport function getInnerLocale(locale) {\n    const innerLocale = getLocaleDefaults();\n    if (typeof locale.weekStartsOn === 'number') {\n        innerLocale.weekStartsOn = locale.weekStartsOn;\n    }\n    if (locale.months)\n        innerLocale.months = locale.months;\n    if (locale.shortMonths)\n        innerLocale.shortMonths = locale.shortMonths;\n    if (locale.weekdays)\n        innerLocale.weekdays = locale.weekdays;\n    return innerLocale;\n}\n/** Create a Locale from a date-fns locale */\nexport function localeFromDateFnsLocale(dateFnsLocale) {\n    const locale = getLocaleDefaults();\n    if (typeof dateFnsLocale.options?.weekStartsOn === 'number') {\n        locale.weekStartsOn = dateFnsLocale.options.weekStartsOn;\n    }\n    if (dateFnsLocale.localize) {\n        for (let i = 0; i < 7; i++) {\n            // widths: narrow, short, abbreviated, wide, any\n            locale.weekdays[i] = dateFnsLocale.localize.day(i, { width: 'short' });\n        }\n        for (let i = 0; i < 12; i++) {\n            locale.months[i] = dateFnsLocale.localize.month(i, { width: 'wide' });\n            locale.shortMonths[i] = dateFnsLocale.localize.month(i, { width: 'abbreviated' });\n        }\n    }\n    return locale;\n}\n","<script lang=\"ts\">import TimePicker from './TimePicker.svelte';\nimport { getMonthLength, getCalendarDays } from './date-utils.js';\nimport { getInnerLocale } from './locale.js';\nimport { createEventDispatcher } from 'svelte';\nconst dispatch = createEventDispatcher();\nfunction cloneDate(d) {\n    return new Date(d.getTime());\n}\n/** Date value. It's `null` if no date is selected */\nexport let value = null;\nfunction setValue(d) {\n    if (d.getTime() !== value?.getTime()) {\n        browseDate = clamp(d, min, max);\n        value = cloneDate(browseDate);\n    }\n}\nfunction setValueDate(d) {\n    if (d.getTime() !== value?.getTime()) {\n        browseDate = clampDate(d, min, max);\n        value = cloneDate(browseDate);\n    }\n}\n/** Set the browseDate */\nfunction browse(d) {\n    browseDate = clampDate(d, min, max);\n    if (!browseWithoutSelecting && value) {\n        setValue(browseDate);\n    }\n}\nfunction setTime(d) {\n    browseDate = clamp(d, min, max);\n    if (value) {\n        setValue(browseDate);\n    }\n    return browseDate;\n}\nconst todayDate = new Date();\n/** Default Date to use */\nconst defaultDate = new Date();\n/** Show a time picker with the specified precision */\nexport let timePrecision = null;\n/** The earliest year the user can select */\nexport let min = new Date(defaultDate.getFullYear() - 20, 0, 1);\n/** The latest year the user can select */\nexport let max = new Date(defaultDate.getFullYear(), 11, 31, 23, 59, 59, 999);\n$: if (value && value > max) {\n    setValue(max);\n}\nelse if (value && value < min) {\n    setValue(min);\n}\nfunction clamp(d, min, max) {\n    if (d > max) {\n        return cloneDate(max);\n    }\n    else if (d < min) {\n        return cloneDate(min);\n    }\n    else {\n        return cloneDate(d);\n    }\n}\nfunction clampDate(d, min, max) {\n    const limit = clamp(d, min, max);\n    if (limit.getTime() !== d.getTime()) {\n        d = new Date(limit.getFullYear(), limit.getMonth(), limit.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds());\n        d = clamp(d, min, max);\n    }\n    return d;\n}\n/** The date shown in the popup when none is selected */\nlet browseDate = value ? cloneDate(value) : cloneDate(clampDate(defaultDate, min, max));\n$: setBrowseDate(value);\nfunction setBrowseDate(value) {\n    if (browseDate.getTime() !== value?.getTime()) {\n        browseDate = value ? cloneDate(value) : browseDate;\n    }\n}\nlet years = getYears(min, max);\n$: years = getYears(min, max);\nfunction getYears(min, max) {\n    let years = [];\n    for (let i = min.getFullYear(); i <= max.getFullYear(); i++) {\n        years.push(i);\n    }\n    return years;\n}\n/** Locale object for internationalization */\nexport let locale = {};\n$: iLocale = getInnerLocale(locale);\n/** Wait with updating the date until a date is selected */\nexport let browseWithoutSelecting = false;\n$: browseYear = browseDate.getFullYear();\nfunction setYear(newYear) {\n    browseDate.setFullYear(newYear);\n    browse(browseDate);\n}\n$: browseMonth = browseDate.getMonth();\nfunction setMonth(newMonth) {\n    let newYear = browseDate.getFullYear();\n    if (newMonth === 12) {\n        newMonth = 0;\n        newYear++;\n    }\n    else if (newMonth === -1) {\n        newMonth = 11;\n        newYear--;\n    }\n    const maxDate = getMonthLength(newYear, newMonth);\n    const newDate = Math.min(browseDate.getDate(), maxDate);\n    browse(new Date(newYear, newMonth, newDate, browseDate.getHours(), browseDate.getMinutes(), browseDate.getSeconds(), browseDate.getMilliseconds()));\n}\n$: calendarDays = getCalendarDays(browseDate, iLocale.weekStartsOn);\nfunction selectDay(calendarDay) {\n    if (dayIsInRange(calendarDay, min, max)) {\n        browseDate.setFullYear(0);\n        browseDate.setMonth(0);\n        browseDate.setDate(1);\n        browseDate.setFullYear(calendarDay.year);\n        browseDate.setMonth(calendarDay.month);\n        browseDate.setDate(calendarDay.number);\n        setValueDate(browseDate);\n        dispatch('select', cloneDate(browseDate));\n    }\n}\nfunction dayIsInRange(calendarDay, min, max) {\n    const date = new Date(calendarDay.year, calendarDay.month, calendarDay.number);\n    const minDate = new Date(min.getFullYear(), min.getMonth(), min.getDate());\n    const maxDate = new Date(max.getFullYear(), max.getMonth(), max.getDate());\n    return date >= minDate && date <= maxDate;\n}\nfunction shiftKeydown(e) {\n    if (e.shiftKey && e.key === 'ArrowUp') {\n        setYear(browseDate.getFullYear() - 1);\n    }\n    else if (e.shiftKey && e.key === 'ArrowDown') {\n        setYear(browseDate.getFullYear() + 1);\n    }\n    else if (e.shiftKey && e.key === 'ArrowLeft') {\n        setMonth(browseDate.getMonth() - 1);\n    }\n    else if (e.shiftKey && e.key === 'ArrowRight') {\n        setMonth(browseDate.getMonth() + 1);\n    }\n    else {\n        return false;\n    }\n    e.preventDefault();\n    return true;\n}\nfunction yearKeydown(e) {\n    let shift = e.shiftKey || e.altKey;\n    if (shift) {\n        shiftKeydown(e);\n        return;\n    }\n    else if (e.key === 'ArrowUp') {\n        setYear(browseDate.getFullYear() - 1);\n    }\n    else if (e.key === 'ArrowDown') {\n        setYear(browseDate.getFullYear() + 1);\n    }\n    else if (e.key === 'ArrowLeft') {\n        setMonth(browseDate.getMonth() - 1);\n    }\n    else if (e.key === 'ArrowRight') {\n        setMonth(browseDate.getMonth() + 1);\n    }\n    else {\n        shiftKeydown(e);\n        return;\n    }\n    e.preventDefault();\n}\nfunction monthKeydown(e) {\n    let shift = e.shiftKey || e.altKey;\n    if (shift) {\n        shiftKeydown(e);\n        return;\n    }\n    else if (e.key === 'ArrowUp' || e.key === 'ArrowLeft') {\n        setMonth(browseDate.getMonth() - 1);\n    }\n    else if (e.key === 'ArrowDown' || e.key === 'ArrowRight') {\n        setMonth(browseDate.getMonth() + 1);\n    }\n    else {\n        shiftKeydown(e);\n        return;\n    }\n    e.preventDefault();\n}\nfunction keydown(e) {\n    let shift = e.shiftKey || e.altKey;\n    if (e.target?.tagName === 'SELECT' ||\n        e.target?.tagName === 'SPAN') {\n        // Ignore date/month <select> & TimePicker <input>\n        return;\n    }\n    if (shift) {\n        shiftKeydown(e);\n        return;\n    }\n    else if (e.key === 'ArrowUp') {\n        browseDate.setDate(browseDate.getDate() - 7);\n        setValueDate(browseDate);\n    }\n    else if (e.key === 'ArrowDown') {\n        browseDate.setDate(browseDate.getDate() + 7);\n        setValueDate(browseDate);\n    }\n    else if (e.key === 'ArrowLeft') {\n        browseDate.setDate(browseDate.getDate() - 1);\n        setValueDate(browseDate);\n    }\n    else if (e.key === 'ArrowRight') {\n        browseDate.setDate(browseDate.getDate() + 1);\n        setValueDate(browseDate);\n    }\n    else if (e.key === 'Enter') {\n        setValue(browseDate);\n        dispatch('select', cloneDate(browseDate));\n    }\n    else {\n        return;\n    }\n    e.preventDefault();\n}\n</script>\n\n<!-- svelte-ignore a11y-no-noninteractive-tabindex -->\n<!-- svelte-ignore a11y-no-static-element-interactions -->\n<div class=\"date-time-picker\" on:focusout tabindex=\"0\" on:keydown={keydown}>\n\t<div class=\"tab-container\" tabindex=\"-1\">\n\t\t<div class=\"top\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\taria-label=\"Previous month\"\n\t\t\t\tclass=\"page-button\"\n\t\t\t\ttabindex=\"-1\"\n\t\t\t\ton:click={() => setMonth(browseDate.getMonth() - 1)}\n\t\t\t>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n\t\t\t\t\t><path\n\t\t\t\t\t\td=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\"\n\t\t\t\t\t\ttransform=\"rotate(180, 12, 12)\"\n\t\t\t\t\t/></svg\n\t\t\t\t>\n\t\t\t</button>\n\t\t\t<div class=\"dropdown month\">\n\t\t\t\t<select\n\t\t\t\t\tvalue={browseMonth}\n\t\t\t\t\ton:keydown={monthKeydown}\n\t\t\t\t\ton:input={(e) => setMonth(parseInt(e.currentTarget.value))}\n\t\t\t\t>\n\t\t\t\t\t{#each iLocale.months as monthName, i}\n\t\t\t\t\t\t<option\n\t\t\t\t\t\t\tdisabled={new Date(browseYear, i, getMonthLength(browseYear, i), 23, 59, 59, 999) <\n\t\t\t\t\t\t\t\tmin || new Date(browseYear, i) > max}\n\t\t\t\t\t\t\tvalue={i}>{monthName}</option\n\t\t\t\t\t\t>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t\t<!--\n\t\t\t\t\tHere we have use `select.dummy-select` for showing just the <select> button. This\n\t\t\t\t\tis to style the <select> button without affecting the menu popup\n\t\t\t\t\t- `option { color: initial }` causes invisible menu in dark mode on Firefox\n\t\t\t\t\t- `option { color: initial; background-color: initial }` causes invisible menu in Chrome\n\t\t\t\t\t- `select { background-color: $bg; color: $text }` causes white scrollbar in dark mode on Firefox\n\t\t\t\t-->\n\t\t\t\t<select class=\"dummy-select\" tabindex=\"-1\">\n\t\t\t\t\t{#each iLocale.months as monthName, i}\n\t\t\t\t\t\t<option value={i} selected={i === browseMonth}>{monthName}</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n\t\t\t\t\t><path d=\"M6 0l12 12-12 12z\" transform=\"rotate(90, 12, 12)\" /></svg\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<div class=\"dropdown year\">\n\t\t\t\t<select\n\t\t\t\t\tvalue={browseYear}\n\t\t\t\t\ton:input={(e) => setYear(parseInt(e.currentTarget.value))}\n\t\t\t\t\ton:keydown={yearKeydown}\n\t\t\t\t>\n\t\t\t\t\t{#each years as v}\n\t\t\t\t\t\t<option value={v}>{v}</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t\t<!-- style <select> button without affecting menu popup -->\n\t\t\t\t<select class=\"dummy-select\" tabindex=\"-1\">\n\t\t\t\t\t{#each years as v}\n\t\t\t\t\t\t<option value={v} selected={v === browseDate.getFullYear()}>{v}</option>\n\t\t\t\t\t{/each}\n\t\t\t\t</select>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n\t\t\t\t\t><path d=\"M6 0l12 12-12 12z\" transform=\"rotate(90, 12, 12)\" /></svg\n\t\t\t\t>\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\taria-label=\"Next month\"\n\t\t\t\tclass=\"page-button\"\n\t\t\t\ttabindex=\"-1\"\n\t\t\t\ton:click={() => setMonth(browseDate.getMonth() + 1)}\n\t\t\t>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"\n\t\t\t\t\t><path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\" /></svg\n\t\t\t\t>\n\t\t\t</button>\n\t\t</div>\n\t\t<div class=\"header\">\n\t\t\t<!-- eslint-disable-next-line @typescript-eslint/no-unused-vars -->\n\t\t\t{#each Array(7) as _, i}\n\t\t\t\t{#if i + iLocale.weekStartsOn < 7}\n\t\t\t\t\t<div class=\"header-cell\">{iLocale.weekdays[iLocale.weekStartsOn + i]}</div>\n\t\t\t\t{:else}\n\t\t\t\t\t<div class=\"header-cell\">{iLocale.weekdays[iLocale.weekStartsOn + i - 7]}</div>\n\t\t\t\t{/if}\n\t\t\t{/each}\n\t\t</div>\n\t\t<!-- eslint-disable-next-line @typescript-eslint/no-unused-vars -->\n\t\t{#each Array(6) as _, weekIndex}\n\t\t\t<div class=\"week\">\n\t\t\t\t{#each calendarDays.slice(weekIndex * 7, weekIndex * 7 + 7) as calendarDay}\n\t\t\t\t\t<!-- svelte-ignore a11y-click-events-have-key-events -->\n\t\t\t\t\t<div\n\t\t\t\t\t\tclass=\"cell\"\n\t\t\t\t\t\ton:click={() => selectDay(calendarDay)}\n\t\t\t\t\t\tclass:disabled={!dayIsInRange(calendarDay, min, max)}\n\t\t\t\t\t\tclass:selected={value &&\n\t\t\t\t\t\t\tcalendarDay.year === value.getFullYear() &&\n\t\t\t\t\t\t\tcalendarDay.month === value.getMonth() &&\n\t\t\t\t\t\t\tcalendarDay.number === value.getDate()}\n\t\t\t\t\t\tclass:today={calendarDay.year === todayDate.getFullYear() &&\n\t\t\t\t\t\t\tcalendarDay.month === todayDate.getMonth() &&\n\t\t\t\t\t\t\tcalendarDay.number === todayDate.getDate()}\n\t\t\t\t\t\tclass:other-month={calendarDay.month !== browseMonth}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span>{calendarDay.number}</span>\n\t\t\t\t\t</div>\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t{/each}\n\n\t\t<TimePicker {timePrecision} bind:browseDate {setTime} />\n\n\t\t<slot />\n\t</div>\n</div>\n\n<style>.date-time-picker {\n  display: inline-block;\n  color: var(--date-picker-foreground, #000000);\n  background: var(--date-picker-background, #ffffff);\n  user-select: none;\n  -webkit-user-select: none;\n  padding: 0.5rem;\n  cursor: default;\n  font-size: 0.75rem;\n  border: 1px solid rgba(103, 113, 137, 0.3);\n  border-radius: 3px;\n  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.08), 0px 2px 6px rgba(0, 0, 0, 0.11);\n  outline: none;\n  transition: all 80ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n.date-time-picker:focus {\n  border-color: var(--date-picker-highlight-border, #0269f7);\n  box-shadow: 0px 0px 0px 2px var(--date-picker-highlight-shadow, rgba(2, 105, 247, 0.4));\n}\n\n.tab-container {\n  outline: none;\n}\n\n.top {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 0.5rem;\n}\n\n.dropdown {\n  margin-left: 0.25rem;\n  margin-right: 0.25rem;\n  position: relative;\n  display: flex;\n}\n.dropdown svg {\n  position: absolute;\n  right: 0px;\n  top: 0px;\n  height: 100%;\n  width: 8px;\n  padding: 0rem 0.5rem;\n  pointer-events: none;\n  box-sizing: content-box;\n}\n\n.month {\n  flex-grow: 1;\n}\n\n.year {\n  flex-grow: 1;\n}\n\nsvg {\n  display: block;\n  fill: var(--date-picker-foreground, #000000);\n  opacity: 0.75;\n  outline: none;\n}\n\n.page-button {\n  background-color: transparent;\n  width: 1.5rem;\n  height: 1.5rem;\n  flex-shrink: 0;\n  border-radius: 5px;\n  box-sizing: border-box;\n  border: 1px solid transparent;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.page-button:hover {\n  background-color: rgba(128, 128, 128, 0.08);\n  border: 1px solid rgba(128, 128, 128, 0.08);\n}\n.page-button svg {\n  width: 0.68rem;\n  height: 0.68rem;\n}\n\nselect.dummy-select {\n  position: absolute;\n  width: 100%;\n  pointer-events: none;\n  outline: none;\n  color: var(--date-picker-foreground, #000000);\n  background-color: var(--date-picker-background, #ffffff);\n  border-radius: 3px;\n}\n\nselect:focus + select.dummy-select {\n  border-color: var(--date-picker-highlight-border, #0269f7);\n  box-shadow: 0px 0px 0px 2px var(--date-picker-highlight-shadow, rgba(2, 105, 247, 0.4));\n}\n\nselect:not(.dummy-select) {\n  opacity: 0;\n}\n\nselect {\n  font-size: inherit;\n  font-family: inherit;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  flex-grow: 1;\n  padding: 0rem 0.35rem;\n  height: 1.5rem;\n  padding-right: 1.3rem;\n  margin: 0px;\n  border: 1px solid rgba(108, 120, 147, 0.3);\n  outline: none;\n  transition: all 80ms cubic-bezier(0.4, 0, 0.2, 1);\n  background-image: none;\n}\n\n.header {\n  display: flex;\n  font-weight: 600;\n  padding-bottom: 2px;\n}\n\n.header-cell {\n  width: 1.875rem;\n  text-align: center;\n  flex-grow: 1;\n}\n\n.week {\n  display: flex;\n}\n\n.cell {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 2rem;\n  height: 1.94rem;\n  flex-grow: 1;\n  border-radius: 5px;\n  box-sizing: border-box;\n  border: 2px solid transparent;\n}\n.cell:hover {\n  border: 1px solid rgba(128, 128, 128, 0.08);\n}\n.cell.today {\n  font-weight: 600;\n  border: 2px solid var(--date-picker-today-border, rgba(128, 128, 128, 0.3));\n}\n.cell:hover {\n  background-color: rgba(128, 128, 128, 0.08);\n}\n.cell.disabled {\n  visibility: hidden;\n}\n.cell.disabled:hover {\n  border: none;\n  background-color: transparent;\n}\n.cell.other-month span {\n  opacity: 0.4;\n}\n.cell.selected {\n  color: var(--date-picker-selected-color, inherit);\n  background: var(--date-picker-selected-background, rgba(2, 105, 247, 0.2));\n  border: 2px solid var(--date-picker-highlight-border, #0269f7);\n}</style>\n","import { getMonthLength } from './date-utils.js';\nimport { getInnerLocale } from './locale';\n/** Parse a string according to the supplied format tokens. Returns a date if successful, and the missing punctuation if there is any that should be after the string */\nexport function parse(str, tokens, baseDate) {\n    let missingPunctuation = '';\n    let valid = true;\n    baseDate = baseDate || new Date(2020, 0, 1, 0, 0, 0, 0);\n    let year = baseDate.getFullYear();\n    let month = baseDate.getMonth();\n    let day = baseDate.getDate();\n    let hours = baseDate.getHours();\n    let minutes = baseDate.getMinutes();\n    let seconds = baseDate.getSeconds();\n    const ms = baseDate.getMilliseconds();\n    function parseString(token) {\n        for (let i = 0; i < token.length; i++) {\n            if (str.startsWith(token[i])) {\n                str = str.slice(1);\n            }\n            else {\n                valid = false;\n                if (str.length === 0)\n                    missingPunctuation = token.slice(i);\n                return;\n            }\n        }\n    }\n    function parseUint(pattern, min, max) {\n        const matches = str.match(pattern);\n        if (matches?.[0]) {\n            str = str.slice(matches[0].length);\n            const n = parseInt(matches[0]);\n            if (n > max || n < min) {\n                valid = false;\n                return null;\n            }\n            else {\n                return n;\n            }\n        }\n        else {\n            valid = false;\n            return null;\n        }\n    }\n    function parseEnum(allowedValues) {\n        const n = allowedValues.findIndex((allowedValue) => {\n            return allowedValue.toLowerCase() === str.slice(0, allowedValue.length).toLowerCase();\n        });\n        if (n >= 0) {\n            str = str.slice(allowedValues[n].length);\n            return n;\n        }\n        else {\n            valid = false;\n            return null;\n        }\n    }\n    function parseToken(token) {\n        if (typeof token === 'string') {\n            parseString(token);\n        }\n        else if (token.id === 'yy') {\n            const value = parseUint(/^[0-9]{2}/, 0, 99);\n            if (value !== null)\n                year = 2000 + value;\n        }\n        else if (token.id === 'yyyy') {\n            const value = parseUint(/^[0-9]{4}/, 0, 9999);\n            if (value !== null)\n                year = value;\n        }\n        else if (token.id === 'MM') {\n            const value = parseUint(/^[0-9]{2}/, 1, 12);\n            if (value !== null)\n                month = value - 1;\n        }\n        else if (token.id === 'MMM') {\n            const value = parseEnum(token.allowedValues || []);\n            if (value !== null)\n                month = value;\n        }\n        else if (token.id === 'dd') {\n            const value = parseUint(/^[0-9]{2}/, 1, 31);\n            if (value !== null)\n                day = value;\n        }\n        else if (token.id === 'HH') {\n            const value = parseUint(/^[0-9]{2}/, 0, 23);\n            if (value !== null)\n                hours = value;\n        }\n        else if (token.id === 'mm') {\n            const value = parseUint(/^[0-9]{2}/, 0, 59);\n            if (value !== null)\n                minutes = value;\n        }\n        else if (token.id === 'ss') {\n            const value = parseUint(/^[0-9]{2}/, 0, 59);\n            if (value !== null)\n                seconds = value;\n        }\n    }\n    for (const token of tokens) {\n        parseToken(token);\n        if (!valid)\n            break;\n    }\n    const monthLength = getMonthLength(year, month);\n    if (day > monthLength) {\n        valid = false;\n    }\n    return {\n        date: valid ? new Date(year, month, day, hours, minutes, seconds, ms) : null,\n        missingPunctuation: missingPunctuation,\n    };\n}\nfunction twoDigit(value) {\n    return ('0' + value.toString()).slice(-2);\n}\nfunction parseRule(s, innerLocale) {\n    if (s.startsWith('yyyy')) {\n        return {\n            id: 'yyyy',\n            toString: (d) => d.getFullYear().toString(),\n        };\n    }\n    else if (s.startsWith('yy')) {\n        return {\n            id: 'yy',\n            toString: (d) => d.getFullYear().toString().slice(-2),\n        };\n    }\n    else if (s.startsWith('MMM')) {\n        return {\n            id: 'MMM',\n            allowedValues: innerLocale.shortMonths,\n            toString: (d) => innerLocale.shortMonths[d.getMonth()],\n        };\n    }\n    else if (s.startsWith('MM')) {\n        return {\n            id: 'MM',\n            toString: (d) => twoDigit(d.getMonth() + 1),\n        };\n    }\n    else if (s.startsWith('dd')) {\n        return {\n            id: 'dd',\n            toString: (d) => twoDigit(d.getDate()),\n        };\n    }\n    else if (s.startsWith('HH')) {\n        return {\n            id: 'HH',\n            toString: (d) => twoDigit(d.getHours()),\n        };\n    }\n    else if (s.startsWith('mm')) {\n        return {\n            id: 'mm',\n            toString: (d) => twoDigit(d.getMinutes()),\n        };\n    }\n    else if (s.startsWith('ss')) {\n        return {\n            id: 'ss',\n            toString: (d) => twoDigit(d.getSeconds()),\n        };\n    }\n}\nexport function createFormat(s, locale = {}) {\n    const innerLocale = getInnerLocale(locale);\n    const tokens = [];\n    while (s.length > 0) {\n        const token = parseRule(s, innerLocale);\n        if (token) {\n            // parsed a token like \"yyyy\"\n            tokens.push(token);\n            s = s.slice(token.id.length);\n        }\n        else if (typeof tokens[tokens.length - 1] === 'string') {\n            // last token is a string token, so append to it\n            tokens[tokens.length - 1] += s[0];\n            s = s.slice(1);\n        }\n        else {\n            // add string token\n            tokens.push(s[0]);\n            s = s.slice(1);\n        }\n    }\n    return tokens;\n}\n","<script lang=\"ts\">import { fly } from 'svelte/transition';\nimport { cubicInOut } from 'svelte/easing';\nimport { toText } from './date-utils.js';\nimport { parse, createFormat } from './parse.js';\nimport DateTimePicker from './DatePicker.svelte';\nimport { writable } from 'svelte/store';\nimport { createEventDispatcher } from 'svelte';\nconst dispatch = createEventDispatcher();\n/** Default date to display in picker before value is assigned */\nconst defaultDate = new Date();\nfunction cloneDate(d) {\n    return new Date(d.getTime());\n}\n// inner date value store for preventing value updates (and also\n// text updates as a result) when date is unchanged\nconst innerStore = writable(null);\nconst store = (() => {\n    return {\n        subscribe: innerStore.subscribe,\n        set: (date) => {\n            if (date === null || date === undefined) {\n                innerStore.set(null);\n                value = date;\n            }\n            else if (date.getTime() !== $innerStore?.getTime()) {\n                innerStore.set(cloneDate(date));\n                value = date;\n            }\n        },\n    };\n})();\n/** Date value */\nexport let value = null;\n$: store.set(value);\n/** The earliest value the user can select */\nexport let min = new Date(defaultDate.getFullYear() - 20, 0, 1);\n/** The latest value the user can select */\nexport let max = new Date(defaultDate.getFullYear(), 11, 31, 23, 59, 59, 999);\n/** Set the input element's ID attribute */\nexport let id = null;\n/** Placeholder text to show when input field is empty */\nexport let placeholder = '2020-12-31 23:00:00';\n/** Whether the text is valid */\nexport let valid = true;\n/** Disable the input **/\nexport let disabled = false;\n/** Require a value to submit form **/\nexport let required = false;\n/** Pass custom classes */\nlet classes = '';\nexport { classes as class };\n/** Locale object for internationalization */\nexport let locale = {};\n/** Format string */\nexport let format = 'yyyy-MM-dd HH:mm:ss';\nlet formatTokens = createFormat(format, locale);\n$: formatTokens = createFormat(format, locale);\nfunction valueUpdate(value, formatTokens) {\n    text = toText(value, formatTokens);\n}\n$: valueUpdate($store, formatTokens);\nexport let text = toText($store, formatTokens);\nfunction textUpdate(text, formatTokens) {\n    if (text.length) {\n        const result = parse(text, formatTokens, $store);\n        if (result.date !== null) {\n            valid = true;\n            store.set(result.date);\n        }\n        else {\n            valid = false;\n        }\n    }\n    else {\n        valid = true; // <-- empty string is always valid\n        // value resets to null if you clear the field\n        if (value) {\n            value = null;\n            store.set(null);\n        }\n    }\n}\n$: textUpdate(text, formatTokens);\n/** Whether the date popup is visible */\nexport let visible = false;\n/** Close the date popup when a date is selected */\nexport let closeOnSelection = false;\n/** Wait with updating the date until a date is selected */\nexport let browseWithoutSelecting = false;\n/** Show a time picker with the specified precision */\nexport let timePrecision = null;\n// handle on:focusout for parent element. If the parent element loses\n// focus (e.g input element), visible is set to false\nfunction onFocusOut(e) {\n    if (e?.currentTarget instanceof HTMLElement &&\n        e.relatedTarget &&\n        e.relatedTarget instanceof Node &&\n        e.currentTarget.contains(e.relatedTarget)) {\n        return;\n    }\n    else {\n        visible = false;\n    }\n}\nfunction keydown(e) {\n    if (e.key === 'Escape' && visible) {\n        visible = false;\n        e.preventDefault();\n        // When the date picker is open, we prevent 'Escape' from propagating,\n        // so for example a parent modal won't be closed\n        e.stopPropagation();\n    }\n    else if (e.key === 'Enter') {\n        visible = !visible;\n        e.preventDefault();\n    }\n}\nfunction onSelect(e) {\n    dispatch('select', e.detail);\n    if (closeOnSelection) {\n        visible = false;\n    }\n}\n/** Automatically adjust date popup position to not appear outside the screen */\nexport let dynamicPositioning = false;\nlet InputElement;\nlet pickerElement;\nlet showAbove = false;\nlet pickerLeftPosition = null;\nfunction setDatePickerPosition() {\n    // Defaults\n    showAbove = false;\n    pickerLeftPosition = null;\n    if (visible && pickerElement && dynamicPositioning) {\n        // The child of the dateField is what is visually seen, all calculations should use this to make sure they line up properly\n        const inputRect = InputElement.getBoundingClientRect();\n        const horizontalOverflow = pickerElement.offsetWidth - inputRect.width;\n        const bottomThreshold = inputRect.bottom + pickerElement.offsetHeight + 5;\n        const rightThreshold = inputRect.left + pickerElement.offsetWidth + 5;\n        if (bottomThreshold > window.innerHeight) {\n            // If .date-time-field is on the bottom half of the screen, open above\n            showAbove = true;\n        }\n        if (rightThreshold > window.innerWidth) {\n            // If date-time-field is on the right of the screen, open to the left\n            pickerLeftPosition = -horizontalOverflow;\n            if (inputRect.left < horizontalOverflow + 5) {\n                // If it would overflow on the left too, open in the middle of the screen\n                const windowCenterPos = window.innerWidth / 2;\n                const newPos = windowCenterPos - pickerElement.offsetWidth / 2;\n                pickerLeftPosition = newPos - inputRect.left;\n            }\n        }\n    }\n}\nfunction flyAutoPosition(node) {\n    setDatePickerPosition();\n    return fly(node, {\n        duration: 200,\n        easing: cubicInOut,\n        y: showAbove ? 5 : -5,\n    });\n}\n</script>\n\n<!-- svelte-ignore a11y-no-static-element-interactions -->\n<div class=\"date-time-field {classes}\" on:focusout={onFocusOut} on:keydown={keydown}>\n\t<input\n\t\tbind:this={InputElement}\n\t\tclass:invalid={!valid}\n\t\ttype=\"text\"\n\t\tautocomplete=\"off\"\n\t\tvalue={text}\n\t\t{id}\n\t\t{placeholder}\n\t\t{disabled}\n\t\t{required}\n\t\ton:focus={() => (visible = true)}\n\t\ton:mousedown={() => (visible = true)}\n\t\ton:input={(e) => {\n\t\t\tif (\n\t\t\t\te instanceof InputEvent &&\n\t\t\t\te.inputType === 'insertText' &&\n\t\t\t\ttypeof e.data === 'string' &&\n\t\t\t\te.currentTarget.value === text + e.data\n\t\t\t) {\n\t\t\t\t// check for missing punctuation, and add if there is any\n\t\t\t\tlet result = parse(text, formatTokens, $store)\n\t\t\t\tif (result.missingPunctuation !== '' && !result.missingPunctuation.startsWith(e.data)) {\n\t\t\t\t\ttext = text + result.missingPunctuation + e.data\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\ttext = e.currentTarget.value\n\t\t}}\n\t/>\n\t{#if visible && !disabled}\n\t\t<div\n\t\t\tclass=\"picker\"\n\t\t\tclass:visible\n\t\t\tclass:above={showAbove}\n\t\t\ttransition:flyAutoPosition\n\t\t\tbind:this={pickerElement}\n\t\t\tstyle:--picker-left-position=\"{pickerLeftPosition}px\"\n\t\t>\n\t\t\t<DateTimePicker\n\t\t\t\ton:focusout={onFocusOut}\n\t\t\t\ton:select={onSelect}\n\t\t\t\tbind:value={$store}\n\t\t\t\t{min}\n\t\t\t\t{max}\n\t\t\t\t{locale}\n\t\t\t\t{browseWithoutSelecting}\n\t\t\t\t{timePrecision}\n\t\t\t>\n\t\t\t\t<slot />\n\t\t\t</DateTimePicker>\n\t\t</div>\n\t{/if}\n</div>\n\n<style>.date-time-field {\n  position: relative;\n}\n\ninput {\n  color: var(--date-picker-foreground, #000000);\n  background: var(--date-picker-background, #ffffff);\n  min-width: 0px;\n  box-sizing: border-box;\n  padding: 4px 6px;\n  margin: 0px;\n  border: 1px solid rgba(103, 113, 137, 0.3);\n  border-radius: 3px;\n  width: var(--date-input-width, 150px);\n  outline: none;\n  transition: all 80ms cubic-bezier(0.4, 0, 0.2, 1);\n}\ninput:focus {\n  border-color: var(--date-picker-highlight-border, #0269f7);\n  box-shadow: 0px 0px 0px 2px var(--date-picker-highlight-shadow, rgba(2, 105, 247, 0.4));\n}\ninput:disabled {\n  opacity: 0.5;\n}\n\n.invalid {\n  border: 1px solid rgba(249, 47, 114, 0.5);\n  background-color: rgba(249, 47, 114, 0.1);\n}\n.invalid:focus {\n  border-color: #f92f72;\n  box-shadow: 0px 0px 0px 2px rgba(249, 47, 114, 0.5);\n}\n\n.picker {\n  display: none;\n  position: absolute;\n  padding: 1px;\n  left: var(--picker-left-position);\n  z-index: 10;\n}\n.picker.above {\n  bottom: 100%;\n}\n.picker.visible {\n  display: block;\n}</style>\n","<script lang=\"ts\">\n  import { isNimbusVersion } from \"~/utils/constants\";\n  import { onMount } from \"svelte\";\n  import numeral from \"numeral\";\n  import dayjs from \"dayjs\";\n  import { DateInput } from \"date-picker-svelte\";\n  import { isDarkMode, userPublicAddress } from \"~/store\";\n  import {\n    getVirtualPortfolio,\n    handleMarketTokens,\n    getVirtualPortfolioPerformance,\n  } from \"~/lib/queryAPI\";\n  import { createQuery } from \"@tanstack/svelte-query\";\n  import { isNaN } from \"lodash\";\n  import { triggerToast } from \"~/utils/functions\";\n  import { t } from \"~/lib/i18n\";\n\n  import Loading from \"~/components/Loading.svelte\";\n  import Button from \"~/components/Button.svelte\";\n  import LoadingPremium from \"~/components/LoadingPremium.svelte\";\n\n  export let handleSubmit = (\n    data: any,\n    type: any,\n    virtualPortfolioNetworth: any,\n  ) => {};\n  export let handleCancel = (id: any) => {};\n  export let isLoading;\n  export let wallet;\n  export let listVirtualPortfolio;\n  export let virtualPortfolioId;\n  export let type;\n\n  let searchValue = \"\";\n  let timerDebounce: any;\n  const debounceSearch = (value: any) => {\n    clearTimeout(timerDebounce);\n    timerDebounce = setTimeout(() => {\n      searchValue = value;\n    }, 300);\n  };\n\n  let virtualPortfolioName = \"\";\n  let virtualPortfolioNetworth: any;\n  let time = new Date();\n  let rebalanceTime: any = null;\n  let listToken: any = [];\n\n  let defaultData = {\n    defaultSelectedTokenList: [],\n    defaultName: \"\",\n  };\n  let dataVirtualPortfolioPerformance: any = {};\n\n  let selectedTokenList: any = [];\n  let listTokenLocked: any = [];\n  let selectedTokenRemove: any = {};\n\n  let checkedStatus = true;\n\n  let searchDataResult: any = [];\n\n  $: queryVirtualPortfolioPerformance = createQuery({\n    queryKey: [\"virtual-portfolio-performance\", wallet, virtualPortfolioId],\n    queryFn: () =>\n      getVirtualPortfolioPerformance(\n        wallet,\n        virtualPortfolioId,\n        $userPublicAddress,\n      ),\n    retry: false,\n    enabled: Boolean(\n      wallet &&\n        wallet?.length !== 0 &&\n        virtualPortfolioId &&\n        virtualPortfolioId?.length !== 0,\n    ),\n  });\n\n  $: {\n    if (\n      !$queryVirtualPortfolioPerformance.isError &&\n      $queryVirtualPortfolioPerformance.data !== undefined\n    ) {\n      dataVirtualPortfolioPerformance =\n        $queryVirtualPortfolioPerformance.data?.data;\n    }\n  }\n\n  onMount(() => {\n    if (type === \"add\") {\n      virtualPortfolioNetworth = 1000;\n    }\n  });\n\n  const handleRecalculateNetWorth = (date: any) => {\n    const formatDate = dayjs(date).format(\"YYYY-MM-DD\");\n\n    const formatDataPortfolio = dataVirtualPortfolioPerformance?.portfolio?.map(\n      (item: any) => {\n        const time = dayjs(item.time).unix();\n        return {\n          value: item.performance,\n          time: dayjs(time * 1000).format(\"YYYY-MM-DD\"),\n        };\n      },\n    );\n\n    const selectedDataPerformance = formatDataPortfolio.find(\n      (item: any) => item.time === formatDate,\n    );\n\n    if (selectedDataPerformance) {\n      const selectedPortfolioProfile = listVirtualPortfolio.find(\n        (item: any) => item?.id === virtualPortfolioId,\n      );\n\n      return (\n        selectedPortfolioProfile?.initial_networth *\n          (selectedDataPerformance?.value / 100) +\n        selectedPortfolioProfile.initial_networth\n      );\n    }\n\n    return 0;\n  };\n\n  $: queryVirtualPortfolio = createQuery({\n    queryKey: [\n      \"virtual-portfolio\",\n      virtualPortfolioId,\n      wallet,\n      $userPublicAddress,\n    ],\n    queryFn: () =>\n      getVirtualPortfolio(wallet, virtualPortfolioId, $userPublicAddress),\n    retry: false,\n    enabled: Boolean(\n      wallet &&\n        wallet.length !== 0 &&\n        virtualPortfolioId &&\n        virtualPortfolioId?.length !== 0 &&\n        listVirtualPortfolio.length !== 0,\n    ),\n  });\n\n  $: {\n    if (\n      !$queryVirtualPortfolio.isError &&\n      $queryVirtualPortfolio.data !== undefined\n    ) {\n      formatDataVirtualPortfolio($queryVirtualPortfolio?.data?.data);\n    }\n  }\n\n  const formatDataVirtualPortfolio = (data: any) => {\n    const selectedPortfolioProfile = listVirtualPortfolio.find(\n      (item: any) => item?.id === virtualPortfolioId,\n    );\n\n    const virtualPortfolioNameList = data && Object.getOwnPropertyNames(data);\n\n    const formatDataVirtualPortfolio =\n      virtualPortfolioNameList &&\n      virtualPortfolioNameList?.map((item) => {\n        return {\n          portfolioName: selectedPortfolioProfile?.name,\n          coins: data[item]?.tokens?.map((coin) => {\n            return {\n              ...coin,\n              percent: Number(coin?.percent),\n            };\n          }),\n          history: data[item]?.history?.map((coin) => {\n            return {\n              ...coin,\n              percent: Number(coin?.percent),\n            };\n          }),\n          updatedTime: selectedPortfolioProfile?.startedAt,\n        };\n      });\n\n    const dataVirtualPortfolio = virtualPortfolioNameList?.reduce(\n      (acc: any, key: any, index: any) => {\n        acc[key] = formatDataVirtualPortfolio[index];\n        return acc;\n      },\n      {},\n    );\n\n    const selectedData = {\n      ...dataVirtualPortfolio[virtualPortfolioId],\n      status: selectedPortfolioProfile?.status,\n      networth: selectedPortfolioProfile?.networth || 0,\n      initial_networth: selectedPortfolioProfile?.initial_networth || 0,\n      startedAt: selectedPortfolioProfile?.startedAt,\n    };\n\n    if (type === \"edit\" && selectedData) {\n      if (selectedData.status === \"PRIVATE\") {\n        checkedStatus = false;\n      }\n\n      virtualPortfolioName = selectedData.portfolioName;\n\n      virtualPortfolioNetworth = selectedData?.initial_networth;\n\n      time = dayjs(selectedData.startedAt).toDate();\n\n      selectedTokenList = selectedData?.coins?.map((item: any) => {\n        return {\n          id: item?.coinId,\n          logo: item?.logo,\n          name: item?.name,\n          percent: Number(numeral(item?.percent).format(\"0,0.00\")),\n          symbol: item?.symbol,\n        };\n      });\n\n      defaultData.defaultSelectedTokenList = selectedTokenList;\n      defaultData.defaultName = virtualPortfolioName;\n    }\n  };\n\n  // get search token\n  $: queryListSearchToken = createQuery({\n    queryKey: [\"list-search-token\", searchValue],\n    queryFn: () => handleMarketTokens(searchValue ? searchValue : \"\"),\n  });\n\n  $: {\n    if (!$queryListSearchToken.isError && $queryListSearchToken?.data) {\n      formatListSearchToken($queryListSearchToken?.data);\n    }\n  }\n\n  const formatListSearchToken = (data: any) => {\n    listToken = data?.map((item: any) => {\n      return {\n        id: item?.id,\n        name: item?.name,\n        symbol: item?.symbol,\n        logo: item?.large || item?.thumb,\n        percent: 0,\n      };\n    });\n    searchDataResult = listToken;\n  };\n\n  $: {\n    if (selectedTokenList) {\n      searchDataResult = searchDataResult?.map((item: any) => {\n        return {\n          ...item,\n          percent:\n            selectedTokenRemove &&\n            Object.keys(selectedTokenRemove).length !== 0 &&\n            selectedTokenRemove?.id === item.id\n              ? 0\n              : item.percent,\n        };\n      });\n\n      listToken = listToken?.map((item: any) => {\n        return {\n          ...item,\n          percent:\n            selectedTokenRemove &&\n            Object.keys(selectedTokenRemove).length !== 0 &&\n            selectedTokenRemove?.id === item.id\n              ? 0\n              : item.percent,\n        };\n      });\n\n      if (selectedTokenList.length === 0) {\n        selectedTokenRemove = {};\n      }\n    }\n  }\n\n  $: remaining = selectedTokenList?.reduce(\n    (prev: any, item: any) => prev + Number(item.percent),\n    0,\n  );\n\n  const handleAutoAllocate = () => {\n    if (isLoading) {\n      return;\n    }\n    if (listTokenLocked && listTokenLocked.length !== 0) {\n      const totalPercent = listTokenLocked.reduce(\n        (prev: any, item: any) => prev + Number(item.percent),\n        0,\n      );\n\n      const orderSelectedTokenList = selectedTokenList.filter((token) =>\n        listTokenLocked.every((lockedToken) => lockedToken.id !== token.id),\n      );\n\n      selectedTokenList = selectedTokenList.map((item) => {\n        if (item?.locked) {\n          return item;\n        }\n\n        return {\n          ...item,\n          percent: (100 - totalPercent) / orderSelectedTokenList.length,\n        };\n      });\n    } else {\n      selectedTokenList = selectedTokenList.map((item) => {\n        return {\n          ...item,\n          percent: 100 / selectedTokenList.length,\n        };\n      });\n    }\n  };\n\n  const handleClearAllTokenAllocation = () => {\n    if (isLoading) {\n      return;\n    }\n    selectedTokenList = [];\n    remaining = 0;\n    selectedTokenRemove = {};\n    listToken = listToken?.map((item) => {\n      return {\n        ...item,\n        percent: 0,\n      };\n    });\n  };\n\n  const handleRemoveTokenAllocation = (data: any) => {\n    if (isLoading) {\n      return;\n    }\n    if (\n      listTokenLocked.length !== 0 &&\n      listTokenLocked.find((item) => item.id === data.id)\n    ) {\n      listTokenLocked = listTokenLocked.filter((item) => item.id !== data.id);\n    }\n    selectedTokenList = selectedTokenList.filter((item) => item.id !== data.id);\n    selectedTokenRemove = data;\n  };\n\n  const handleDecreaseTokenAllocation = (data: any) => {\n    if (data?.locked || isLoading) {\n      return;\n    }\n    if (data.percent > 0) {\n      data.percent -= 1;\n      selectedTokenList = selectedTokenList?.map((item) => {\n        if (item.id === data.id) {\n          return data;\n        }\n        return item;\n      });\n    }\n  };\n\n  const handleIncreaseTokenAllocation = (data: any) => {\n    if (data?.locked || isLoading) {\n      return;\n    }\n    if (data.percent < 100) {\n      data.percent += 1;\n      selectedTokenList = selectedTokenList?.map((item) => {\n        if (item.id === data.id) {\n          return data;\n        }\n        return item;\n      });\n    }\n  };\n\n  const handleLockTokenAllocation = (data: any) => {\n    if (isLoading) {\n      return;\n    }\n    if (\n      listTokenLocked.length !== 0 &&\n      listTokenLocked.find((item) => item.id === data.id)\n    ) {\n      listTokenLocked = listTokenLocked.filter((item) => item.id !== data.id);\n\n      selectedTokenList = selectedTokenList.map((item) => {\n        if (item.id === data.id) {\n          return {\n            ...item,\n            locked: false,\n          };\n        }\n        return item;\n      });\n    } else {\n      listTokenLocked = [...listTokenLocked, data];\n      selectedTokenList = selectedTokenList.map((item) => {\n        if (item.id === data.id) {\n          return {\n            ...item,\n            locked: true,\n          };\n        }\n        return item;\n      });\n    }\n  };\n\n  const handleChangeTokenAllocation = (event: any, data: any) => {\n    if (data?.locked || isLoading) {\n      return;\n    }\n\n    let value = parseFloat(event?.target?.value);\n\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    }\n    if (value < 0) {\n      value = 0;\n    }\n    if (value > 100) {\n      value = 100;\n    }\n\n    selectedTokenList = selectedTokenList?.map((item) => {\n      if (item.id === data.id) {\n        return {\n          ...item,\n          percent: Number(numeral(value).format(\"0,0.00\")),\n        };\n      }\n      return item;\n    });\n  };\n\n  const handleSelectToken = (data: any) => {\n    if (isLoading) {\n      return;\n    }\n    const isIncludes =\n      selectedTokenList &&\n      selectedTokenList?.find((item) => item.id === data.id);\n    if (!isIncludes) {\n      selectedTokenList = [\n        ...selectedTokenList,\n        listToken.filter((item) => item.id === data.id)[0],\n      ];\n    }\n  };\n\n  const handleChangeNetworth = (event: any) => {\n    if (isLoading) {\n      return;\n    }\n    let value = parseFloat(event?.target?.value);\n    if (isNaN(value)) {\n      value = 0;\n    }\n    if (value < 0) {\n      value = 0;\n    }\n    virtualPortfolioNetworth = value;\n  };\n\n  const handleSelectTimeRebalance = (value: any) => {\n    rebalanceTime = value.detail;\n  };\n\n  const handleCancelRebalance = () => {\n    if (isLoading) {\n      return;\n    }\n    handleCancel(virtualPortfolioId);\n  };\n\n  const handleSubmitRebalance = () => {\n    if ($queryListSearchToken.isFetching) {\n      return;\n    }\n\n    if (virtualPortfolioName.length === 0) {\n      triggerToast(\"Missing virtual portfolio name!\", \"fail\");\n      return;\n    }\n\n    if (\n      type === \"add\" &&\n      (Number(virtualPortfolioNetworth) === 0 ||\n        !virtualPortfolioNetworth ||\n        Number(virtualPortfolioNetworth) < 100)\n    ) {\n      triggerToast(\n        \"Your virtual portfolio networth is lower than $100!\",\n        \"fail\",\n      );\n      return;\n    }\n\n    if (remaining !== 100) {\n      triggerToast(\"Complete your virtual portfolio to 100%!\", \"fail\");\n      return;\n    }\n\n    if (selectedTokenList.find((item: any) => item.percent === 0)) {\n      triggerToast(\n        \"One of all token you have been selected and percent input is not valid!\",\n        \"fail\",\n      );\n      return;\n    }\n\n    handleSubmit(\n      {\n        initialTime: dayjs(\n          type === \"edit\"\n            ? rebalanceTime === time || rebalanceTime === null\n              ? dayjs(time).add(1, \"day\").toDate()\n              : rebalanceTime\n            : time,\n        ).format(),\n        portfolioName: virtualPortfolioName,\n        coins: selectedTokenList?.map((item: any) => {\n          return {\n            coin: item.id.toString(),\n            percent: Number(item.percent),\n            logo: item.logo,\n            name: item.name,\n            symbol: item.symbol,\n          };\n        }),\n        status: checkedStatus ? \"PUBLIC\" : \"PRIVATE\",\n      },\n      type,\n      type === \"edit\"\n        ? handleRecalculateNetWorth(\n            rebalanceTime === time || rebalanceTime === null\n              ? dayjs(time).add(1, \"day\").toDate()\n              : rebalanceTime,\n          )\n        : Number(virtualPortfolioNetworth),\n    );\n  };\n</script>\n\n<div class=\"flex items-center justify-start gap-2 mb-6\">\n  <div class=\"text-base\">{$t(\"Is it Public?\")}</div>\n  <label class=\"switch\" for=\"switch\">\n    <input\n      type=\"checkbox\"\n      id=\"switch\"\n      bind:checked={checkedStatus}\n      disabled={isLoading}\n    />\n    <span class=\"slider\" />\n  </label>\n</div>\n\n<div class=\"flex flex-col gap-6\">\n  <div class=\"flex flex-col gap-6\">\n    <div class=\"flex-1 flex flex-col gap-1\">\n      <div class=\"text-base font-medium\">\n        {$t(\"Name\")} <span class=\"text-red-500\">*</span>\n      </div>\n      <input\n        disabled={isLoading}\n        type=\"text\"\n        placeholder={$t(\"Your portfolio name\")}\n        class={`py-[6px] px-3 rounded-lg focus:outline-none focus:ring-0 text-sm font-normal bg-transparent ${\n          $isDarkMode ? \"text-white\" : \"text-[#5E656B] placeholder-[#5E656B]\"\n        }`}\n        style=\"border: 1px solid rgba(103, 113, 137, 0.3)\"\n        value={virtualPortfolioName}\n        on:change={(event) => {\n          if (isLoading) {\n            return;\n          }\n          virtualPortfolioName = event?.target.value;\n        }}\n      />\n    </div>\n\n    <div class=\"flex-1 flex flex-col gap-1\">\n      <div class=\"flex flex-col\">\n        <div class=\"text-base font-medium\">\n          {$t(\"Initial Investment\")} <span class=\"text-red-500\">*</span>\n        </div>\n        <div class=\"text-xs font-normal text-gray-500 italic\">\n          ({$t(\"Minium is $100\")})\n        </div>\n      </div>\n      <div\n        class={`py-[6px] px-3 rounded-lg text-sm font-normal flex items-center gap-1 bg-transparent ${\n          $isDarkMode ? \"text-white\" : \"text-[#5E656B] placeholder-[#5E656B]\"\n        }`}\n        style=\"border: 1px solid rgba(103, 113, 137, 0.3)\"\n      >\n        $\n        <input\n          type=\"number\"\n          min=\"100\"\n          step=\"0.01\"\n          placeholder=\"0\"\n          disabled={type === \"edit\" || isLoading}\n          class=\"text-sm p-0 border-none focus:outline-none focus:ring-0 flex-1 bg-transparent\"\n          value={virtualPortfolioNetworth}\n          on:change={(event) => {\n            handleChangeNetworth(event);\n          }}\n        />\n      </div>\n    </div>\n\n    <div\n      class={`flex-1 flex flex-col gap-1 ${\n        $isDarkMode ? \"dark-date-picker\" : \"light-date-picker\"\n      }`}\n    >\n      <div class=\"text-base font-medium\">\n        {#if type === \"edit\"}\n          {$t(\"Rebalance Time\")}\n        {:else}\n          {$t(\"Begin Time\")}\n        {/if}\n        <span class=\"text-red-500\">*</span>\n      </div>\n      {#if type === \"edit\"}\n        <DateInput\n          format=\"yyyy-MM-dd\"\n          value={dayjs(time).add(1, \"day\").toDate()}\n          min={dayjs(time).add(1, \"day\").toDate()}\n          max={new Date()}\n          on:select={handleSelectTimeRebalance}\n          disabled={isLoading}\n        />\n      {/if}\n      {#if type === \"add\"}\n        <DateInput\n          format=\"yyyy-MM-dd\"\n          bind:value={time}\n          max={new Date()}\n          disabled={isLoading}\n        />\n      {/if}\n    </div>\n  </div>\n\n  <div class=\"flex xl:flex-row flex-col justify-between gap-6\">\n    <div\n      class={`flex-1 w-full flex flex-col gap-4 rounded-lg p-4 relative ${\n        $isDarkMode ? \"bg-[#0f0f0f]\" : \"bg-[#fff]\"\n      }`}\n      style=\"border: 1px solid rgba(103, 113, 137, 0.3)\"\n    >\n      <div class=\"flex md:flex-row flex-col justify-between md:items-end gap-4\">\n        <div class=\"flex flex-col gap-1\">\n          <div class=\"text-xl font-medium\">1. {$t(\"Choose coins\")}</div>\n          <div class=\"text-base font-normal text-gray-500\">\n            {$t(\"Choose one or more to start\")}\n          </div>\n        </div>\n        <input\n          disabled={isLoading}\n          value={searchValue}\n          on:keyup={({ target: { value } }) => {\n            if (!isLoading) {\n              debounceSearch(value);\n            }\n          }}\n          placeholder={$t(\"Find by token name\")}\n          type=\"text\"\n          class={`py-1 px-[6px] rounded-lg focus:outline-none focus:ring-0 text-sm font-normal ${\n            searchValue && !$isDarkMode ? \"bg-[#F0F2F7]\" : \"bg-transparent\"\n          } ${\n            $isDarkMode ? \"text-white\" : \"text-[#5E656B] placeholder-[#5E656B]\"\n          }`}\n          style=\"border: 1px solid rgba(103, 113, 137, 0.3)\"\n        />\n      </div>\n\n      <div\n        class=\"border border_0000000d rounded-[10px] overflow-y-auto h-[550px]\"\n      >\n        <table\n          class={`table-auto w-full ${\n            $queryListSearchToken.isFetching ||\n            (searchDataResult && searchDataResult.length === 0)\n              ? \"h-full\"\n              : \"\"\n          }`}\n        >\n          {#if $queryListSearchToken.isFetching}\n            <tbody>\n              <tr>\n                <td colspan={2}>\n                  <div\n                    class=\"flex justify-center items-center py-3 px-3 h-full\"\n                  >\n                    {#if isNimbusVersion}\n                      <LoadingPremium />\n                    {:else}\n                      <Loading />\n                    {/if}\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          {:else}\n            <tbody>\n              {#if searchDataResult && searchDataResult.length === 0}\n                <tr>\n                  <td colspan={2}>\n                    <div\n                      class=\"flex justify-center items-center py-3 px-3 text-base text-gray-400\"\n                    >\n                      {#if searchValue && searchValue.length !== 0}\n                        No result\n                      {:else}\n                        Empty\n                      {/if}\n                    </div>\n                  </td>\n                </tr>\n              {:else}\n                {#each searchDataResult as data}\n                  <tr\n                    class=\"group transition-all cursor-pointer\"\n                    on:click={() => {\n                      handleSelectToken(data);\n                    }}\n                  >\n                    <td\n                      class={`py-3 pl-3 ${\n                        $isDarkMode\n                          ? \"group-hover:bg-[#000]\"\n                          : \"group-hover:bg-gray-100\"\n                      }`}\n                    >\n                      <div class=\"text-left flex items-center gap-3\">\n                        <img\n                          src={data?.logo}\n                          alt=\"\"\n                          width=\"30\"\n                          height=\"30\"\n                          class=\"rounded-full\"\n                        />\n                        <div class=\"flex flex-col gap-1\">\n                          <div class=\"text-sm font-medium relative\">\n                            {#if data?.name === undefined}\n                              N/A\n                            {:else}\n                              {data?.name}\n                            {/if}\n                          </div>\n                          <div\n                            class=\"text_00000080 text-xs font-medium relative\"\n                          >\n                            {#if data?.symbol === undefined}\n                              N/A\n                            {:else}\n                              {data?.symbol}\n                            {/if}\n                          </div>\n                        </div>\n                        <div class=\"flex flex-wrap gap-2\">\n                          {#if data?.suggest && data.suggest.length}\n                            {#each data?.suggest as item}\n                              <a\n                                href={item.url}\n                                target=\"_blank\"\n                                class=\"flex items-center justyfy-center px-2 py-1 text_27326F text-[10px] font-medium bg-[#1e96fc33] rounded-[1000px]\"\n                              >\n                                {item.tile}\n                              </a>\n                            {/each}\n                          {/if}\n                        </div>\n                      </div>\n                    </td>\n                    <td\n                      class={`py-3 w-10 ${isLoading ? \"opacity-40\" : \"opacity-100\"} ${\n                        $isDarkMode\n                          ? \"group-hover:bg-[#000]\"\n                          : \"group-hover:bg-gray-100\"\n                      }`}\n                    >\n                      <div class=\"flex justify-center\">\n                        <div class=\"text-3xl text_00000080\">&rsaquo;</div>\n                      </div>\n                    </td>\n                  </tr>\n                {/each}\n              {/if}\n            </tbody>\n          {/if}\n        </table>\n      </div>\n    </div>\n\n    <div\n      class={`flex-1 w-full flex flex-col gap-4 rounded-lg p-4 relative ${\n        $isDarkMode ? \"bg-[#0f0f0f]\" : \"bg-[#fff]\"\n      }`}\n      style=\"border: 1px solid rgba(103, 113, 137, 0.3)\"\n    >\n      <div\n        class=\"flex md:flex-row flex-col justify-between md:items-end items-start gap-4\"\n      >\n        <div class=\"flex flex-col gap-1\">\n          <div class=\"text-xl font-medium\">2. {$t(\"Coin Allocation\")}</div>\n          <div class=\"text-base font-normal text-gray-500\">\n            {$t(\"Result\")}:\n            <span\n              class={`${remaining === 100 ? \"text-gray-500\" : \"text-red-500\"}`}\n              >{remaining === 0\n                ? 0\n                : remaining === 100\n                  ? 100\n                  : numeral(remaining).format(\"0,0.00\")}%</span\n            >/100%\n          </div>\n        </div>\n        {#if selectedTokenList && selectedTokenList.length !== 0}\n          <div class=\"flex items-center justify-end gap-4\">\n            <div\n              class=\"md:order-1 order-2 text-sm text-red-500 cursor-pointer font-medium hover:underline transition-all\"\n              on:click={() => {\n                handleClearAllTokenAllocation();\n              }}\n            >\n              {$t(\"Clear All\")}\n            </div>\n            <div class=\"md:order-2 order-1 w-max\">\n              <Button\n                variant=\"tertiary\"\n                on:click={() => {\n                  handleAutoAllocate();\n                }}\n              >\n                {$t(\"Auto Allocate\")}\n              </Button>\n            </div>\n          </div>\n        {/if}\n      </div>\n\n      <div\n        class=\"border border_0000000d rounded-[10px] overflow-y-auto h-[550px]\"\n      >\n        {#each selectedTokenList || [] as data}\n          <div id={data.id} class=\"grid grid-cols-2 gap-2 my-2 mx-2\">\n            <div\n              class=\"py-2 pl-2 col-span-1 border border_0000000d rounded-[10px]\"\n            >\n              <div class=\"text-left flex items-center gap-3\">\n                <img\n                  src={data?.logo}\n                  alt=\"\"\n                  width=\"30\"\n                  height=\"30\"\n                  class=\"rounded-full\"\n                />\n                <div class=\"flex flex-col gap-1\">\n                  <div class=\"text-sm font-medium relative\">\n                    {#if data.name === undefined}\n                      N/A\n                    {:else}\n                      {data.name}\n                    {/if}\n                  </div>\n                  <div class=\"text_00000080 text-xs font-medium relative\">\n                    {#if data.symbol === undefined}\n                      N/A\n                    {:else}\n                      {data.symbol}\n                    {/if}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-span-1 flex items-center gap-6\">\n              <div\n                class={`flex-1 border border_0000000d rounded-[10px] h-full flex justify-between items-center px-2 ${\n                  data?.locked || isLoading\n                    ? \"bg-[#f3f4f64d]\"\n                    : \"bg-transparent\"\n                }`}\n              >\n                <div\n                  class=\"flex-1 flex justify-center items-center text-3xl text-gray-500 mb-1\"\n                >\n                  <div\n                    class={`cursor-pointer ${data?.locked || isLoading ? \"opacity-40\" : \"opacity-100\"}`}\n                    on:click={() => {\n                      handleDecreaseTokenAllocation(data);\n                    }}\n                  >\n                    -\n                  </div>\n                </div>\n                <input\n                  type=\"number\"\n                  min=\"0\"\n                  max=\"100\"\n                  step=\"0.01\"\n                  value={data.percent}\n                  disabled={data?.locked || isLoading}\n                  on:change={(event) => {\n                    handleChangeTokenAllocation(event, data);\n                  }}\n                  class={`w-max border-none focus:outline-none focus:ring-0 text-xl font-normal text-center bg-transparent ${\n                    $isDarkMode\n                      ? \"text-white\"\n                      : \"text-[#5E656B] placeholder-[#5E656B]\"\n                  }`}\n                />\n                <div\n                  class=\"flex-1 flex justify-center items-center text-3xl text-gray-500\"\n                >\n                  <div\n                    class={`cursor-pointer ${data?.locked || isLoading ? \"opacity-40\" : \"opacity-100\"}`}\n                    on:click={() => {\n                      handleIncreaseTokenAllocation(data);\n                    }}\n                  >\n                    +\n                  </div>\n                </div>\n              </div>\n\n              <div\n                class=\"cursor-pointer\"\n                on:click={() => {\n                  handleLockTokenAllocation(data);\n                }}\n              >\n                {#if data.locked}\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <circle\n                      cx=\"12\"\n                      cy=\"16\"\n                      r=\"2\"\n                      stroke=\"#6b7280\"\n                      stroke-width=\"1.5\"\n                    />\n                    <path\n                      d=\"M6 10V8C6 7.65929 6.0284 7.32521 6.08296 7M18 10V8C18 4.68629 15.3137 2 12 2C10.208 2 8.59942 2.78563 7.5 4.03126\"\n                      stroke=\"#6b7280\"\n                      stroke-width=\"1.5\"\n                      stroke-linecap=\"round\"\n                    />\n                    <path\n                      d=\"M11 22H8C5.17157 22 3.75736 22 2.87868 21.1213C2 20.2426 2 18.8284 2 16C2 13.1716 2 11.7574 2.87868 10.8787C3.75736 10 5.17157 10 8 10H16C18.8284 10 20.2426 10 21.1213 10.8787C22 11.7574 22 13.1716 22 16C22 18.8284 22 20.2426 21.1213 21.1213C20.2426 22 18.8284 22 16 22H15\"\n                      stroke=\"#6b7280\"\n                      stroke-width=\"1.5\"\n                      stroke-linecap=\"round\"\n                    />\n                  </svg>\n                {:else}\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <circle\n                      cx=\"12\"\n                      cy=\"16\"\n                      r=\"2\"\n                      stroke=\"#1e96fc\"\n                      stroke-width=\"1.5\"\n                    />\n                    <path\n                      d=\"M11 22H8C5.17157 22 3.75736 22 2.87868 21.1213C2 20.2426 2 18.8284 2 16C2 13.1716 2 11.7574 2.87868 10.8787C3.75736 10 5.17157 10 8 10H16C18.8284 10 20.2426 10 21.1213 10.8787C22 11.7574 22 13.1716 22 16C22 18.8284 22 20.2426 21.1213 21.1213C20.2426 22 18.8284 22 16 22H15\"\n                      stroke=\"#1e96fc\"\n                      stroke-width=\"1.5\"\n                      stroke-linecap=\"round\"\n                    />\n                    <path\n                      d=\"M6 10V8C6 7.65929 6.0284 7.32521 6.08296 7M17.811 6.5C17.1449 3.91216 14.7958 2 12 2C10.223 2 8.62643 2.7725 7.52779 4\"\n                      stroke=\"#1e96fc\"\n                      stroke-width=\"1.5\"\n                      stroke-linecap=\"round\"\n                    />\n                  </svg>\n                {/if}\n              </div>\n\n              <div\n                class=\"text-3xl text-gray-500 cursor-pointer text-center\"\n                on:click={() => {\n                  handleRemoveTokenAllocation(data);\n                }}\n              >\n                &times;\n              </div>\n            </div>\n          </div>\n        {/each}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"flex items-center justify-end gap-4\">\n    <div class=\"md:w-[120px] w-full\">\n      <Button\n        disabled={isLoading}\n        variant=\"secondary\"\n        on:click={() => {\n          handleCancelRebalance();\n        }}\n      >\n        {$t(\"Cancel\")}\n      </Button>\n    </div>\n    <div class=\"md:w-[120px] w-full\">\n      <Button\n        {isLoading}\n        disabled={isLoading}\n        on:click={() => {\n          handleSubmitRebalance();\n        }}\n      >\n        {type === \"edit\" ? $t(\"Rebalance\") : $t(\"Create\")}\n      </Button>\n    </div>\n  </div>\n</div>\n\n<style>\n  :global(body) .bg_fafafbff {\n    background: #fafafbff;\n  }\n  :global(body.dark) .bg_fafafbff {\n    background: #212121;\n  }\n\n  :global input.svelte-1wkmxmo {\n    font-size: 14px !important;\n    padding: 6px 12px !important;\n    border-radius: 8px !important;\n  }\n\n  .light-date-picker {\n    --date-input-width: 100%;\n    --date-picker-background: white;\n    --date-picker-foreground: #5e656b;\n    --date-picker-selected-color: black;\n    --date-picker-highlight-border: transparent;\n  }\n\n  .dark-date-picker {\n    --date-input-width: 100%;\n    --date-picker-background: #0f0f0f;\n    --date-picker-foreground: #fff;\n    --date-picker-selected-color: black;\n    --date-picker-highlight-border: transparent;\n  }\n\n  input.svelte-1wkmxmo {\n    border-radius: 8px !important;\n  }\n\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 40px;\n    height: 20px;\n  }\n\n  .switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  .slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #ccc;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 34px;\n  }\n  .slider:before {\n    position: absolute;\n    content: \"\";\n    height: 16px;\n    width: 16px;\n    left: 4px;\n    bottom: 2px;\n    background-color: white;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n  input:checked + .slider {\n    background-color: #2196f3;\n  }\n  input:checked + .slider {\n    box-shadow: 0 0 1px #2196f3;\n  }\n  input:checked + .slider:before {\n    -webkit-transform: translateX(16px);\n    -ms-transform: translateX(16px);\n    transform: translateX(16px);\n  }\n\n  @media screen and (max-width: 1280px) {\n    .switch {\n      width: 60px;\n      height: 30px;\n    }\n\n    .slider {\n      border-radius: 44px;\n    }\n\n    .slider:before {\n      height: 26px;\n      width: 26px;\n      left: 4px;\n      bottom: 2px;\n    }\n\n    input:checked + .slider:before {\n      -webkit-transform: translateX(26px);\n      -ms-transform: translateX(26px);\n      transform: translateX(26px);\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { isNimbusVersion } from \"~/utils/constants\";\n  import { isDarkMode } from \"~/store\";\n  import { formatPercent, formatValue, formatCurrency } from \"~/utils/index\";\n  import { t } from \"~/lib/i18n\";\n\n  import Loading from \"~/components/Loading.svelte\";\n  import EChart from \"~/components/EChart.svelte\";\n  import LoadingPremium from \"~/components/LoadingPremium.svelte\";\n\n  import defaultToken from \"~/assets/defaultToken.png\";\n\n  export let isLoading;\n  export let listTokenHolding;\n\n  let optionPie = {\n    title: {\n      text: \"\",\n    },\n    tooltip: {\n      trigger: \"item\",\n      extraCssText: \"z-index: 9997\",\n      formatter: function (params) {\n        return `\n            <div style=\"display: flex; flex-direction: column; gap: 12px; min-width: 220px;\">\n              <div style=\"display: flex; align-items: centers; gap: 4px\">\n                <img src=${params?.data?.logo || defaultToken}\n                onerror=\"this.onerror=null;this.src='${defaultToken}';\"\n                alt=\"\" width=20 height=20 style=\"border-radius: 100%\" />\n                <div style=\"font-weight: 500; font-size: 16px; line-height: 19px; color: ${\n                  $isDarkMode ? \"white\" : \"black\"\n                }\">\n                  ${params?.name} ${\n                    params?.data?.symbol ? `(${params?.data?.symbol})` : \"\"\n                  }\n                </div>\n              </div>\n\n              ${\n                params?.data?.name_balance?.length !== 0\n                  ? `\n                <div style=\"display: grid; grid-template-columns: repeat(2, minmax(0, 1fr)); color: ${\n                  $isDarkMode ? \"white\" : \"black\"\n                }\">\n                  <div style=\"grid-template-columns: repeat(1, minmax(0, 1fr)); font-weight: 500; font-size: 14px; line-height: 17px;\">\n                    Balance\n                  </div>\n                  <div style=\"grid-template-columns: repeat(1, minmax(0, 1fr)); font-weight: 500; font-size: 14px; line-height: 17px;\">\n                    ${formatCurrency(params?.data?.value_balance)}\n                  </div>\n                </div>\n              `\n                  : \"\"\n              }\n\n              <div style=\"display: grid; grid-template-columns: repeat(2, minmax(0, 1fr)); color: ${\n                $isDarkMode ? \"white\" : \"black\"\n              }\">\n                <div style=\"grid-template-columns: repeat(1, minmax(0, 1fr)); font-weight: 500; font-size: 14px; line-height: 17px;\">\n                  Value\n                </div>\n                <div style=\"grid-template-columns: repeat(1, minmax(0, 1fr)); font-weight: 500; font-size: 14px; line-height: 17px;\">\n                  ${formatValue(params?.data?.value_value)}\n                </div>\n              </div>\n              \n              <div style=\"display: grid; grid-template-columns: repeat(2, minmax(0, 1fr)); color: ${\n                $isDarkMode ? \"white\" : \"black\"\n              }\">\n                <div style=\"grid-template-columns: repeat(1, minmax(0, 1fr)); font-weight: 500; font-size: 14px; line-height: 17px;\">\n                  Ratio\n                </div>\n                <div style=\"grid-template-columns: repeat(1, minmax(0, 1fr)); font-weight: 500; font-size: 14px; line-height: 17px;\">\n                  ${formatPercent(params?.value)}%\n                </div>\n              </div>\n            </div>`;\n      },\n    },\n    legend: {\n      type: \"scroll\",\n      top: \"0%\",\n      left: \"center\",\n    },\n    series: [\n      {\n        type: \"pie\",\n        radius: [\"40%\", \"60%\"],\n        left: 0,\n        avoidLabelOverlap: false,\n        label: {\n          show: false,\n          position: \"center\",\n        },\n        emphasis: {\n          label: {\n            show: false,\n            fontSize: 40,\n            fontWeight: \"bold\",\n          },\n        },\n        labelLine: {\n          show: false,\n        },\n        data: [],\n      },\n    ],\n  };\n\n  const formatDataPie = (data) => {\n    return data?.map((item) => {\n      if (isNaN(item.value)) {\n        return {\n          ...item,\n          value: 0,\n        };\n      } else {\n        return item;\n      }\n    });\n  };\n\n  const formatTokenBreakdown = (data) => {\n    const formatData = data?.filter((item) => Number(item.value) > 0);\n\n    const sumToken = (formatData || []).reduce(\n      (prev, item) => prev + Number(item?.value),\n      0,\n    );\n\n    const sortBreakdownToken = formatData?.sort((a, b) => {\n      if (a.value < b.value) {\n        return 1;\n      }\n      if (a.value > b.value) {\n        return -1;\n      }\n      return 0;\n    });\n\n    const topFiveBreakdownToken = sortBreakdownToken\n      ?.slice(0, 5)\n      .map((item) => {\n        return {\n          ...item,\n          id: item.coinId || \"N/A\",\n          symbol: item.symbol || \"N/A\",\n          name: item.name || \"N/A\",\n        };\n      });\n\n    const orderBreakdownToken = sortBreakdownToken?.slice(\n      5,\n      sortBreakdownToken?.length,\n    );\n\n    const sumOrderBreakdownToken = (orderBreakdownToken || []).reduce(\n      (prev, item) => prev + Number(item.value),\n      0,\n    );\n\n    const dataPieChartOrderBreakdownToken = [\n      {\n        logo: defaultToken,\n        name: \"Other tokens\",\n        symbol: \"\",\n        name_ratio: \"Ratio\",\n        value: (sumOrderBreakdownToken / sumToken) * 100,\n        name_value: \"Value\",\n        value_value: sumOrderBreakdownToken,\n        name_balance: \"\",\n        value_balance: 0,\n      },\n    ];\n\n    const formatDataPieChartTopFiveToken = topFiveBreakdownToken?.map(\n      (item) => {\n        return {\n          logo: item.logo || defaultToken,\n          name: item.name || item.symbol,\n          symbol: item.symbol,\n          name_ratio: \"Ratio\",\n          value: Number(item.percent),\n          name_value: \"Value\",\n          value_value: Number(item.value),\n          name_balance: \"Balance\",\n          value_balance: Number(item.amount),\n        };\n      },\n    );\n\n    const dataPieChartToken =\n      sumOrderBreakdownToken > 0\n        ? formatDataPieChartTopFiveToken?.concat(\n            dataPieChartOrderBreakdownToken,\n          )\n        : formatDataPieChartTopFiveToken;\n\n    optionPie = {\n      ...optionPie,\n      legend: {\n        ...optionPie.legend,\n        formatter: function (name) {\n          const selected = dataPieChartToken.find(\n            (item) => item.name.toLowerCase() === name.toLowerCase(),\n          );\n          return selected?.symbol || name;\n        },\n      },\n      series: [\n        {\n          ...optionPie.series[0],\n          data: formatDataPie(dataPieChartToken),\n        },\n      ],\n    };\n  };\n\n  $: {\n    if (listTokenHolding?.length !== 0) {\n      formatTokenBreakdown(listTokenHolding);\n    }\n  }\n\n  $: theme = $isDarkMode ? \"dark\" : \"white\";\n</script>\n\n<div\n  class={`rounded-[20px] xl:p-6 py-4 lg:px-3 xl:border border_0000001a ${\n    $isDarkMode ? \"lg:bg-[#222222]\" : \"bg-[#fff]\"\n  }`}\n>\n  <div class=\"font-medium text-2xl mb-6\">{$t(\"Allocation\")}</div>\n\n  {#if isLoading}\n    <div class=\"flex items-center justify-center h-[465px]\">\n      {#if isNimbusVersion}\n        <LoadingPremium />\n      {:else}\n        <Loading />\n      {/if}\n    </div>\n  {:else}\n    <div class=\"h-full\">\n      {#if listTokenHolding?.length === 0}\n        <div\n          class=\"flex justify-center items-center h-[465px] text-base text-gray-400\"\n        >\n          {$t(\"Empty\")}\n        </div>\n      {:else}\n        <div class=\"xl:block hidden\">\n          <EChart\n            id=\"pie-chart-token-allocation-virtual-dekstop\"\n            {theme}\n            notMerge={true}\n            option={optionPie}\n            height={465}\n          />\n        </div>\n        <div class=\"xl:hidden block\">\n          <EChart\n            id=\"pie-chart-token-allocation-virtual-mobile\"\n            {theme}\n            notMerge={true}\n            option={optionPie}\n            height={265}\n          />\n        </div>\n      {/if}\n    </div>\n  {/if}\n</div>\n\n<style windi:preflights:global windi:safelist:global></style>\n","<script lang=\"ts\">\n  import { isNimbusVersion } from \"~/utils/constants\";\n  import { autoFontSize, formatPercent } from \"~/utils\";\n  import { isDarkMode } from \"~/store\";\n  import { t } from \"~/lib/i18n\";\n  import dayjs from \"dayjs\";\n\n  import EChart from \"~/components/EChart.svelte\";\n  import LoadingPremium from \"~/components/LoadingPremium.svelte\";\n  import TooltipNumber from \"~/components/TooltipNumber.svelte\";\n  import Loading from \"~/components/Loading.svelte\";\n\n  import TrendDown from \"~/assets/trend-down.svg\";\n  import TrendUp from \"~/assets/trend-up.svg\";\n\n  export let selectedVirtual;\n  export let isLoading;\n  export let dataVirtualPortfolioPerformance;\n\n  let optionLine: any = {\n    title: {\n      text: \"\",\n    },\n    tooltip: {\n      trigger: \"axis\",\n      extraCssText: \"z-index: 9997\",\n      formatter: function (params: any) {\n        return `\n            <div style=\"display: flex; flex-direction: column; gap: 12px; min-width: 220px;\">\n              <div style=\"font-weight: 500; font-size: 16px; line-height: 19px; color: ${\n                $isDarkMode ? \"white\" : \"black\"\n              }\">\n                ${params[0].axisValue}\n              </div>\n              ${params\n                .map((item: any) => {\n                  return `\n                <div style=\"display: grid; grid-template-columns: repeat(2, minmax(0, 1fr));\">\n                  <div style=\"grid-template-columns: repeat(1, minmax(0, 1fr)); display: flex; align-items: centers; gap: 4px; font-weight: 500; color: ${\n                    $isDarkMode ? \"white\" : \"black\"\n                  }\">\n                    <span>${item?.marker}</span>\n                    ${item?.seriesName}\n                  </div>\n\n                  <div style=\"grid-template-columns: repeat(1, minmax(0, 1fr)); text-align: right;\">\n                    <div style=\"display:flex; justify-content: flex-end; align-items: center; gap: 4px; flex: 1; font-weight: 500; font-size: 14px; line-height: 17px; color: ${\n                      item.value >= 0 ? \"#05a878\" : \"#f25f5d\"\n                    };\">\n                      ${formatPercent(Math.abs(item.value))}%\n                      <img\n                        src=${item.value >= 0 ? TrendUp : TrendDown} \n                        alt=\"\"\n                        style=\"margin-bottom: 4px;\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                `;\n                })\n                .join(\"\")}\n            </div>`;\n      },\n    },\n    legend: {\n      lineStyle: {\n        type: \"solid\",\n      },\n      data: [],\n    },\n    grid: {\n      left: \"3%\",\n      right: \"4%\",\n      bottom: \"3%\",\n      containLabel: true,\n    },\n    xAxis: {\n      type: \"category\",\n      boundaryGap: false,\n      data: [],\n      axisLabel: {\n        fontSize: autoFontSize(),\n      },\n    },\n    yAxis: {\n      type: \"value\",\n      axisLabel: {\n        fontSize: autoFontSize(),\n      },\n    },\n    series: [],\n  };\n\n  let portfolioPercentChange = 0;\n  let tooltipDateValue: any;\n\n  $: {\n    if (tooltipDateValue) {\n      const formatDataPortfolio =\n        dataVirtualPortfolioPerformance?.portfolio?.map((item: any) => {\n          const time = dayjs(item.time).unix();\n          return {\n            value: item.performance,\n            time: dayjs(time * 1000).format(\"YYYY-MM-DD\"),\n          };\n        });\n\n      const selectedDataPerformance = formatDataPortfolio.find(\n        (item: any) => item.time === tooltipDateValue\n      );\n\n      if (selectedDataPerformance) {\n        portfolioPercentChange = selectedDataPerformance?.value;\n      }\n    }\n  }\n\n  $: {\n    if (\n      dataVirtualPortfolioPerformance &&\n      Object.keys(dataVirtualPortfolioPerformance).length === 0\n    ) {\n      optionLine = {\n        title: {\n          text: \"\",\n        },\n        tooltip: {\n          trigger: \"axis\",\n          extraCssText: \"z-index: 9997\",\n          formatter: function (params) {\n            return `\n            <div style=\"display: flex; flex-direction: column; gap: 12px; min-width: 220px;\">\n              <div style=\"font-weight: 500; font-size: 16px; line-height: 19px; color: ${\n                $isDarkMode ? \"white\" : \"black\"\n              }\">\n                ${params[0].axisValue}\n              </div>\n              ${params\n                .map((item) => {\n                  return `\n                <div style=\"display: grid; grid-template-columns: repeat(2, minmax(0, 1fr));\">\n                  <div style=\"grid-template-columns: repeat(1, minmax(0, 1fr)); display: flex; align-items: centers; gap: 4px; font-weight: 500; color: ${\n                    $isDarkMode ? \"white\" : \"black\"\n                  }\">\n                    <span>${item?.marker}</span>\n                    ${item?.seriesName}\n                  </div>\n\n                  <div style=\"grid-template-columns: repeat(1, minmax(0, 1fr)); text-align: right;\">\n                    <div style=\"display:flex; justify-content: flex-end; align-items: center; gap: 4px; flex: 1; font-weight: 500; font-size: 14px; line-height: 17px; color: ${\n                      item.value >= 0 ? \"#05a878\" : \"#f25f5d\"\n                    };\">\n                      ${formatPercent(Math.abs(item.value))}%\n                      <img\n                        src=${item.value >= 0 ? TrendUp : TrendDown} \n                        alt=\"\"\n                        style=\"margin-bottom: 4px;\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                `;\n                })\n                .join(\"\")}\n            </div>`;\n          },\n        },\n        legend: {\n          lineStyle: {\n            type: \"solid\",\n          },\n          data: [],\n        },\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true,\n        },\n        xAxis: {\n          type: \"category\",\n          boundaryGap: false,\n          data: [],\n          axisLabel: {\n            fontSize: autoFontSize(),\n          },\n        },\n        yAxis: {\n          type: \"value\",\n          axisLabel: {\n            fontSize: autoFontSize(),\n          },\n        },\n        series: [],\n      };\n    } else {\n      portfolioPercentChange =\n        dataVirtualPortfolioPerformance?.portfolio[\n          dataVirtualPortfolioPerformance?.portfolio?.length - 1\n        ]?.performance;\n\n      const formatXAxisPerformance =\n        dataVirtualPortfolioPerformance?.portfolio?.map((item: any) => {\n          const time = dayjs(item.time).unix();\n          return dayjs(time * 1000).format(\"YYYY-MM-DD\");\n        });\n\n      const formatDataPortfolio =\n        dataVirtualPortfolioPerformance?.portfolio?.map((item: any) => {\n          return {\n            value: item.performance,\n            itemStyle: {\n              color: \"#00b580\",\n            },\n          };\n        });\n\n      const formatDataETH = dataVirtualPortfolioPerformance?.eth?.map(\n        (item: any) => {\n          return {\n            value: item.performance,\n            itemStyle: {\n              color: \"#547fef\",\n            },\n          };\n        }\n      );\n\n      const formatDataBTC = dataVirtualPortfolioPerformance?.btc?.map(\n        (item: any) => {\n          return {\n            value: item.performance,\n            itemStyle: {\n              color: \"#f7931a\",\n            },\n          };\n        }\n      );\n\n      optionLine = {\n        ...optionLine,\n        tooltip: {\n          trigger: \"axis\",\n          extraCssText: \"z-index: 9997\",\n          formatter: function (params: any) {\n            tooltipDateValue = params[0].axisValue;\n            return `\n            <div style=\"display: flex; flex-direction: column; gap: 12px; min-width: 260px;\">\n              <div style=\"font-weight: 500; font-size: 16px; line-height: 19px; color: ${\n                $isDarkMode ? \"white\" : \"black\"\n              }\">\n                ${params[0].axisValue}\n              </div>\n              ${params\n                .map((item: any) => {\n                  return `\n                <div style=\"display: grid; grid-template-columns: repeat(2, minmax(0, 1fr));\">\n                  <div style=\"grid-template-columns: repeat(1, minmax(0, 1fr)); display: flex; align-items: centers; gap: 4px; font-weight: 500;color: ${\n                    $isDarkMode ? \"white\" : \"black\"\n                  }\">\n                    <span>${item?.marker}</span>\n                    ${item?.seriesName}\n                  </div>\n                  <div style=\"grid-template-columns: repeat(1, minmax(0, 1fr)); text-align: right;\">\n                    <div style=\"display:flex; justify-content: flex-end; align-items: center; gap: 4px; flex: 1; font-weight: 500; font-size: 14px; line-height: 17px; color: ${\n                      item.value >= 0 ? \"#05a878\" : \"#f25f5d\"\n                    };\">\n                      ${formatPercent(Math.abs(item.value))}%\n                      <img\n                        src=${item.value >= 0 ? TrendUp : TrendDown}\n                        alt=\"\"\n                        style=\"margin-bottom: 4px;\"\n                      />\n                    </div>\n                  </div>\n                </div>\n                `;\n                })\n                .join(\"\")}\n            </div>`;\n          },\n        },\n        legend: {\n          ...optionLine.legend,\n          data: [\n            {\n              name: \"Your Paper Trade\",\n              itemStyle: {\n                color: \"#00b580\",\n              },\n            },\n            {\n              name: \"Bitcoin\",\n              itemStyle: {\n                color: \"#f7931a\",\n              },\n            },\n            {\n              name: \"Ethereum\",\n              itemStyle: {\n                color: \"#547fef\",\n              },\n            },\n          ],\n        },\n        xAxis: {\n          ...optionLine.xAxis,\n          data: formatXAxisPerformance,\n        },\n        yAxis: {\n          ...optionLine.yAxis,\n          axisLabel: {\n            formatter: \"{value}%\",\n            fontSize: autoFontSize(),\n          },\n        },\n        series: [\n          {\n            name: \"Your Paper Trade\",\n            type: \"line\",\n            lineStyle: {\n              type: \"solid\",\n              color: \"#00b580\",\n            },\n            showSymbol: false,\n            data: formatDataPortfolio,\n          },\n          {\n            name: \"Bitcoin\",\n            type: \"line\",\n            lineStyle: {\n              type: \"dashed\",\n              color: \"#f7931a\",\n            },\n            showSymbol: false,\n            data: formatDataBTC,\n          },\n          {\n            name: \"Ethereum\",\n            type: \"line\",\n            lineStyle: {\n              type: \"dashed\",\n              color: \"#547fef\",\n            },\n            showSymbol: false,\n            data: formatDataETH,\n          },\n        ],\n      };\n    }\n  }\n\n  $: networth =\n    selectedVirtual?.initial_networth * (portfolioPercentChange / 100) +\n    selectedVirtual?.initial_networth;\n\n  $: theme = $isDarkMode ? \"dark\" : \"white\";\n</script>\n\n<div\n  class={`rounded-[20px] xl:p-6 py-4 lg:px-3 xl:border border_0000001a ${\n    $isDarkMode ? \"lg:bg-[#222222]\" : \"bg-[#fff]\"\n  }`}\n>\n  <div class=\"font-medium text-2xl mb-6\">{$t(\"Performance\")}</div>\n\n  {#if isLoading}\n    <div class=\"flex items-center justify-center h-[465px]\">\n      {#if isNimbusVersion}\n        <LoadingPremium />\n      {:else}\n        <Loading />\n      {/if}\n    </div>\n  {:else}\n    <div class=\"h-full relative\">\n      {#if dataVirtualPortfolioPerformance && Object.keys(dataVirtualPortfolioPerformance).length === 0}\n        <div\n          class=\"flex justify-center items-center h-[465px] text-base text-gray-400\"\n        >\n          {$t(\"Empty\")}\n        </div>\n      {:else}\n        <div\n          class={`absolute xl:block hidden md:top-8 top-16 md:left-20 left-24 flex flex-col rounded-[4px] w-max px-2 py-1 z-2 ${\n            $isDarkMode ? \"bg-[#131313]\" : \"bg-white\"\n          }`}\n          style=\"box-shadow: rgba(0, 0, 0, 0.2) 1px 2px 10px;\"\n        >\n          <div class=\"text-lg font-medium flex items-center\">\n            {networth < 0 ? \"-\" : \"\"}$<TooltipNumber\n              number={Math.abs(networth)}\n              type=\"balance\"\n            />\n          </div>\n          <div\n            class={`text-sm flex gap-1 ${\n              portfolioPercentChange >= 0 ? \"text-[#00A878]\" : \"text-red-500\"\n            }`}\n          >\n            <span>\n              <TooltipNumber\n                number={Math.abs(portfolioPercentChange)}\n                type=\"percent\"\n              />%\n            </span>\n            {#if portfolioPercentChange !== 0}\n              <img\n                src={portfolioPercentChange >= 0 ? TrendUp : TrendDown}\n                alt=\"trend\"\n                class=\"mb-1\"\n              />\n            {/if}\n          </div>\n        </div>\n        <EChart\n          id=\"line-chart\"\n          {theme}\n          notMerge={true}\n          option={optionLine}\n          height={465}\n        />\n      {/if}\n    </div>\n  {/if}\n</div>\n\n<style windi:preflights:global windi:safelist:global></style>\n","<script lang=\"ts\">\n  import { isDarkMode } from \"~/store\";\n  import { shorterAddress } from \"~/utils\";\n  import { filterTokenValueType, isNimbusVersion } from \"~/utils/constants\";\n  import { t } from \"~/lib/i18n\";\n\n  import Loading from \"~/components/Loading.svelte\";\n  import Table from \"~/components/Table.svelte\";\n  import TooltipNumber from \"~/components/TooltipNumber.svelte\";\n  import Select from \"~/components/Select.svelte\";\n  import Image from \"~/components/Image.svelte\";\n  import LoadingPremium from \"~/components/LoadingPremium.svelte\";\n  import TooltipTitle from \"~/components/TooltipTitle.svelte\";\n\n  import defaultToken from \"~/assets/defaultToken.png\";\n\n  export let isLoading;\n  export let listTokenHolding;\n\n  let selectedItemIndex = -1;\n\n  let formatData: any = [];\n  let sumTokens = 0;\n\n  let isShowCMC = false;\n  let isShowCoingecko = false;\n\n  let filterTokenType = {\n    label: \"$1\",\n    value: 1,\n  };\n\n  let filteredHoldingDataToken: any = [];\n\n  $: {\n    if (listTokenHolding && listTokenHolding.length !== 0) {\n      formatData = listTokenHolding;\n      filteredHoldingDataToken = formatData.filter(\n        (item: any) => item.value > 1,\n      );\n      sumTokens = filteredHoldingDataToken.reduce(\n        (prev: any, item: any) => prev + Number(item?.value),\n        0,\n      );\n    }\n  }\n\n  $: {\n    if (filterTokenType) {\n      if (filterTokenType.value === 0) {\n        filteredHoldingDataToken = formatData;\n      } else {\n        filteredHoldingDataToken = formatData?.filter(\n          (item: any) => item?.value > filterTokenType.value,\n        );\n      }\n    }\n  }\n</script>\n\n<div\n  class={`rounded-[20px] xl:p-6 py-4 lg:px-3 xl:border border_0000001a ${\n    $isDarkMode ? \"lg:bg-[#222222]\" : \"bg-[#fff]\"\n  }`}\n>\n  <div class=\"flex flex-col gap-2\">\n    <div class=\"flex xl:flex-row flex-col gap-2 justify-between\">\n      <div class=\"flex items-end gap-3\">\n        <div class=\"text-2xl font-medium\">{$t(\"Holding\")}</div>\n      </div>\n      <div class=\"text-3xl font-medium\">\n        <TooltipNumber number={sumTokens} type=\"value\" personalValue />\n      </div>\n    </div>\n\n    <div class=\"flex flex-col gap-2\">\n      <div class=\"flex flex-col gap-4\">\n        <div class=\"flex items-center gap-3 justify-end\">\n          <div\n            class=\"flex items-center xl:justify-end justify-start w-full gap-2\"\n          >\n            <div class=\"xl:block hidden text-sm font-regular text-gray-400\">\n              {$t(\"Hide tokens less than\")}\n            </div>\n            <div class=\"xl:block hidden\">\n              <Select\n                type=\"filter\"\n                positionSelectList=\"right-0\"\n                listSelect={filterTokenValueType}\n                bind:selected={filterTokenType}\n                isDisabledSelectWallet={false}\n                indexWalletDisabled={-1}\n              />\n            </div>\n            <div class=\"xl:hidden block\">\n              <Select\n                type=\"filter\"\n                positionSelectList=\"left-0\"\n                listSelect={filterTokenValueType}\n                bind:selected={filterTokenType}\n                isDisabledSelectWallet={false}\n                indexWalletDisabled={-1}\n              />\n            </div>\n          </div>\n        </div>\n\n        <Table>\n          <span slot=\"desktop\">\n            <table class=\"table-auto w-full h-full\">\n              <thead>\n                <tr class=\"bg_f4f5f8\">\n                  <th class=\"pl-3 py-3 rounded-tl-[10px]\">\n                    <div class=\"text-left text-xs uppercase font-medium\">\n                      {$t(\"Assets\")}\n                    </div>\n                  </th>\n\n                  <th class=\"py-3\">\n                    <div class=\"text-right text-xs uppercase font-medium\">\n                      {$t(\"Price\")}\n                    </div>\n                  </th>\n\n                  <th class=\"py-3\">\n                    <div class=\"text-right text-xs uppercase font-medium\">\n                      <TooltipTitle\n                        tooltipText=\"The price difference of the current token compared to the latest time of rebalance\"\n                      >\n                        % {$t(\"Price change\")}\n                      </TooltipTitle>\n                    </div>\n                  </th>\n\n                  <th class=\"py-3\">\n                    <div class=\"text-right text-xs uppercase font-medium\">\n                      {$t(\"Amount\")}\n                    </div>\n                  </th>\n\n                  <th class=\"pr-3 py-3 rounded-tr-[10px]\">\n                    <div class=\"text-right text-xs uppercase font-medium\">\n                      {$t(\"Value\")}\n                    </div>\n                  </th>\n                </tr>\n              </thead>\n              {#if isLoading}\n                <tbody>\n                  <tr>\n                    <td colspan=\"5\">\n                      <div\n                        class=\"flex justify-center items-center h-full py-3 px-3\"\n                      >\n                        {#if isNimbusVersion}\n                          <LoadingPremium />\n                        {:else}\n                          <Loading />\n                        {/if}\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              {:else}\n                <tbody class=\"relative\">\n                  {#if filteredHoldingDataToken && filteredHoldingDataToken?.length === 0}\n                    <tr>\n                      <td colspan=\"5\">\n                        <div\n                          class=\"flex justify-center items-center h-full py-4 px-3 text-lg text-gray-400\"\n                        >\n                          {#if listTokenHolding && listTokenHolding.length === 0}\n                            {$t(\"Empty\")}\n                          {:else}\n                            All tokens less than ${filterTokenType.value}\n                          {/if}\n                        </div>\n                      </td>\n                    </tr>\n                  {:else}\n                    {#each filteredHoldingDataToken as item, index}\n                      <tr\n                        class={`group transition-all ${\n                          $isDarkMode ? \"text-gray-400\" : \"text-[#666666]\"\n                        }`}\n                      >\n                        <td\n                          class={`pl-3 py-3 ${\n                            $isDarkMode\n                              ? \"group-hover:bg-[#000]\"\n                              : \"group-hover:bg-gray-100\"\n                          }`}\n                        >\n                          <div\n                            class=\"relative flex items-center justify-start gap-3\"\n                          >\n                            <div\n                              class=\"rounded-full w-[30px] h-[30px] overflow-hidden\"\n                            >\n                              <Image\n                                logo={item.logo}\n                                defaultLogo={defaultToken}\n                              />\n                            </div>\n                            <div class=\"flex flex-col gap-1\">\n                              <div class=\"flex items-start gap-2\">\n                                <div class=\"font-medium text-sm\">\n                                  {#if !item?.name || item?.name === \"N/A\"}\n                                    <span>\n                                      {shorterAddress(item?.contractAddress)}\n                                    </span>\n                                  {:else}\n                                    <span>\n                                      {item?.name}\n                                    </span>\n                                  {/if}\n                                </div>\n                              </div>\n\n                              <div class=\"flex items-center gap-2 min-h-[20px]\">\n                                <div class=\"font-medium text_00000080 text-xs\">\n                                  {#if item.symbol === undefined}\n                                    N/A\n                                  {:else}\n                                    {item.symbol}\n                                  {/if}\n                                </div>\n\n                                {#if isShowCMC && selectedItemIndex === index}\n                                  <a\n                                    href={`https://coinmarketcap.com/currencies/${item?.cmc_slug}`}\n                                    on:click={(e) => {\n                                      if (index > 0) {\n                                        e.stopPropagation();\n                                      }\n                                    }}\n                                    target=\"_blank\"\n                                    class=\"w-[20px] h-[20px] cursor-pointer\"\n                                  >\n                                    <svg\n                                      viewBox=\"0 0 76.52 77.67\"\n                                      xmlns=\"http://www.w3.org/2000/svg\"\n                                      class=\"object-contain w-full h-full rounded-full\"\n                                    >\n                                      <path\n                                        d=\"m66.54 46.41a4.09 4.09 0 0 1 -4.17.28c-1.54-.87-2.37-2.91-2.37-5.69v-8.52c0-4.09-1.62-7-4.33-7.79-4.58-1.34-8 4.27-9.32 6.38l-8.1 13.11v-16c-.09-3.69-1.29-5.9-3.56-6.56-1.5-.44-3.75-.26-5.94 3.08l-18.11 29.07a32 32 0 0 1 -3.64-14.94c0-17.52 14-31.77 31.25-31.77s31.3 14.25 31.3 31.77v.09s0 .06 0 .09c.17 3.39-.93 6.09-3 7.4zm10-7.57v-.17c-.14-21.35-17.26-38.67-38.29-38.67s-38.25 17.42-38.25 38.83 17.16 38.84 38.25 38.84a37.81 37.81 0 0 0 26-10.36 3.56 3.56 0 0 0 .18-5 3.43 3.43 0 0 0 -4.86-.23 30.93 30.93 0 0 1 -44.57-2.08l16.3-26.2v12.09c0 5.81 2.25 7.69 4.14 8.24s4.78.17 7.81-4.75l9-14.57c.28-.47.55-.87.79-1.22v7.41c0 5.43 2.18 9.77 6 11.91a11 11 0 0 0 11.21-.45c4.2-2.73 6.49-7.67 6.25-13.62z\"\n                                        fill={`${$isDarkMode ? \"#d1d5db\" : \"#17181b\"}`}\n                                      />\n                                    </svg>\n                                  </a>\n                                {/if}\n\n                                {#if isShowCoingecko && selectedItemIndex === index}\n                                  <a\n                                    href={`https://www.coingecko.com/en/coins/${item?.cg_id}`}\n                                    on:click={(e) => {\n                                      if (index > 0) {\n                                        e.stopPropagation();\n                                      }\n                                    }}\n                                    target=\"_blank\"\n                                    class=\"w-[20px] h-[20px] cursor-pointer\"\n                                  >\n                                    <svg\n                                      version=\"1.1\"\n                                      id=\"Layer_1\"\n                                      xmlns=\"http://www.w3.org/2000/svg\"\n                                      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                                      x=\"0px\"\n                                      y=\"0px\"\n                                      class=\"object-contain w-full h-full rounded-full\"\n                                      viewBox=\"0 0 130 130\"\n                                      enable-background=\"new 0 0 130 130\"\n                                      xml:space=\"preserve\"\n                                    >\n                                      <path\n                                        fill=\"#8CC640\"\n                                        opacity=\"1.000000\"\n                                        stroke=\"none\"\n                                        d=\"\n                    M131.000000,57.000000 \n                      C131.000000,63.021152 131.000000,69.042305 130.672409,75.726242 \n                      C126.245422,96.442734 115.971336,112.377365 97.906433,122.312782 \n                      C90.821442,126.209435 82.667252,128.162033 75.000000,131.000000 \n                      C68.978851,131.000000 62.957695,131.000000 56.274689,130.671448 \n                      C26.738447,123.925354 8.627264,106.579208 1.978957,77.565338 \n                      C1.849081,76.998550 1.334888,76.519814 1.000000,76.000000 \n                      C1.000000,69.645599 1.000000,63.291203 1.327633,56.273994 \n                      C7.883286,27.381535 24.726683,9.368647 52.947453,2.288438 \n                      C54.319679,1.944165 55.650108,1.433293 57.000000,1.000000 \n                      C62.688042,1.000000 68.376083,1.000000 74.741592,1.327464 \n                      C96.446571,5.317031 112.630692,16.197533 122.822418,34.953358 \n                      C126.526794,41.770519 128.329590,49.620987 131.000000,57.000000 \n                    M67.669617,34.593678 \n                      C72.853539,36.328110 78.037468,38.062542 83.988960,39.800339 \n                      C91.320595,42.477032 98.943100,44.560196 105.912613,47.975792 \n                      C115.309883,52.581173 116.758698,60.664780 110.240662,68.973640 \n                      C107.172386,72.884933 103.662323,76.491829 100.067467,79.939499 \n                      C91.340828,88.308846 83.506844,97.323128 78.944870,108.687225 \n                      C76.923164,113.723396 75.289993,118.956802 76.719704,124.519165 \n                      C99.219704,123.777618 121.628136,100.428284 125.708771,73.910149 \n                      C129.903824,46.648495 112.813217,18.713875 86.159439,9.266678 \n                      C58.672554,-0.475806 28.585316,10.712248 13.686728,36.168118 \n                      C0.647401,58.447243 5.632729,87.567360 16.799000,99.079071 \n                      C21.500576,87.592857 23.501854,75.702583 23.929556,63.478218 \n                      C24.379354,50.622173 30.065470,41.486504 42.244755,36.285854 \n                      C50.463642,32.776325 58.658878,32.550331 67.669617,34.593678 \n                    M46.378696,47.004932 \n                      C46.153244,48.472221 45.722897,49.941711 45.738663,51.406406 \n                      C45.799110,57.022385 52.580402,64.181587 57.331547,63.782600 \n                      C64.207664,63.205166 69.441216,57.424793 69.158218,50.720249 \n                      C68.941345,45.582127 65.791763,41.742584 60.648354,40.346165 \n                      C54.984890,38.808552 50.460312,40.761738 46.378696,47.004932 \n                    M70.502975,77.108353 \n                      C70.182304,77.152718 69.855530,77.173737 69.544479,77.254951 \n                      C69.444435,77.281075 69.385818,77.465889 69.308258,77.578117 \n                      C70.492355,78.370712 71.577995,79.583702 72.876495,79.887817 \n                      C81.442947,81.894165 89.345863,79.361977 96.649796,76.835396 \n                      C88.453735,76.963951 79.822350,77.099335 70.502975,77.108353 \n                    z\"\n                                      />\n                                      <path\n                                        fill=\"#FEFEFD\"\n                                        opacity=\"1.000000\"\n                                        stroke=\"none\"\n                                        d=\"\n                    M131.000000,56.531342 \n                      C128.329590,49.620987 126.526794,41.770519 122.822418,34.953358 \n                      C112.630692,16.197533 96.446571,5.317031 75.209534,1.327464 \n                      C93.593452,1.000000 112.186913,1.000000 131.000000,1.000000 \n                      C131.000000,19.353643 131.000000,37.708164 131.000000,56.531342 \n                    z\"\n                                      />\n                                      <path\n                                        fill=\"#FEFEFD\"\n                                        opacity=\"1.000000\"\n                                        stroke=\"none\"\n                                        d=\"\n                    M56.531342,1.000000 \n                      C55.650108,1.433293 54.319679,1.944165 52.947453,2.288438 \n                      C24.726683,9.368647 7.883286,27.381535 1.327633,55.805592 \n                      C1.000000,37.739223 1.000000,19.478447 1.000000,1.000000 \n                      C19.353655,1.000000 37.708168,1.000000 56.531342,1.000000 \n                    z\"\n                                      />\n                                      <path\n                                        fill=\"#FEFEFD\"\n                                        opacity=\"1.000000\"\n                                        stroke=\"none\"\n                                        d=\"\n                    M75.468658,131.000000 \n                      C82.667252,128.162033 90.821442,126.209435 97.906433,122.312782 \n                      C115.971336,112.377365 126.245422,96.442734 130.672409,76.194504 \n                      C131.000000,94.260780 131.000000,112.521553 131.000000,131.000000 \n                      C112.646347,131.000000 94.291832,131.000000 75.468658,131.000000 \n                    z\"\n                                      />\n                                      <path\n                                        fill=\"#FEFEFD\"\n                                        opacity=\"1.000000\"\n                                        stroke=\"none\"\n                                        d=\"\n                    M1.000000,76.468658 \n                      C1.334888,76.519814 1.849081,76.998550 1.978957,77.565338 \n                      C8.627264,106.579208 26.738447,123.925354 55.806419,130.671448 \n                      C37.739883,131.000000 19.479769,131.000000 1.000000,131.000000 \n                      C1.000000,112.979698 1.000000,94.958511 1.000000,76.468658 \n                    z\"\n                                      />\n                                      <path\n                                        fill=\"#F8E987\"\n                                        opacity=\"1.000000\"\n                                        stroke=\"none\"\n                                        d=\"\n                    M67.161728,34.130535 \n                      C58.658878,32.550331 50.463642,32.776325 42.244755,36.285854 \n                      C30.065470,41.486504 24.379354,50.622173 23.929556,63.478218 \n                      C23.501854,75.702583 21.500576,87.592857 16.799000,99.079071 \n                      C5.632729,87.567360 0.647401,58.447243 13.686728,36.168118 \n                      C28.585316,10.712248 58.672554,-0.475806 86.159439,9.266678 \n                      C112.813217,18.713875 129.903824,46.648495 125.708771,73.910149 \n                      C121.628136,100.428284 99.219704,123.777618 76.719704,124.519165 \n                      C75.289993,118.956802 76.923164,113.723396 78.944870,108.687225 \n                      C83.506844,97.323128 91.340828,88.308846 100.067467,79.939499 \n                      C103.662323,76.491829 107.172386,72.884933 110.240662,68.973640 \n                      C116.758698,60.664780 115.309883,52.581173 105.912613,47.975792 \n                      C98.943100,44.560196 91.320595,42.477032 83.481522,39.486412 \n                      C79.000679,33.218479 75.050224,31.958828 67.161728,34.130535 \n                    M122.741554,62.952946 \n                      C121.931564,49.456993 117.821663,37.472195 107.482773,27.581638 \n                      C112.618309,40.665421 117.481361,53.054993 122.356270,65.474770 \n                      C122.471214,64.915009 122.599434,64.290619 122.741554,62.952946 \n                    M74.766914,11.836439 \n                      C80.884399,13.444856 87.001877,15.053272 93.647499,16.800549 \n                      C88.945778,11.339518 75.633400,7.880075 68.937065,10.319439 \n                      C70.920326,10.843212 72.457603,11.249201 74.766914,11.836439 \n                    z\"\n                                      />\n                                      <path\n                                        fill=\"#F5F7F2\"\n                                        opacity=\"1.000000\"\n                                        stroke=\"none\"\n                                        d=\"\n                    M46.557922,46.678169 \n                      C50.460312,40.761738 54.984890,38.808552 60.648354,40.346165 \n                      C65.791763,41.742584 68.941345,45.582127 69.158218,50.720249 \n                      C69.441216,57.424793 64.207664,63.205166 57.331547,63.782600 \n                      C52.580402,64.181587 45.799110,57.022385 45.738663,51.406406 \n                      C45.722897,49.941711 46.153244,48.472221 46.557922,46.678169 \n                    M59.129066,43.321339 \n                      C52.905285,43.682343 50.128323,45.922436 49.880501,50.781902 \n                      C49.652809,55.246601 51.976357,58.415615 56.005619,59.135765 \n                      C60.652447,59.966290 64.273163,58.019295 65.559769,53.998142 \n                      C67.025444,49.417343 65.020790,45.732014 59.129066,43.321339 \n                    z\"\n                                      />\n                                      <path\n                                        fill=\"#5E6658\"\n                                        opacity=\"1.000000\"\n                                        stroke=\"none\"\n                                        d=\"\n                    M70.846970,77.171539 \n                      C79.822350,77.099335 88.453735,76.963951 96.649796,76.835396 \n                      C89.345863,79.361977 81.442947,81.894165 72.876495,79.887817 \n                      C71.577995,79.583702 70.492355,78.370712 69.308258,77.578117 \n                      C69.385818,77.465889 69.444435,77.281075 69.544479,77.254951 \n                      C69.855530,77.173737 70.182304,77.152718 70.846970,77.171539 \n                    z\"\n                                      />\n                                      <path\n                                        fill=\"#249B48\"\n                                        opacity=\"1.000000\"\n                                        stroke=\"none\"\n                                        d=\"\n                    M67.415672,34.362106 \n                      C75.050224,31.958828 79.000679,33.218479 83.097733,39.484730 \n                      C78.037468,38.062542 72.853539,36.328110 67.415672,34.362106 \n                    z\"\n                                      />\n                                      <path\n                                        fill=\"#FDFDF4\"\n                                        opacity=\"1.000000\"\n                                        stroke=\"none\"\n                                        d=\"\n                    M122.734604,63.309586 \n                      C122.599434,64.290619 122.471214,64.915009 122.356270,65.474770 \n                      C117.481361,53.054993 112.618309,40.665421 107.482773,27.581638 \n                      C117.821663,37.472195 121.931564,49.456993 122.734604,63.309586 \n                    z\"\n                                      />\n                                      <path\n                                        fill=\"#FCFBEE\"\n                                        opacity=\"1.000000\"\n                                        stroke=\"none\"\n                                        d=\"\n                    M74.380898,11.745815 \n                      C72.457603,11.249201 70.920326,10.843212 68.937065,10.319439 \n                      C75.633400,7.880075 88.945778,11.339518 93.647499,16.800549 \n                      C87.001877,15.053272 80.884399,13.444856 74.380898,11.745815 \n                    z\"\n                                      />\n                                      <path\n                                        fill=\"#5B5C5E\"\n                                        opacity=\"1.000000\"\n                                        stroke=\"none\"\n                                        d=\"\n                    M59.497826,43.426590 \n                      C65.020790,45.732014 67.025444,49.417343 65.559769,53.998142 \n                      C64.273163,58.019295 60.652447,59.966290 56.005619,59.135765 \n                      C51.976357,58.415615 49.652809,55.246601 49.880501,50.781902 \n                      C50.128323,45.922436 52.905285,43.682343 59.497826,43.426590 \n                    z\"\n                                      />\n                                    </svg>\n                                  </a>\n                                {/if}\n\n                                {#if item?.positionType === \"ERC_404\"}\n                                  <span\n                                    class=\"inline-flex items-center gap-x-1.5 rounded-full bg-yellow-100 px-1 py-0.5 text-[10px] font-medium text-yellow-800\"\n                                  >\n                                    <svg\n                                      class=\"h-1.5 w-1.5 fill-yellow-500\"\n                                      viewBox=\"0 0 6 6\"\n                                      aria-hidden=\"true\"\n                                    >\n                                      <circle cx={3} cy={3} r={3} />\n                                    </svg>\n                                    ERC 404\n                                  </span>\n                                {/if}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n\n                        <td\n                          class={`py-3 ${\n                            $isDarkMode\n                              ? \"group-hover:bg-[#000]\"\n                              : \"group-hover:bg-gray-100\"\n                          }`}\n                        >\n                          <div\n                            class=\"text-right font-medium text-sm text_00000099 flex justify-end\"\n                          >\n                            $<TooltipNumber\n                              number={item.currentPrice}\n                              type=\"balance\"\n                            />\n                          </div>\n                        </td>\n\n                        <td\n                          class={`py-3 ${\n                            $isDarkMode\n                              ? \"group-hover:bg-[#000]\"\n                              : \"group-hover:bg-gray-100\"\n                          }`}\n                        >\n                          <div\n                            class={`flex items-center justify-end font-medium text-sm ${\n                              item?.percentPriceChange !== 0\n                                ? item?.percentPriceChange >= 0\n                                  ? \"text-[#00A878]\"\n                                  : \"text-red-500\"\n                                : \"text_00000099\"\n                            }`}\n                          >\n                            <TooltipNumber\n                              number={Math.abs(item?.percentPriceChange) * 100}\n                              type={Math.abs(item?.percentPriceChange) * 100 >\n                              999999\n                                ? \"balance\"\n                                : \"percent\"}\n                            />\n                            <span>%</span>\n                          </div>\n                        </td>\n\n                        <td\n                          class={`py-3 ${\n                            $isDarkMode\n                              ? \"group-hover:bg-[#000]\"\n                              : \"group-hover:bg-gray-100\"\n                          }`}\n                        >\n                          <div\n                            class=\"text-right flex justify-end font-medium text-sm text_00000099\"\n                          >\n                            <TooltipNumber\n                              number={item.amount}\n                              type=\"balance\"\n                              personalValue\n                            />\n                          </div>\n                        </td>\n\n                        <td\n                          class={`py-3 pr-3 ${\n                            $isDarkMode\n                              ? \"group-hover:bg-[#000]\"\n                              : \"group-hover:bg-gray-100\"\n                          }`}\n                        >\n                          <div\n                            class=\"flex justify-end font-medium text-sm text_00000099\"\n                          >\n                            <TooltipNumber\n                              number={item?.value}\n                              type=\"value\"\n                              personalValue\n                            />\n                          </div>\n                        </td>\n                      </tr>\n                    {/each}\n                  {/if}\n                </tbody>\n              {/if}\n            </table>\n          </span>\n          <span slot=\"mobile\">\n            {#if isLoading}\n              <div class=\"flex justify-center items-center h-full py-3 px-3\">\n                {#if isNimbusVersion}\n                  <LoadingPremium />\n                {:else}\n                  <Loading />\n                {/if}\n              </div>\n            {:else}\n              <div>\n                {#if filteredHoldingDataToken && filteredHoldingDataToken?.length === 0}\n                  <div\n                    class=\"flex justify-center items-center h-full py-3 px-3 text-base text-gray-400\"\n                  >\n                    {#if listTokenHolding && listTokenHolding.length === 0}\n                      Empty\n                    {:else}\n                      All tokens less than ${filterTokenType.value}\n                    {/if}\n                  </div>\n                {:else}\n                  <div class=\"relative w-full\">\n                    {#each filteredHoldingDataToken as item, index}\n                      <div\n                        class=\"flex flex-col gap-6 border-b-[1px] border_0000000d last:border-none py-4\"\n                      >\n                        <div class=\"relative flex items-center gap-3\">\n                          <div\n                            class=\"rounded-full w-[30px] h-[30px] overflow-hidden\"\n                          >\n                            <Image\n                              logo={item.logo}\n                              defaultLogo={defaultToken}\n                            />\n                          </div>\n\n                          <div class=\"flex flex-col\">\n                            <div class=\"font-medium text-base\">\n                              {#if !item?.name || item?.name === \"N/A\"}\n                                <span>\n                                  {shorterAddress(item?.contractAddress)}\n                                </span>\n                              {:else}\n                                <span>\n                                  {item?.name}\n                                </span>\n                              {/if}\n                            </div>\n\n                            <div class=\"flex items-center gap-3 min-h-[26px]\">\n                              <div\n                                class=\"relative font-medium text_00000080 text-xs\"\n                              >\n                                {#if !item?.symbol || item?.symbol === \"N/A\" || item.symbol === undefined}\n                                  N/A\n                                {:else}\n                                  {item.symbol}\n                                {/if}\n                              </div>\n\n                              {#if item?.positionType === \"ERC_404\"}\n                                <span\n                                  class=\"inline-flex items-center gap-x-1.5 rounded-full bg-yellow-100 px-1 py-0.5 text-[10px] font-medium text-yellow-800\"\n                                >\n                                  <svg\n                                    class=\"h-1.5 w-1.5 fill-yellow-500\"\n                                    viewBox=\"0 0 6 6\"\n                                    aria-hidden=\"true\"\n                                  >\n                                    <circle cx={3} cy={3} r={3} />\n                                  </svg>\n                                  ERC 404\n                                </span>\n                              {/if}\n\n                              {#if item?.cmc_slug}\n                                <a\n                                  href={`https://coinmarketcap.com/currencies/${item?.cmc_slug}`}\n                                  target=\"_blank\"\n                                  class=\"w-[24px] h-[24px] cursor-pointer\"\n                                >\n                                  <svg\n                                    viewBox=\"0 0 76.52 77.67\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    class=\"object-contain w-full h-full rounded-full\"\n                                  >\n                                    <path\n                                      d=\"m66.54 46.41a4.09 4.09 0 0 1 -4.17.28c-1.54-.87-2.37-2.91-2.37-5.69v-8.52c0-4.09-1.62-7-4.33-7.79-4.58-1.34-8 4.27-9.32 6.38l-8.1 13.11v-16c-.09-3.69-1.29-5.9-3.56-6.56-1.5-.44-3.75-.26-5.94 3.08l-18.11 29.07a32 32 0 0 1 -3.64-14.94c0-17.52 14-31.77 31.25-31.77s31.3 14.25 31.3 31.77v.09s0 .06 0 .09c.17 3.39-.93 6.09-3 7.4zm10-7.57v-.17c-.14-21.35-17.26-38.67-38.29-38.67s-38.25 17.42-38.25 38.83 17.16 38.84 38.25 38.84a37.81 37.81 0 0 0 26-10.36 3.56 3.56 0 0 0 .18-5 3.43 3.43 0 0 0 -4.86-.23 30.93 30.93 0 0 1 -44.57-2.08l16.3-26.2v12.09c0 5.81 2.25 7.69 4.14 8.24s4.78.17 7.81-4.75l9-14.57c.28-.47.55-.87.79-1.22v7.41c0 5.43 2.18 9.77 6 11.91a11 11 0 0 0 11.21-.45c4.2-2.73 6.49-7.67 6.25-13.62z\"\n                                      fill={`${$isDarkMode ? \"#d1d5db\" : \"#17181b\"}`}\n                                    />\n                                  </svg>\n                                </a>\n                              {/if}\n\n                              {#if item?.cg_id}\n                                <a\n                                  href={`https://www.coingecko.com/en/coins/${item?.cg_id}`}\n                                  target=\"_blank\"\n                                  class=\"w-[24px] h-[24px] cursor-pointer\"\n                                >\n                                  <svg\n                                    version=\"1.1\"\n                                    id=\"Layer_1\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                                    x=\"0px\"\n                                    y=\"0px\"\n                                    class=\"object-contain w-full h-full rounded-full\"\n                                    viewBox=\"0 0 130 130\"\n                                    enable-background=\"new 0 0 130 130\"\n                                    xml:space=\"preserve\"\n                                  >\n                                    <path\n                                      fill=\"#8CC640\"\n                                      opacity=\"1.000000\"\n                                      stroke=\"none\"\n                                      d=\"\n                    M131.000000,57.000000 \n                      C131.000000,63.021152 131.000000,69.042305 130.672409,75.726242 \n                      C126.245422,96.442734 115.971336,112.377365 97.906433,122.312782 \n                      C90.821442,126.209435 82.667252,128.162033 75.000000,131.000000 \n                      C68.978851,131.000000 62.957695,131.000000 56.274689,130.671448 \n                      C26.738447,123.925354 8.627264,106.579208 1.978957,77.565338 \n                      C1.849081,76.998550 1.334888,76.519814 1.000000,76.000000 \n                      C1.000000,69.645599 1.000000,63.291203 1.327633,56.273994 \n                      C7.883286,27.381535 24.726683,9.368647 52.947453,2.288438 \n                      C54.319679,1.944165 55.650108,1.433293 57.000000,1.000000 \n                      C62.688042,1.000000 68.376083,1.000000 74.741592,1.327464 \n                      C96.446571,5.317031 112.630692,16.197533 122.822418,34.953358 \n                      C126.526794,41.770519 128.329590,49.620987 131.000000,57.000000 \n                    M67.669617,34.593678 \n                      C72.853539,36.328110 78.037468,38.062542 83.988960,39.800339 \n                      C91.320595,42.477032 98.943100,44.560196 105.912613,47.975792 \n                      C115.309883,52.581173 116.758698,60.664780 110.240662,68.973640 \n                      C107.172386,72.884933 103.662323,76.491829 100.067467,79.939499 \n                      C91.340828,88.308846 83.506844,97.323128 78.944870,108.687225 \n                      C76.923164,113.723396 75.289993,118.956802 76.719704,124.519165 \n                      C99.219704,123.777618 121.628136,100.428284 125.708771,73.910149 \n                      C129.903824,46.648495 112.813217,18.713875 86.159439,9.266678 \n                      C58.672554,-0.475806 28.585316,10.712248 13.686728,36.168118 \n                      C0.647401,58.447243 5.632729,87.567360 16.799000,99.079071 \n                      C21.500576,87.592857 23.501854,75.702583 23.929556,63.478218 \n                      C24.379354,50.622173 30.065470,41.486504 42.244755,36.285854 \n                      C50.463642,32.776325 58.658878,32.550331 67.669617,34.593678 \n                    M46.378696,47.004932 \n                      C46.153244,48.472221 45.722897,49.941711 45.738663,51.406406 \n                      C45.799110,57.022385 52.580402,64.181587 57.331547,63.782600 \n                      C64.207664,63.205166 69.441216,57.424793 69.158218,50.720249 \n                      C68.941345,45.582127 65.791763,41.742584 60.648354,40.346165 \n                      C54.984890,38.808552 50.460312,40.761738 46.378696,47.004932 \n                    M70.502975,77.108353 \n                      C70.182304,77.152718 69.855530,77.173737 69.544479,77.254951 \n                      C69.444435,77.281075 69.385818,77.465889 69.308258,77.578117 \n                      C70.492355,78.370712 71.577995,79.583702 72.876495,79.887817 \n                      C81.442947,81.894165 89.345863,79.361977 96.649796,76.835396 \n                      C88.453735,76.963951 79.822350,77.099335 70.502975,77.108353 \n                    z\"\n                                    />\n                                    <path\n                                      fill=\"#FEFEFD\"\n                                      opacity=\"1.000000\"\n                                      stroke=\"none\"\n                                      d=\"\n                    M131.000000,56.531342 \n                      C128.329590,49.620987 126.526794,41.770519 122.822418,34.953358 \n                      C112.630692,16.197533 96.446571,5.317031 75.209534,1.327464 \n                      C93.593452,1.000000 112.186913,1.000000 131.000000,1.000000 \n                      C131.000000,19.353643 131.000000,37.708164 131.000000,56.531342 \n                    z\"\n                                    />\n                                    <path\n                                      fill=\"#FEFEFD\"\n                                      opacity=\"1.000000\"\n                                      stroke=\"none\"\n                                      d=\"\n                    M56.531342,1.000000 \n                      C55.650108,1.433293 54.319679,1.944165 52.947453,2.288438 \n                      C24.726683,9.368647 7.883286,27.381535 1.327633,55.805592 \n                      C1.000000,37.739223 1.000000,19.478447 1.000000,1.000000 \n                      C19.353655,1.000000 37.708168,1.000000 56.531342,1.000000 \n                    z\"\n                                    />\n                                    <path\n                                      fill=\"#FEFEFD\"\n                                      opacity=\"1.000000\"\n                                      stroke=\"none\"\n                                      d=\"\n                    M75.468658,131.000000 \n                      C82.667252,128.162033 90.821442,126.209435 97.906433,122.312782 \n                      C115.971336,112.377365 126.245422,96.442734 130.672409,76.194504 \n                      C131.000000,94.260780 131.000000,112.521553 131.000000,131.000000 \n                      C112.646347,131.000000 94.291832,131.000000 75.468658,131.000000 \n                    z\"\n                                    />\n                                    <path\n                                      fill=\"#FEFEFD\"\n                                      opacity=\"1.000000\"\n                                      stroke=\"none\"\n                                      d=\"\n                    M1.000000,76.468658 \n                      C1.334888,76.519814 1.849081,76.998550 1.978957,77.565338 \n                      C8.627264,106.579208 26.738447,123.925354 55.806419,130.671448 \n                      C37.739883,131.000000 19.479769,131.000000 1.000000,131.000000 \n                      C1.000000,112.979698 1.000000,94.958511 1.000000,76.468658 \n                    z\"\n                                    />\n                                    <path\n                                      fill=\"#F8E987\"\n                                      opacity=\"1.000000\"\n                                      stroke=\"none\"\n                                      d=\"\n                    M67.161728,34.130535 \n                      C58.658878,32.550331 50.463642,32.776325 42.244755,36.285854 \n                      C30.065470,41.486504 24.379354,50.622173 23.929556,63.478218 \n                      C23.501854,75.702583 21.500576,87.592857 16.799000,99.079071 \n                      C5.632729,87.567360 0.647401,58.447243 13.686728,36.168118 \n                      C28.585316,10.712248 58.672554,-0.475806 86.159439,9.266678 \n                      C112.813217,18.713875 129.903824,46.648495 125.708771,73.910149 \n                      C121.628136,100.428284 99.219704,123.777618 76.719704,124.519165 \n                      C75.289993,118.956802 76.923164,113.723396 78.944870,108.687225 \n                      C83.506844,97.323128 91.340828,88.308846 100.067467,79.939499 \n                      C103.662323,76.491829 107.172386,72.884933 110.240662,68.973640 \n                      C116.758698,60.664780 115.309883,52.581173 105.912613,47.975792 \n                      C98.943100,44.560196 91.320595,42.477032 83.481522,39.486412 \n                      C79.000679,33.218479 75.050224,31.958828 67.161728,34.130535 \n                    M122.741554,62.952946 \n                      C121.931564,49.456993 117.821663,37.472195 107.482773,27.581638 \n                      C112.618309,40.665421 117.481361,53.054993 122.356270,65.474770 \n                      C122.471214,64.915009 122.599434,64.290619 122.741554,62.952946 \n                    M74.766914,11.836439 \n                      C80.884399,13.444856 87.001877,15.053272 93.647499,16.800549 \n                      C88.945778,11.339518 75.633400,7.880075 68.937065,10.319439 \n                      C70.920326,10.843212 72.457603,11.249201 74.766914,11.836439 \n                    z\"\n                                    />\n                                    <path\n                                      fill=\"#F5F7F2\"\n                                      opacity=\"1.000000\"\n                                      stroke=\"none\"\n                                      d=\"\n                    M46.557922,46.678169 \n                      C50.460312,40.761738 54.984890,38.808552 60.648354,40.346165 \n                      C65.791763,41.742584 68.941345,45.582127 69.158218,50.720249 \n                      C69.441216,57.424793 64.207664,63.205166 57.331547,63.782600 \n                      C52.580402,64.181587 45.799110,57.022385 45.738663,51.406406 \n                      C45.722897,49.941711 46.153244,48.472221 46.557922,46.678169 \n                    M59.129066,43.321339 \n                      C52.905285,43.682343 50.128323,45.922436 49.880501,50.781902 \n                      C49.652809,55.246601 51.976357,58.415615 56.005619,59.135765 \n                      C60.652447,59.966290 64.273163,58.019295 65.559769,53.998142 \n                      C67.025444,49.417343 65.020790,45.732014 59.129066,43.321339 \n                    z\"\n                                    />\n                                    <path\n                                      fill=\"#5E6658\"\n                                      opacity=\"1.000000\"\n                                      stroke=\"none\"\n                                      d=\"\n                    M70.846970,77.171539 \n                      C79.822350,77.099335 88.453735,76.963951 96.649796,76.835396 \n                      C89.345863,79.361977 81.442947,81.894165 72.876495,79.887817 \n                      C71.577995,79.583702 70.492355,78.370712 69.308258,77.578117 \n                      C69.385818,77.465889 69.444435,77.281075 69.544479,77.254951 \n                      C69.855530,77.173737 70.182304,77.152718 70.846970,77.171539 \n                    z\"\n                                    />\n                                    <path\n                                      fill=\"#249B48\"\n                                      opacity=\"1.000000\"\n                                      stroke=\"none\"\n                                      d=\"\n                    M67.415672,34.362106 \n                      C75.050224,31.958828 79.000679,33.218479 83.097733,39.484730 \n                      C78.037468,38.062542 72.853539,36.328110 67.415672,34.362106 \n                    z\"\n                                    />\n                                    <path\n                                      fill=\"#FDFDF4\"\n                                      opacity=\"1.000000\"\n                                      stroke=\"none\"\n                                      d=\"\n                    M122.734604,63.309586 \n                      C122.599434,64.290619 122.471214,64.915009 122.356270,65.474770 \n                      C117.481361,53.054993 112.618309,40.665421 107.482773,27.581638 \n                      C117.821663,37.472195 121.931564,49.456993 122.734604,63.309586 \n                    z\"\n                                    />\n                                    <path\n                                      fill=\"#FCFBEE\"\n                                      opacity=\"1.000000\"\n                                      stroke=\"none\"\n                                      d=\"\n                    M74.380898,11.745815 \n                      C72.457603,11.249201 70.920326,10.843212 68.937065,10.319439 \n                      C75.633400,7.880075 88.945778,11.339518 93.647499,16.800549 \n                      C87.001877,15.053272 80.884399,13.444856 74.380898,11.745815 \n                    z\"\n                                    />\n                                    <path\n                                      fill=\"#5B5C5E\"\n                                      opacity=\"1.000000\"\n                                      stroke=\"none\"\n                                      d=\"\n                    M59.497826,43.426590 \n                      C65.020790,45.732014 67.025444,49.417343 65.559769,53.998142 \n                      C64.273163,58.019295 60.652447,59.966290 56.005619,59.135765 \n                      C51.976357,58.415615 49.652809,55.246601 49.880501,50.781902 \n                      C50.128323,45.922436 52.905285,43.682343 59.497826,43.426590 \n                    z\"\n                                    />\n                                  </svg>\n                                </a>\n                              {/if}\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"flex justify-between items-start\">\n                          <div class=\"text-right text-sm uppercase font-medium\">\n                            {$t(\"Price\")}\n                          </div>\n                          <div class=\"flex justify-end\">\n                            <div\n                              class=\"font-medium text-sm text_00000099 flex items-center\"\n                            >\n                              $<TooltipNumber\n                                number={item.currentPrice}\n                                type=\"balance\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"flex justify-between items-start\">\n                          <div class=\"text-right text-sm uppercase font-medium\">\n                            <TooltipTitle\n                              tooltipText=\"The price difference of the current token compared to the latest time of rebalance\"\n                            >\n                              % {$t(\"Price change\")}\n                            </TooltipTitle>\n                          </div>\n                          <div class=\"flex justify-end\">\n                            <div\n                              class={`flex items-center justify-end font-medium text-sm ${\n                                item?.percentPriceChange !== 0\n                                  ? item?.percentPriceChange >= 0\n                                    ? \"text-[#00A878]\"\n                                    : \"text-red-500\"\n                                  : \"text_00000099\"\n                              }`}\n                            >\n                              <TooltipNumber\n                                number={Math.abs(item?.percentPriceChange) *\n                                  100}\n                                type={Math.abs(item?.percentPriceChange) * 100 >\n                                999999\n                                  ? \"balance\"\n                                  : \"percent\"}\n                              />\n                              <span>%</span>\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"flex justify-between items-start\">\n                          <div class=\"text-right text-sm uppercase font-medium\">\n                            {$t(\"Amount\")}\n                          </div>\n                          <div class=\"flex justify-end\">\n                            <div\n                              class=\"text-right font-medium text-sm text_00000099\"\n                            >\n                              <TooltipNumber\n                                number={item.amount}\n                                type=\"balance\"\n                                personalValue\n                              />\n                            </div>\n                          </div>\n                        </div>\n\n                        <div class=\"flex justify-between items-start\">\n                          <div class=\"text-right text-sm uppercase font-medium\">\n                            {$t(\"Value\")}\n                          </div>\n                          <div\n                            class=\"flex justify-end font-medium text-sm text_00000099\"\n                          >\n                            <TooltipNumber\n                              number={item?.value}\n                              type=\"value\"\n                              personalValue\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    {/each}\n                  </div>\n                {/if}\n              </div>\n            {/if}\n          </span>\n        </Table>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style windi:preflights:global windi:safelist:global></style>\n","<script lang=\"ts\">\n  import { groupBy } from \"lodash\";\n  import { isDarkMode } from \"~/store\";\n  import { shorterName } from \"~/utils\";\n  import dayjs from \"dayjs\";\n  import { isNimbusVersion } from \"~/utils/constants\";\n  import { t } from \"~/lib/i18n\";\n\n  import Loading from \"~/components/Loading.svelte\";\n  import Table from \"~/components/Table.svelte\";\n  import TooltipNumber from \"~/components/TooltipNumber.svelte\";\n  import Image from \"~/components/Image.svelte\";\n  import Tooltip from \"~/components/Tooltip.svelte\";\n  import LoadingPremium from \"~/components/LoadingPremium.svelte\";\n\n  import defaultToken from \"~/assets/defaultToken.png\";\n\n  export let isLoading;\n  export let listTokenHistoryChanges;\n\n  let formatListTokenHistoryChanges: any = [];\n  let selectedItemIndex = -1;\n  let isShowTooltipSymbol = false;\n\n  $: {\n    if (listTokenHistoryChanges) {\n      handleFormatListTokenHistoryChanges(listTokenHistoryChanges);\n    }\n  }\n\n  const getUniqueArray = (arr1: any, arr2: any) => {\n    return arr1.filter(\n      (item1: any) => !arr2.some((item2: any) => item1.symbol === item2.symbol),\n    );\n  };\n\n  const handleCompareVersion = (\n    ver: number,\n    dataCurrentVer: any,\n    dataPrevVer: any,\n    dataInitialVersion: any,\n  ) => {\n    let listDataChanged: any = [];\n\n    const formatAllData = new Set([\n      ...dataPrevVer.map((item: any) => item.symbol),\n      ...dataCurrentVer.map((item: any) => item.symbol),\n    ]);\n\n    formatAllData.forEach((symbol) => {\n      const selectedDataPrevVer = dataPrevVer.find(\n        (item: any) => item.symbol === symbol,\n      );\n      const selectedDataCurrentVer = dataCurrentVer.find(\n        (item: any) => item.symbol === symbol,\n      );\n\n      const selectedDataPrevVerPercent = selectedDataPrevVer\n        ? selectedDataPrevVer.percent\n        : 0;\n\n      const selectedDataCurrentVerPercent = selectedDataCurrentVer\n        ? selectedDataCurrentVer.percent\n        : 0;\n\n      listDataChanged.push({\n        symbol,\n        percent: selectedDataCurrentVerPercent - selectedDataPrevVerPercent,\n      });\n    });\n\n    const formatListDataChanged = listDataChanged.map((item: any) => {\n      const selectedInfoDataFromInitial = dataInitialVersion?.find(\n        (eachInfoData: any) =>\n          item.symbol.toLowerCase() === eachInfoData.symbol.toLowerCase(),\n      );\n\n      const selectedInfoDataFromCurrentVer = dataCurrentVer?.find(\n        (eachInfoData: any) =>\n          item.symbol.toLowerCase() === eachInfoData.symbol.toLowerCase(),\n      );\n\n      return {\n        ...item,\n        name:\n          selectedInfoDataFromInitial?.name ||\n          selectedInfoDataFromCurrentVer?.name,\n        logo:\n          selectedInfoDataFromInitial?.logo ||\n          selectedInfoDataFromCurrentVer?.logo,\n        price:\n          selectedInfoDataFromInitial?.price ||\n          selectedInfoDataFromCurrentVer?.logo,\n        amount:\n          selectedInfoDataFromInitial?.amount ||\n          selectedInfoDataFromCurrentVer?.logo,\n      };\n    });\n\n    const dataAdded = getUniqueArray(formatListDataChanged, dataPrevVer);\n    const dataChanged = getUniqueArray(formatListDataChanged, dataAdded);\n\n    return {\n      version: ver,\n      listDataChanged: formatListDataChanged,\n      dataAdded,\n      dataChanged,\n    };\n  };\n\n  const handleFormatListTokenHistoryChanges = (data: any) => {\n    const groupByChangesVersion = groupBy(data, \"version\");\n    formatListTokenHistoryChanges = Object.keys(groupByChangesVersion)\n      .map((ver) => {\n        return {\n          rebalanceTime: groupByChangesVersion[ver][0].startedAt,\n          data: groupByChangesVersion[ver],\n          version: ver,\n          compare: handleCompareVersion(\n            Number(ver),\n            groupByChangesVersion[ver],\n            groupByChangesVersion[Number(ver) - 1] || [],\n            groupByChangesVersion[0],\n          ),\n        };\n      })\n      .sort((a, b) => Number(b?.version) - Number(a?.version));\n  };\n</script>\n\n<div\n  class={`rounded-[20px] xl:p-6 py-4 lg:px-3 xl:border border_0000001a ${\n    $isDarkMode ? \"lg:bg-[#222222]\" : \"bg-[#fff]\"\n  }`}\n>\n  <div class=\"flex flex-col gap-2\">\n    <div class=\"flex xl:flex-row flex-col gap-2 justify-between\">\n      <div class=\"flex items-end gap-3\">\n        <div class=\"text-2xl font-medium\">{$t(\"Changes History\")}</div>\n      </div>\n    </div>\n\n    <Table>\n      <span slot=\"desktop\">\n        <table class=\"table-auto w-full h-full\">\n          <thead>\n            <tr class=\"bg_f4f5f8\">\n              <th class=\"pl-3 py-3 rounded-tl-[10px]\">\n                <div class=\"text-left text-xs uppercase font-medium\">\n                  {$t(\"Updated At\")}\n                </div>\n              </th>\n\n              <th class=\"py-3\">\n                <div class=\"text-left text-xs uppercase font-medium\">\n                  {$t(\"Action\")}\n                </div>\n              </th>\n\n              <th class=\"py-3\">\n                <div class=\"text-right text-xs uppercase font-medium\">\n                  {$t(\"Allocation\")}\n                </div>\n              </th>\n\n              <th class=\"py-3\">\n                <div class=\"text-right text-xs uppercase font-medium\">\n                  {$t(\"Allocation Change\")}\n                </div>\n              </th>\n\n              <th class=\"py-3\">\n                <div class=\"text-right text-xs uppercase font-medium\">\n                  {$t(\"Price\")}\n                </div>\n              </th>\n\n              <th class=\"py-3\">\n                <div class=\"text-right text-xs uppercase font-medium\">\n                  {$t(\"Amount\")}\n                </div>\n              </th>\n\n              <th class=\"pr-3 py-3 rounded-tr-[10px]\">\n                <div class=\"text-right text-xs uppercase font-medium\">\n                  {$t(\"Value\")}\n                </div>\n              </th>\n            </tr>\n          </thead>\n\n          {#if isLoading}\n            <tbody>\n              <tr>\n                <td colspan=\"7\">\n                  <div\n                    class=\"flex justify-center items-center h-full py-3 px-3\"\n                  >\n                    {#if isNimbusVersion}\n                      <LoadingPremium />\n                    {:else}\n                      <Loading />\n                    {/if}\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          {:else}\n            <tbody class=\"relative\">\n              {#if formatListTokenHistoryChanges && formatListTokenHistoryChanges?.length === 0}\n                <tr>\n                  <td colspan=\"7\">\n                    <div\n                      class=\"flex justify-center items-center h-full py-4 px-3 text-lg text-gray-400\"\n                    >\n                      {$t(\"Empty\")}\n                    </div>\n                  </td>\n                </tr>\n              {:else}\n                {#each formatListTokenHistoryChanges as item, index}\n                  <tr\n                    class={`group transition-all border-b-[0.5px] border_0000000d last:border-none ${\n                      $isDarkMode ? \"text-gray-400\" : \"text-[#666666]\"\n                    }`}\n                  >\n                    <td\n                      class={`pl-3 py-3 ${\n                        $isDarkMode\n                          ? \"group-hover:bg-[#000]\"\n                          : \"group-hover:bg-gray-100\"\n                      }`}\n                    >\n                      <div class=\"font-medium text-sm text_00000099\">\n                        {dayjs(item.rebalanceTime).format(\"YYYY-MM-DD\")}\n                      </div>\n                    </td>\n\n                    <td\n                      class={`py-3 ${\n                        $isDarkMode\n                          ? \"group-hover:bg-[#000]\"\n                          : \"group-hover:bg-gray-100\"\n                      }`}\n                    >\n                      {#if Number(item.version) === 0}\n                        <div class=\"font-medium text-sm text_00000099\">\n                          {$t(\"Create new paper trade\")}\n                        </div>\n                      {:else}\n                        <div class=\"flex flex-col gap-1\">\n                          <div class=\"font-medium text-sm text_00000099\">\n                            {$t(\"Add\")}\n                            {item.compare.dataAdded.length}\n                            {item.compare.dataAdded.length > 1\n                              ? \"tokens\"\n                              : \"token\"}\n                          </div>\n                          <div class=\"font-medium text-sm text_00000099\">\n                            {$t(\"Change\")}\n                            {item.compare.dataChanged.filter(\n                              (item) => item.percent !== 0,\n                            ).length}\n                            {item.compare.dataChanged.filter(\n                              (item) => item.percent !== 0,\n                            ).length > 1\n                              ? \"tokens\"\n                              : \"token\"}\n                          </div>\n                          {#if item.compare.dataChanged.filter((item) => item.percent === 0)?.length > 0}\n                            <div class=\"font-medium text-sm text_00000099\">\n                              {$t(\"Keep\")}\n                              {item.compare.dataChanged.filter(\n                                (item) => item.percent === 0,\n                              ).length}\n                              {item.compare.dataChanged.filter(\n                                (item) => item.percent === 0,\n                              ).length > 1\n                                ? \"tokens\"\n                                : \"token\"}\n                            </div>\n                          {/if}\n                        </div>\n                      {/if}\n                    </td>\n\n                    <td\n                      class={`py-3 ${\n                        $isDarkMode\n                          ? \"group-hover:bg-[#000]\"\n                          : \"group-hover:bg-gray-100\"\n                      }`}\n                    >\n                      <div class=\"flex flex-col gap-2\">\n                        {#each item.data as token}\n                          <div\n                            class=\"relative flex items-center justify-end gap-3\"\n                          >\n                            <div\n                              class=\"relative flex items-center justify-start gap-2\"\n                            >\n                              <div\n                                class=\"rounded-full w-[24px] h-[24px] overflow-hidden\"\n                              >\n                                <Image\n                                  logo={token.logo}\n                                  defaultLogo={defaultToken}\n                                />\n                              </div>\n                              <div class=\"flex items-center gap-2\">\n                                <div\n                                  class=\"relative font-medium text_00000099 text-sm\"\n                                  on:mouseover={() => {\n                                    if (index > 0) {\n                                      selectedItemIndex = index;\n                                      isShowTooltipSymbol = true;\n                                    }\n                                  }}\n                                  on:mouseleave={() => {\n                                    if (index > 0) {\n                                      selectedItemIndex = -1;\n                                      isShowTooltipSymbol = false;\n                                    }\n                                  }}\n                                >\n                                  {#if token.symbol === undefined}\n                                    N/A\n                                  {:else}\n                                    {shorterName(token.symbol, 12)}\n                                  {/if}\n                                  {#if isShowTooltipSymbol && selectedItemIndex === index && token.symbol.length > 12}\n                                    <div\n                                      class=\"absolute left-0 -top-8\"\n                                      style=\"z-index: 2147483648;\"\n                                    >\n                                      <Tooltip text={token.symbol} />\n                                    </div>\n                                  {/if}\n                                </div>\n\n                                {#if token?.positionType === \"ERC_404\"}\n                                  <span\n                                    class=\"inline-flex items-center gap-x-1.5 rounded-full bg-yellow-100 px-1 py-0.5 text-[10px] font-medium text-yellow-800\"\n                                  >\n                                    <svg\n                                      class=\"h-1.5 w-1.5 fill-yellow-500\"\n                                      viewBox=\"0 0 6 6\"\n                                      aria-hidden=\"true\"\n                                    >\n                                      <circle cx={3} cy={3} r={3} />\n                                    </svg>\n                                    ERC 404\n                                  </span>\n                                {/if}\n                              </div>\n                            </div>\n                            <div\n                              class=\"flex justify-end items-center text-sm font-medium text_00000099\"\n                            >\n                              <TooltipNumber\n                                number={Math.abs(token.percent)}\n                                type={Math.abs(token.percent) > 999999\n                                  ? \"balance\"\n                                  : \"percent\"}\n                              />\n                              <span>%</span>\n                            </div>\n                          </div>\n                        {/each}\n                      </div>\n                    </td>\n\n                    <td\n                      class={`py-3 ${\n                        $isDarkMode\n                          ? \"group-hover:bg-[#000]\"\n                          : \"group-hover:bg-gray-100\"\n                      }`}\n                    >\n                      <div class=\"flex flex-col gap-2\">\n                        {#each item.compare.listDataChanged as token}\n                          <div\n                            class=\"relative flex items-center justify-end gap-3\"\n                          >\n                            <div\n                              class=\"relative flex items-center justify-start gap-2\"\n                            >\n                              <div\n                                class=\"rounded-full w-[24px] h-[24px] overflow-hidden\"\n                              >\n                                <Image\n                                  logo={token.logo}\n                                  defaultLogo={defaultToken}\n                                />\n                              </div>\n                              <div class=\"flex items-center gap-2\">\n                                <div\n                                  class=\"relative font-medium text_00000099 text-sm\"\n                                  on:mouseover={() => {\n                                    if (index > 0) {\n                                      selectedItemIndex = index;\n                                      isShowTooltipSymbol = true;\n                                    }\n                                  }}\n                                  on:mouseleave={() => {\n                                    if (index > 0) {\n                                      selectedItemIndex = -1;\n                                      isShowTooltipSymbol = false;\n                                    }\n                                  }}\n                                >\n                                  {#if token.symbol === undefined}\n                                    N/A\n                                  {:else}\n                                    {shorterName(token.symbol, 12)}\n                                  {/if}\n                                  {#if isShowTooltipSymbol && selectedItemIndex === index && token.symbol.length > 12}\n                                    <div\n                                      class=\"absolute left-0 -top-8\"\n                                      style=\"z-index: 2147483648;\"\n                                    >\n                                      <Tooltip text={token.symbol} />\n                                    </div>\n                                  {/if}\n                                </div>\n\n                                {#if token?.positionType === \"ERC_404\"}\n                                  <span\n                                    class=\"inline-flex items-center gap-x-1.5 rounded-full bg-yellow-100 px-1 py-0.5 text-[10px] font-medium text-yellow-800\"\n                                  >\n                                    <svg\n                                      class=\"h-1.5 w-1.5 fill-yellow-500\"\n                                      viewBox=\"0 0 6 6\"\n                                      aria-hidden=\"true\"\n                                    >\n                                      <circle cx={3} cy={3} r={3} />\n                                    </svg>\n                                    ERC 404\n                                  </span>\n                                {/if}\n                              </div>\n                            </div>\n                            <div\n                              class={`flex justify-end items-center text-sm font-medium ${\n                                token.percent !== 0\n                                  ? token.percent >= 0\n                                    ? \"text-[#00A878]\"\n                                    : \"text-red-500\"\n                                  : \"text_00000099\"\n                              }`}\n                            >\n                              <TooltipNumber\n                                number={Math.abs(token.percent)}\n                                type={Math.abs(token.percent) > 999999\n                                  ? \"balance\"\n                                  : \"percent\"}\n                              />\n                              <span>%</span>\n                            </div>\n                          </div>\n                        {/each}\n                      </div>\n                    </td>\n\n                    <td\n                      class={`py-3 ${\n                        $isDarkMode\n                          ? \"group-hover:bg-[#000]\"\n                          : \"group-hover:bg-gray-100\"\n                      }`}\n                    >\n                      <div class=\"flex flex-col items-end gap-2\">\n                        {#each item.data as token}\n                          <div\n                            class=\"relative flex items-center justify-start gap-3\"\n                          >\n                            <div class=\"w-[24px] h-[24px]\"></div>\n                            <div\n                              class=\"font-medium flex justify-end text-sm text_00000099\"\n                            >\n                              $<TooltipNumber\n                                number={token?.price}\n                                type=\"balance\"\n                              />\n                            </div>\n                          </div>\n                        {/each}\n                      </div>\n                    </td>\n\n                    <td\n                      class={`py-3 ${\n                        $isDarkMode\n                          ? \"group-hover:bg-[#000]\"\n                          : \"group-hover:bg-gray-100\"\n                      }`}\n                    >\n                      <div class=\"flex flex-col items-end gap-2\">\n                        {#each item.data as token}\n                          <div\n                            class=\"relative flex items-center justify-start gap-3\"\n                          >\n                            <div class=\"w-[24px] h-[24px]\"></div>\n                            <div\n                              class=\"font-medium flex justify-end text-sm text_00000099\"\n                            >\n                              <TooltipNumber\n                                number={token?.amount}\n                                type=\"amount\"\n                              />\n                            </div>\n                          </div>\n                        {/each}\n                      </div>\n                    </td>\n\n                    <td\n                      class={`py-3 pr-3 ${\n                        $isDarkMode\n                          ? \"group-hover:bg-[#000]\"\n                          : \"group-hover:bg-gray-100\"\n                      }`}\n                    >\n                      <div class=\"flex flex-col items-end gap-2\">\n                        {#each item.data as token}\n                          <div\n                            class=\"relative flex items-center justify-start gap-3\"\n                          >\n                            <div class=\"w-[24px] h-[24px]\"></div>\n                            <div\n                              class=\"font-medium flex justify-end text-sm text_00000099\"\n                            >\n                              <TooltipNumber\n                                number={token?.value}\n                                type=\"value\"\n                              />\n                            </div>\n                          </div>\n                        {/each}\n                      </div>\n                    </td>\n                  </tr>\n                {/each}\n              {/if}\n            </tbody>\n          {/if}\n        </table>\n      </span>\n\n      <span slot=\"mobile\">\n        {#if isLoading}\n          <div class=\"flex justify-center items-center h-full py-3 px-3\">\n            {#if isNimbusVersion}\n              <LoadingPremium />\n            {:else}\n              <Loading />\n            {/if}\n          </div>\n        {:else}\n          <div>\n            {#if formatListTokenHistoryChanges && formatListTokenHistoryChanges?.length === 0}\n              <div\n                class=\"flex justify-center items-center h-full py-3 px-3 text-base text-gray-400\"\n              >\n                {$t(\"Empty\")}\n              </div>\n            {:else}\n              <div class=\"relative w-full\">\n                {#each formatListTokenHistoryChanges as item, index}\n                  <div\n                    class=\"flex flex-col gap-6 border-b-[1px] border_0000000d last:border-none py-4\"\n                  >\n                    <div class=\"flex justify-between items-start\">\n                      <div class=\"text-right text-sm uppercase font-medium\">\n                        {$t(\"Updated At\")}\n                      </div>\n                      <div\n                        class=\"text-sm text_00000099 font-medium flex justify-end\"\n                      >\n                        {dayjs(item.rebalanceTime).format(\"YYYY-MM-DD\")}\n                      </div>\n                    </div>\n\n                    <div class=\"flex justify-between items-start\">\n                      <div class=\"text-right text-sm uppercase font-medium\">\n                        {$t(\"Action\")}\n                      </div>\n                      <div class=\"flex justify-end\">\n                        {#if Number(item.version) === 0}\n                          <div class=\"font-medium text-sm text_00000099\">\n                            Create new paper trade\n                          </div>\n                        {:else}\n                          <div class=\"flex flex-col items-end gap-1\">\n                            <div class=\"font-medium text-sm text_00000099\">\n                              {$t(\"Add\")}\n                              {item.compare.dataAdded.length}\n                              {item.compare.dataAdded.length > 1\n                                ? \"tokens\"\n                                : \"token\"}\n                            </div>\n                            <div class=\"font-medium text-sm text_00000099\">\n                              {$t(\"Change\")}\n                              {item.compare.dataChanged.filter(\n                                (item) => item.percent !== 0,\n                              ).length}\n                              {item.compare.dataChanged.filter(\n                                (item) => item.percent !== 0,\n                              ).length > 1\n                                ? \"tokens\"\n                                : \"token\"}\n                            </div>\n                            {#if item.compare.dataChanged.filter((item) => item.percent === 0)?.length > 0}\n                              <div class=\"font-medium text-sm text_00000099\">\n                                {$t(\"Keep\")}\n                                {item.compare.dataChanged.filter(\n                                  (item) => item.percent === 0,\n                                ).length}\n                                {item.compare.dataChanged.filter(\n                                  (item) => item.percent === 0,\n                                ).length > 1\n                                  ? \"tokens\"\n                                  : \"token\"}\n                              </div>\n                            {/if}\n                          </div>\n                        {/if}\n                      </div>\n                    </div>\n\n                    <div class=\"flex justify-between items-start\">\n                      <div class=\"text-right text-sm uppercase font-medium\">\n                        {$t(\"Allocation\")}\n                      </div>\n                      <div class=\"flex flex-col gap-2\">\n                        {#each item.data as token}\n                          <div\n                            class=\"relative flex items-center justify-end gap-3\"\n                          >\n                            <div\n                              class=\"relative flex items-center justify-start gap-2\"\n                            >\n                              <div\n                                class=\"rounded-full w-[24px] h-[24px] overflow-hidden\"\n                              >\n                                <Image\n                                  logo={token.logo}\n                                  defaultLogo={defaultToken}\n                                />\n                              </div>\n                              <div class=\"flex items-center gap-2\">\n                                <div\n                                  class=\"relative font-medium text_00000099 text-sm\"\n                                  on:mouseover={() => {\n                                    if (index > 0) {\n                                      selectedItemIndex = index;\n                                      isShowTooltipSymbol = true;\n                                    }\n                                  }}\n                                  on:mouseleave={() => {\n                                    if (index > 0) {\n                                      selectedItemIndex = -1;\n                                      isShowTooltipSymbol = false;\n                                    }\n                                  }}\n                                >\n                                  {#if token.symbol === undefined}\n                                    N/A\n                                  {:else}\n                                    {shorterName(token.symbol, 12)}\n                                  {/if}\n                                  {#if isShowTooltipSymbol && selectedItemIndex === index && token.symbol.length > 12}\n                                    <div\n                                      class=\"absolute left-0 -top-8\"\n                                      style=\"z-index: 2147483648;\"\n                                    >\n                                      <Tooltip text={token.symbol} />\n                                    </div>\n                                  {/if}\n                                </div>\n\n                                {#if token?.positionType === \"ERC_404\"}\n                                  <span\n                                    class=\"inline-flex items-center gap-x-1.5 rounded-full bg-yellow-100 px-1 py-0.5 text-[10px] font-medium text-yellow-800\"\n                                  >\n                                    <svg\n                                      class=\"h-1.5 w-1.5 fill-yellow-500\"\n                                      viewBox=\"0 0 6 6\"\n                                      aria-hidden=\"true\"\n                                    >\n                                      <circle cx={3} cy={3} r={3} />\n                                    </svg>\n                                    ERC 404\n                                  </span>\n                                {/if}\n                              </div>\n                            </div>\n                            <div\n                              class=\"flex justify-end items-center text-sm font-medium text_00000099\"\n                            >\n                              <TooltipNumber\n                                number={Math.abs(token.percent)}\n                                type={Math.abs(token.percent) > 999999\n                                  ? \"balance\"\n                                  : \"percent\"}\n                              />\n                              <span>%</span>\n                            </div>\n                          </div>\n                        {/each}\n                      </div>\n                    </div>\n\n                    <div class=\"flex justify-between items-start\">\n                      <div\n                        class=\"md:hidden block text-left text-sm uppercase font-medium\"\n                      >\n                        {$t(\"Allocation\")} <br />\n                      </div>\n                      <div\n                        class=\"md:block hidden text-right text-sm uppercase font-medium\"\n                      >\n                        {$t(\"Allocation Change\")}\n                      </div>\n                      <div class=\"flex flex-col gap-2\">\n                        {#if item.compare.listDataChanged && item.compare.listDataChanged.length === 0}\n                          <div class=\"font-medium text-sm text_00000099\">-</div>\n                        {:else}\n                          {#each item.compare.listDataChanged as token}\n                            <div\n                              class=\"relative flex items-center justify-end gap-3\"\n                            >\n                              <div\n                                class=\"relative flex items-center justify-start gap-2\"\n                              >\n                                <div\n                                  class=\"rounded-full w-[24px] h-[24px] overflow-hidden\"\n                                >\n                                  <Image\n                                    logo={token.logo}\n                                    defaultLogo={defaultToken}\n                                  />\n                                </div>\n                                <div class=\"flex items-center gap-2\">\n                                  <div\n                                    class=\"relative font-medium text_00000099 text-sm\"\n                                    on:mouseover={() => {\n                                      if (index > 0) {\n                                        selectedItemIndex = index;\n                                        isShowTooltipSymbol = true;\n                                      }\n                                    }}\n                                    on:mouseleave={() => {\n                                      if (index > 0) {\n                                        selectedItemIndex = -1;\n                                        isShowTooltipSymbol = false;\n                                      }\n                                    }}\n                                  >\n                                    {#if token.symbol === undefined}\n                                      N/A\n                                    {:else}\n                                      {shorterName(token.symbol, 12)}\n                                    {/if}\n                                    {#if isShowTooltipSymbol && selectedItemIndex === index && token.symbol.length > 12}\n                                      <div\n                                        class=\"absolute left-0 -top-8\"\n                                        style=\"z-index: 2147483648;\"\n                                      >\n                                        <Tooltip text={token.symbol} />\n                                      </div>\n                                    {/if}\n                                  </div>\n\n                                  {#if token?.positionType === \"ERC_404\"}\n                                    <span\n                                      class=\"inline-flex items-center gap-x-1.5 rounded-full bg-yellow-100 px-1 py-0.5 text-[10px] font-medium text-yellow-800\"\n                                    >\n                                      <svg\n                                        class=\"h-1.5 w-1.5 fill-yellow-500\"\n                                        viewBox=\"0 0 6 6\"\n                                        aria-hidden=\"true\"\n                                      >\n                                        <circle cx={3} cy={3} r={3} />\n                                      </svg>\n                                      ERC 404\n                                    </span>\n                                  {/if}\n                                </div>\n                              </div>\n                              <div\n                                class={`flex justify-end items-center text-sm font-medium ${\n                                  token.percent !== 0\n                                    ? token.percent >= 0\n                                      ? \"text-[#00A878]\"\n                                      : \"text-red-500\"\n                                    : \"text_00000099\"\n                                }`}\n                              >\n                                <TooltipNumber\n                                  number={Math.abs(token.percent)}\n                                  type={Math.abs(token.percent) > 999999\n                                    ? \"balance\"\n                                    : \"percent\"}\n                                />\n                                <span>%</span>\n                              </div>\n                            </div>\n                          {/each}\n                        {/if}\n                      </div>\n                    </div>\n\n                    <div class=\"flex justify-between items-start\">\n                      <div class=\"text-right text-sm uppercase font-medium\">\n                        {$t(\"Price\")}\n                      </div>\n                      <div class=\"flex flex-col items-end gap-2\">\n                        {#each item.data as token}\n                          <div\n                            class=\"relative flex items-center justify-start gap-3\"\n                          >\n                            <div class=\"w-[24px] h-[24px]\"></div>\n                            <div class=\"font-medium text-sm text_00000099 flex\">\n                              $<TooltipNumber\n                                number={token?.price}\n                                type=\"balance\"\n                              />\n                            </div>\n                          </div>\n                        {/each}\n                      </div>\n                    </div>\n\n                    <div class=\"flex justify-between items-start\">\n                      <div class=\"text-right text-sm uppercase font-medium\">\n                        {$t(\"Amount\")}\n                      </div>\n                      <div class=\"flex flex-col items-end gap-2\">\n                        {#each item.data as token}\n                          <div\n                            class=\"relative flex items-center justify-start gap-3\"\n                          >\n                            <div class=\"w-[24px] h-[24px]\"></div>\n                            <div class=\"font-medium text-sm text_00000099\">\n                              <TooltipNumber\n                                number={token?.amount}\n                                type=\"amount\"\n                              />\n                            </div>\n                          </div>\n                        {/each}\n                      </div>\n                    </div>\n\n                    <div class=\"flex justify-between items-start\">\n                      <div class=\"text-right text-sm uppercase font-medium\">\n                        {$t(\"Value\")}\n                      </div>\n                      <div class=\"flex flex-col items-end gap-2\">\n                        {#each item.data as token}\n                          <div\n                            class=\"relative flex items-center justify-start gap-3\"\n                          >\n                            <div class=\"w-[24px] h-[24px]\"></div>\n                            <div class=\"font-medium text-sm text_00000099\">\n                              <TooltipNumber\n                                number={token?.value}\n                                type=\"value\"\n                              />\n                            </div>\n                          </div>\n                        {/each}\n                      </div>\n                    </div>\n                  </div>\n                {/each}\n              </div>\n            {/if}\n          </div>\n        {/if}\n      </span>\n    </Table>\n  </div>\n</div>\n\n<style windi:preflights:global windi:safelist:global></style>\n","<script lang=\"ts\">\n  import { isNimbusVersion } from \"~/utils/constants\";\n  import { groupBy } from \"lodash\";\n  import { createQuery } from \"@tanstack/svelte-query\";\n  import { getVirtualPortfolioProfile } from \"~/lib/queryAPI\";\n  import { t } from \"~/lib/i18n\";\n\n  export let virtualPortfolioId;\n  export let wallet;\n  export let isLoading;\n  export let listTokenHolding;\n  export let listTokenHistoryChanges;\n\n  import Loading from \"~/components/Loading.svelte\";\n  import LoadingPremium from \"~/components/LoadingPremium.svelte\";\n  import TooltipNumber from \"~/components/TooltipNumber.svelte\";\n\n  import TrendUp from \"~/assets/trend-up.svg\";\n  import TrendDown from \"~/assets/trend-down.svg\";\n\n  let sumTokens = 0;\n  let totalChanges = 0;\n  let selectedDataOverview: any = {};\n\n  $: {\n    if (listTokenHolding && listTokenHolding.length !== 0) {\n      const filteredHoldingDataToken = listTokenHolding.filter(\n        (item: any) => item.value > 1,\n      );\n      sumTokens = filteredHoldingDataToken.reduce(\n        (prev: any, item: any) => prev + Number(item?.value),\n        0,\n      );\n    }\n  }\n\n  $: {\n    if (listTokenHolding && listTokenHolding.length !== 0) {\n      const groupByChangesVersion = groupBy(listTokenHistoryChanges, \"version\");\n      totalChanges = Object.keys(groupByChangesVersion).length;\n    }\n  }\n\n  $: queryVirtualPortfolioProfile = createQuery({\n    queryKey: [\"virtual-portfolio-profile\", wallet],\n    queryFn: () => getVirtualPortfolioProfile(wallet),\n    retry: false,\n  });\n\n  $: {\n    if (\n      !$queryVirtualPortfolioProfile?.isError &&\n      $queryVirtualPortfolioProfile?.data !== undefined\n    ) {\n      const selectedData = (\n        $queryVirtualPortfolioProfile?.data?.data || []\n      )?.find((item: any) => item.id === virtualPortfolioId);\n\n      const realizedProfit =\n        Number(selectedData?.current_networth) -\n        Number(selectedData?.initial_networth);\n\n      const percentRealizeProfit =\n        ((Number(selectedData?.current_networth) -\n          Number(selectedData?.initial_networth)) /\n          Number(selectedData?.initial_networth)) *\n        100;\n\n      selectedDataOverview = {\n        ...selectedData,\n        realizedProfit,\n        percentRealizeProfit,\n      };\n    }\n  }\n</script>\n\n<div\n  class=\"border border_0000001a rounded-xl xl:p-6 p-3 xl:h-[98px] overflow-hidden xl:mt-0 mt-4\"\n>\n  {#if isLoading}\n    <div class=\"h-full flex items-center justify-center\">\n      {#if isNimbusVersion}\n        <LoadingPremium />\n      {:else}\n        <Loading />\n      {/if}\n    </div>\n  {:else}\n    <div class=\"grid xl:grid-cols-8 md:grid-cols-4 grid-cols-2 gap-5\">\n      <div class=\"flex flex-col gap-2 justify-between\">\n        <div class=\"text-sm font-medium text_00000099\">\n          {$t(\"Initial Investment\")}\n        </div>\n        <div class=\"text-sm font-medium\">\n          <TooltipNumber\n            number={selectedDataOverview?.initial_networth}\n            type=\"value\"\n          />\n        </div>\n      </div>\n\n      <div class=\"flex flex-col gap-2 justify-between\">\n        <div class=\"text-sm font-medium text_00000099\">\n          {$t(\"Current Value\")}\n        </div>\n        <div class=\"text-sm font-medium\">\n          <TooltipNumber number={sumTokens} type=\"value\" />\n        </div>\n      </div>\n\n      <div class=\"flex flex-col gap-2 justify-between\">\n        <div class=\"text-sm font-medium text_00000099\">\n          1D {$t(\"Performance\")}\n        </div>\n        <div\n          class={`flex items-center text-sm font-medium ${\n            selectedDataOverview?.change_1d === 0\n              ? \"\"\n              : selectedDataOverview?.change_1d >= 0\n                ? \"text-[#00A878]\"\n                : \"text-red-500\"\n          }`}\n        >\n          <TooltipNumber\n            number={Math.abs(Number(selectedDataOverview?.change_1d))}\n            type={Math.abs(Number(selectedDataOverview?.change_1d)) > 999999\n              ? \"balance\"\n              : \"percent\"}\n          />%\n          {#if selectedDataOverview?.change_1d !== 0}\n            <img\n              src={selectedDataOverview?.change_1d >= 0 ? TrendUp : TrendDown}\n              alt=\"trend\"\n              class=\"ml-1 mb-1 w-4 h-4\"\n            />\n          {/if}\n        </div>\n      </div>\n\n      <div class=\"flex flex-col gap-2 justify-between\">\n        <div class=\"text-sm font-medium text_00000099\">\n          1W {$t(\"Performance\")}\n        </div>\n        <div\n          class={`flex items-center text-sm font-medium ${\n            selectedDataOverview?.change_1w === 0\n              ? \"\"\n              : selectedDataOverview?.change_1w >= 0\n                ? \"text-[#00A878]\"\n                : \"text-red-500\"\n          }`}\n        >\n          <TooltipNumber\n            number={Math.abs(Number(selectedDataOverview?.change_1w))}\n            type={Math.abs(Number(selectedDataOverview?.change_1w)) > 999999\n              ? \"balance\"\n              : \"percent\"}\n          />%\n          {#if selectedDataOverview?.change_1w !== 0}\n            <img\n              src={selectedDataOverview?.change_1w >= 0 ? TrendUp : TrendDown}\n              alt=\"trend\"\n              class=\"ml-1 mb-1 w-4 h-4\"\n            />\n          {/if}\n        </div>\n      </div>\n\n      <div class=\"flex flex-col gap-2 justify-between\">\n        <div class=\"text-sm font-medium text_00000099\">\n          1M {$t(\"Performance\")}\n        </div>\n        <div\n          class={`flex items-center text-sm font-medium ${\n            selectedDataOverview?.change_1m === 0\n              ? \"\"\n              : selectedDataOverview?.change_1m >= 0\n                ? \"text-[#00A878]\"\n                : \"text-red-500\"\n          }`}\n        >\n          <TooltipNumber\n            number={Math.abs(Number(selectedDataOverview?.change_1m))}\n            type={Math.abs(Number(selectedDataOverview?.change_1m)) > 999999\n              ? \"balance\"\n              : \"percent\"}\n          />%\n          {#if selectedDataOverview?.change_1m !== 0}\n            <img\n              src={selectedDataOverview?.change_1m >= 0 ? TrendUp : TrendDown}\n              alt=\"trend\"\n              class=\"ml-1 mb-1 w-4 h-4\"\n            />\n          {/if}\n        </div>\n      </div>\n\n      <div class=\"flex flex-col gap-2 justify-between\">\n        <div class=\"text-sm font-medium text_00000099\">ROI</div>\n        <div\n          class={`flex items-center text-sm font-medium ${\n            selectedDataOverview?.realizedProfit === 0\n              ? \"\"\n              : selectedDataOverview?.realizedProfit >= 0\n                ? \"text-[#00A878]\"\n                : \"text-red-500\"\n          }`}\n        >\n          <TooltipNumber\n            number={Math.abs(\n              Number(selectedDataOverview?.percentRealizeProfit),\n            )}\n            type={Math.abs(Number(selectedDataOverview?.realizedProfit)) >\n            999999\n              ? \"balance\"\n              : \"percent\"}\n          />%\n          {#if selectedDataOverview?.realizedProfit !== 0}\n            <img\n              src={selectedDataOverview?.realizedProfit >= 0\n                ? TrendUp\n                : TrendDown}\n              alt=\"trend\"\n              class=\"ml-1 mb-1 w-4 h-4\"\n            />\n          {/if}\n        </div>\n      </div>\n\n      <div class=\"flex flex-col gap-2 justify-between\">\n        <div class=\"text-sm font-medium text_00000099\">\n          {$t(\"Max Drawdown\")}\n        </div>\n        <div\n          class={`flex items-center text-sm font-medium ${\n            selectedDataOverview?.max_drawdown === 0\n              ? \"\"\n              : selectedDataOverview?.max_drawdown >= 0\n                ? \"text-[#00A878]\"\n                : \"text-red-500\"\n          }`}\n        >\n          <TooltipNumber\n            number={Math.abs(Number(selectedDataOverview?.max_drawdown))}\n            type={Math.abs(Number(selectedDataOverview?.max_drawdown)) > 999999\n              ? \"balance\"\n              : \"percent\"}\n          />%\n          {#if selectedDataOverview?.max_drawdown !== 0}\n            <img\n              src={selectedDataOverview?.max_drawdown >= 0\n                ? TrendUp\n                : TrendDown}\n              alt=\"trend\"\n              class=\"ml-1 mb-1 w-4 h-4\"\n            />\n          {/if}\n        </div>\n      </div>\n\n      <div class=\"flex flex-col gap-2 justify-between\">\n        <div class=\"text-sm font-medium text_00000099\">\n          {$t(\"Total Rebalance\")}\n        </div>\n        <div class=\"text-sm font-medium\">\n          {totalChanges}\n        </div>\n      </div>\n    </div>\n  {/if}\n</div>\n\n<style></style>\n","<script lang=\"ts\">\n  import { isNimbusVersion } from \"~/utils/constants\";\n  import { userPublicAddress, user, triggerConnectWallet } from \"~/store\";\n  import { createQuery } from \"@tanstack/svelte-query\";\n  import { getVirtualPortfolioPerformance } from \"~/lib/queryAPI\";\n\n  export let wallet;\n  export let listTokenHistoryChanges;\n  export let listVirtualPortfolio;\n  export let listTokenHolding;\n  export let isLoading;\n  export let isQuery;\n  export let virtualPortfolioId;\n\n  $: selectedVirtual = listVirtualPortfolio?.find(\n    (item: any) => item?.id === virtualPortfolioId,\n  );\n\n  import Button from \"~/components/Button.svelte\";\n  import Allocation from \"./Allocation.svelte\";\n  import Performance from \"./Performance.svelte\";\n  import Holding from \"./Holding.svelte\";\n  import HoldingHistoryChange from \"./HoldingHistoryChange.svelte\";\n  import Summary from \"./Summary.svelte\";\n\n  $: queryVirtualPortfolioPerformance = createQuery({\n    queryKey: [\"virtual-portfolio-performance\", wallet, virtualPortfolioId],\n    queryFn: () =>\n      getVirtualPortfolioPerformance(\n        wallet,\n        virtualPortfolioId,\n        $userPublicAddress,\n      ),\n    retry: false,\n    enabled: Boolean(\n      wallet &&\n        wallet?.length !== 0 &&\n        isQuery &&\n        virtualPortfolioId &&\n        virtualPortfolioId?.length !== 0,\n    ),\n  });\n\n  let dataVirtualPortfolioPerformance = {};\n\n  $: {\n    if (\n      !$queryVirtualPortfolioPerformance.isError &&\n      $queryVirtualPortfolioPerformance.data !== undefined\n    ) {\n      if (\n        $queryVirtualPortfolioPerformance?.data?.data &&\n        $queryVirtualPortfolioPerformance?.data?.data?.status !== \"PRIVATE\"\n      ) {\n        dataVirtualPortfolioPerformance =\n          $queryVirtualPortfolioPerformance.data?.data;\n      }\n    }\n  }\n</script>\n\n{#if listVirtualPortfolio && listVirtualPortfolio?.length === 0}\n  {#if !isLoading && $user && Object.keys($user).length === 0}\n    <div class=\"min-h-screen flex flex-col items-center gap-4\">\n      <div class=\"text-center text-base font-medium\">\n        Add your paper trade to easily customize and change your investments to\n        your optimal level.\n      </div>\n      <div class=\"w-max\">\n        <Button\n          variant=\"secondary\"\n          on:click={() => {\n            triggerConnectWallet.update((n) => (n = true));\n          }}\n        >\n          {#if isNimbusVersion}\n            Connect Wallet\n          {:else}\n            Login\n          {/if} to create Paper Trade\n        </Button>\n      </div>\n    </div>\n  {/if}\n{:else}\n  <div class=\"flex flex-col gap-6 w-full h-full\">\n    <Summary\n      {virtualPortfolioId}\n      {wallet}\n      {isLoading}\n      {listTokenHolding}\n      {listTokenHistoryChanges}\n    />\n    <div class=\"grid xl:grid-cols-2 grid-cols-1 gap-6\">\n      <Allocation {isLoading} {listTokenHolding} />\n      <Performance\n        {selectedVirtual}\n        isLoading={isLoading || $queryVirtualPortfolioPerformance.isFetching}\n        {dataVirtualPortfolioPerformance}\n      />\n    </div>\n    <Holding {isLoading} {listTokenHolding} />\n    <HoldingHistoryChange {isLoading} {listTokenHistoryChanges} />\n  </div>\n{/if}\n\n<style></style>\n","<script lang=\"ts\">\n  import { isNimbusVersion } from \"~/utils/constants\";\n  import { isDarkMode } from \"~/store\";\n  import { createQuery } from \"@tanstack/svelte-query\";\n  import { getVirtualPortfolioDashboard } from \"~/lib/queryAPI\";\n  import tooltip from \"~/lib/tooltip\";\n  import { t } from \"~/lib/i18n\";\n  import { handleImgError, shorterAddress } from \"~/utils\";\n\n  import Loading from \"~/components/Loading.svelte\";\n  import Copy from \"~/components/Copy.svelte\";\n  import Table from \"~/components/Table.svelte\";\n  import LoadingPremium from \"~/components/LoadingPremium.svelte\";\n  import TooltipNumber from \"~/components/TooltipNumber.svelte\";\n  import Pagination from \"~/components/Pagination.svelte\";\n\n  import TrendUp from \"~/assets/trend-up.svg\";\n  import TrendDown from \"~/assets/trend-down.svg\";\n  import defaultToken from \"~/assets/defaultToken.png\";\n\n  export let tab;\n  export let handleSelectedVirtual;\n\n  let virtualPortfolioDashboard: any = [];\n  let totalPage = 0;\n  let pagination = 1;\n  let sort = \"\";\n\n  $: queryVirtualPortfolioDashboard = createQuery({\n    queryKey: [\"virtual-portfolio-dashboard\", pagination, sort],\n    queryFn: () => getVirtualPortfolioDashboard(pagination, sort),\n    retry: false,\n    enabled: Boolean(tab && tab?.length !== 0),\n  });\n\n  $: {\n    if (\n      !$queryVirtualPortfolioDashboard.isError &&\n      $queryVirtualPortfolioDashboard.data !== undefined\n    ) {\n      totalPage = $queryVirtualPortfolioDashboard?.data?.data?.totalPage;\n      handleFormatDatVirtualPortfolioDashboard(\n        $queryVirtualPortfolioDashboard?.data?.data?.result || [],\n      );\n    }\n  }\n\n  const handleFormatDatVirtualPortfolioDashboard = async (data: any) => {\n    virtualPortfolioDashboard = data?.map((item: any) => {\n      const realizedProfit =\n        Number(item?.current_networth) - Number(item?.initial_networth);\n      const percentRealizeProfit =\n        ((Number(item?.current_networth) - Number(item?.initial_networth)) /\n          Number(item?.initial_networth)) *\n        100;\n\n      return {\n        ...item,\n        realizedProfit,\n        percentRealizeProfit,\n      };\n    });\n  };\n\n  const handlePageChange = (page: number) => {\n    pagination = page;\n  };\n\n  const keysort = {\n    one_day: { title: \"change_1d\", type: \"sortOneDay\" },\n    one_week: { title: \"change_1w\", type: \"sortOneWeek\" },\n    one_month: { title: \"change_1m\", type: \"sortOneMonth\" },\n    total_token: { title: \"num_token\", type: \"sortTotalToken\" },\n    total_networth: { title: \"current_networth\", type: \"sortTotalNetworth\" },\n    max_drawdown: { title: \"max_drawdown\", type: \"sortMaxDrawdown\" },\n  };\n\n  let sortOneDay = \"default\";\n  let sortOneWeek = \"default\";\n  let sortOneMonth = \"default\";\n  let sortTotalToken = \"default\";\n  let sortMaxDrawdown = \"default\";\n  let sortTotalNetworth = \"desc\";\n\n  const toggleShortDashboard = (key: any, sortType: any) => {\n    let sortingType = \"default\";\n    switch (sortType) {\n      case \"sortOneDay\":\n        sortTotalToken = \"default\";\n        sortOneMonth = \"default\";\n        sortOneWeek = \"default\";\n        sortMaxDrawdown = \"default\";\n        sortTotalNetworth = \"default\";\n        switch (sortOneDay) {\n          case \"default\":\n            sortingType = sortOneDay = \"asc\";\n            break;\n          case \"asc\":\n            sortingType = sortOneDay = \"desc\";\n            break;\n          case \"desc\":\n            sortingType = sortOneDay = \"default\";\n            break;\n          default:\n            sortingType = sortOneDay = \"default\";\n        }\n        break;\n      case \"sortOneWeek\":\n        sortTotalToken = \"default\";\n        sortOneMonth = \"default\";\n        sortOneDay = \"default\";\n        sortMaxDrawdown = \"default\";\n        sortTotalNetworth = \"default\";\n        switch (sortOneWeek) {\n          case \"default\":\n            sortingType = sortOneWeek = \"asc\";\n            break;\n          case \"asc\":\n            sortingType = sortOneWeek = \"desc\";\n            break;\n          case \"desc\":\n            sortingType = sortOneWeek = \"default\";\n            break;\n          default:\n            sortingType = sortOneWeek = \"default\";\n        }\n        break;\n      case \"sortOneMonth\":\n        sortTotalToken = \"default\";\n        sortOneDay = \"default\";\n        sortOneWeek = \"default\";\n        sortMaxDrawdown = \"default\";\n        sortTotalNetworth = \"default\";\n        switch (sortOneMonth) {\n          case \"default\":\n            sortingType = sortOneMonth = \"asc\";\n            break;\n          case \"asc\":\n            sortingType = sortOneMonth = \"desc\";\n            break;\n          case \"desc\":\n            sortingType = sortOneMonth = \"default\";\n            break;\n          default:\n            sortingType = sortOneMonth = \"default\";\n        }\n        break;\n      case \"sortTotalToken\":\n        sortOneMonth = \"default\";\n        sortOneDay = \"default\";\n        sortOneWeek = \"default\";\n        sortMaxDrawdown = \"default\";\n        sortTotalNetworth = \"default\";\n        switch (sortTotalToken) {\n          case \"default\":\n            sortingType = sortTotalToken = \"asc\";\n            break;\n          case \"asc\":\n            sortingType = sortTotalToken = \"desc\";\n            break;\n          case \"desc\":\n            sortingType = sortTotalToken = \"default\";\n            break;\n          default:\n            sortingType = sortTotalToken = \"default\";\n        }\n        break;\n      case \"sortMaxDrawdown\":\n        sortTotalToken = \"default\";\n        sortOneMonth = \"default\";\n        sortOneDay = \"default\";\n        sortOneWeek = \"default\";\n        sortTotalNetworth = \"default\";\n        switch (sortMaxDrawdown) {\n          case \"default\":\n            sortingType = sortMaxDrawdown = \"asc\";\n            break;\n          case \"asc\":\n            sortingType = sortMaxDrawdown = \"desc\";\n            break;\n          case \"desc\":\n            sortingType = sortMaxDrawdown = \"default\";\n            break;\n          default:\n            sortingType = sortMaxDrawdown = \"default\";\n        }\n        break;\n      case \"sortTotalNetworth\":\n        sortTotalToken = \"default\";\n        sortOneMonth = \"default\";\n        sortOneDay = \"default\";\n        sortOneWeek = \"default\";\n        sortMaxDrawdown = \"default\";\n        switch (sortTotalNetworth) {\n          case \"default\":\n            sortingType = sortTotalNetworth = \"asc\";\n            break;\n          case \"asc\":\n            sortingType = sortTotalNetworth = \"desc\";\n            break;\n          case \"desc\":\n            sortingType = sortTotalNetworth = \"default\";\n            break;\n          default:\n            sortingType = sortTotalNetworth = \"default\";\n        }\n        break;\n      default:\n        sortingType = \"default\";\n        break;\n    }\n\n    sort = `${key}:${sortingType}`;\n  };\n\n  $: sortIcon = (sortType: any) => {\n    return `<svg\n              height=\"0.9rem\"\n              viewBox=\"0 0 24 24\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\" />\n              <g\n                id=\"SVGRepo_tracerCarrier\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n              />\n              <g id=\"SVGRepo_iconCarrier\">\n                <path\n                  d=\"M16.0686 15H7.9313C7.32548 15 7.02257 15 6.88231 15.1198C6.76061 15.2238 6.69602 15.3797 6.70858 15.5393C6.72305 15.7232 6.93724 15.9374 7.36561 16.3657L11.4342 20.4344C11.6323 20.6324 11.7313 20.7314 11.8454 20.7685C11.9458 20.8011 12.054 20.8011 12.1544 20.7685C12.2686 20.7314 12.3676 20.6324 12.5656 20.4344L16.6342 16.3657C17.0626 15.9374 17.2768 15.7232 17.2913 15.5393C17.3038 15.3797 17.2392 15.2238 17.1175 15.1198C16.9773 15 16.6744 15 16.0686 15Z\"\n                  stroke=\"${$isDarkMode ? \"#ffffff\" : \"#000000\"}\"\n                  fill=\"${\n                    sortType === \"default\" || sortType === \"desc\"\n                      ? $isDarkMode\n                        ? \"#ffffff\"\n                        : \"#000000\"\n                      : \"\"\n                  }\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                />\n                <path\n                  d=\"M7.9313 9.00005H16.0686C16.6744 9.00005 16.9773 9.00005 17.1175 8.88025C17.2393 8.7763 17.3038 8.62038 17.2913 8.46082C17.2768 8.27693 17.0626 8.06274 16.6342 7.63436L12.5656 3.56573C12.3676 3.36772 12.2686 3.26872 12.1544 3.23163C12.054 3.199 11.9458 3.199 11.8454 3.23163C11.7313 3.26872 11.6323 3.36772 11.4342 3.56573L7.36561 7.63436C6.93724 8.06273 6.72305 8.27693 6.70858 8.46082C6.69602 8.62038 6.76061 8.7763 6.88231 8.88025C7.02257 9.00005 7.32548 9.00005 7.9313 9.00005Z\"\n                  stroke=\"${$isDarkMode ? \"#ffffff\" : \"#000000\"}\"\n                  fill=\"${\n                    sortType === \"default\" || sortType === \"asc\"\n                      ? $isDarkMode\n                        ? \"#ffffff\"\n                        : \"#000000\"\n                      : \"\"\n                  }\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                />\n              </g>\n            </svg>`;\n  };\n</script>\n\n<div class=\"flex flex-col gap-4\">\n  <Table>\n    <span slot=\"desktop\">\n      <table class=\"table-auto w-full h-full\">\n        <thead>\n          <tr class=\"bg_f4f5f8\">\n            <th class=\"pl-3 py-3 rounded-tl-[10px]\">\n              <div class=\"text-left text-xs uppercase font-medium\">\n                {$t(\"Name\")}\n              </div>\n            </th>\n\n            <th class=\"py-3\">\n              <div class=\"text-left text-xs uppercase font-medium\">\n                {$t(\"Assets\")}\n              </div>\n            </th>\n\n            <th class=\"py-3\">\n              <div\n                class=\"flex items-center justify-end gap-2 text-right text-xs uppercase font-medium\"\n              >\n                1d\n                <div\n                  on:click={() => {\n                    toggleShortDashboard(\n                      keysort.one_day.title,\n                      keysort.one_day.type,\n                    );\n                  }}\n                  class=\"cursor-pointer\"\n                >\n                  {@html sortIcon(sortOneDay)}\n                </div>\n              </div>\n            </th>\n\n            <th class=\"py-3\">\n              <div\n                class=\"flex items-center justify-end gap-2 text-right text-xs uppercase font-medium\"\n              >\n                1w\n                <div\n                  on:click={() => {\n                    toggleShortDashboard(\n                      keysort.one_week.title,\n                      keysort.one_week.type,\n                    );\n                  }}\n                  class=\"cursor-pointer\"\n                >\n                  {@html sortIcon(sortOneWeek)}\n                </div>\n              </div>\n            </th>\n\n            <th class=\"py-3\">\n              <div\n                class=\"flex items-center justify-end gap-2 text-right text-xs uppercase font-medium\"\n              >\n                1m\n                <div\n                  on:click={() => {\n                    toggleShortDashboard(\n                      keysort.one_month.title,\n                      keysort.one_month.type,\n                    );\n                  }}\n                  class=\"cursor-pointer\"\n                >\n                  {@html sortIcon(sortOneMonth)}\n                </div>\n              </div>\n            </th>\n\n            <th class=\"py-3\">\n              <div\n                class=\"flex items-center justify-end gap-2 text-right text-xs uppercase font-medium\"\n              >\n                {$t(\"Max Drawdown\")}\n                <div\n                  on:click={() => {\n                    toggleShortDashboard(\n                      keysort.max_drawdown.title,\n                      keysort.max_drawdown.type,\n                    );\n                  }}\n                  class=\"cursor-pointer\"\n                >\n                  {@html sortIcon(sortMaxDrawdown)}\n                </div>\n              </div>\n            </th>\n\n            <th class=\"py-3\">\n              <div\n                class=\"flex items-center justify-end gap-2 text-right text-xs uppercase font-medium\"\n              >\n                ROI\n                <div\n                  on:click={() => {\n                    toggleShortDashboard(\n                      keysort.total_networth.title,\n                      keysort.total_networth.type,\n                    );\n                  }}\n                  class=\"cursor-pointer\"\n                >\n                  {@html sortIcon(sortTotalNetworth)}\n                </div>\n              </div>\n            </th>\n\n            <th class=\"pr-3 py-3 rounded-tr-[10px]\">\n              <div class=\"text-right text-xs uppercase font-medium\">\n                {$t(\"Creator\")}\n              </div>\n            </th>\n          </tr>\n        </thead>\n\n        {#if $queryVirtualPortfolioDashboard.isFetching && virtualPortfolioDashboard?.length === 0}\n          <tbody>\n            <tr>\n              <td colspan=\"8\">\n                <div class=\"flex justify-center items-center h-full py-3 px-3\">\n                  {#if isNimbusVersion}\n                    <LoadingPremium />\n                  {:else}\n                    <Loading />\n                  {/if}\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        {:else}\n          <tbody>\n            {#if virtualPortfolioDashboard && virtualPortfolioDashboard?.length === 0}\n              <tr>\n                <td colspan=\"8\">\n                  <div\n                    class=\"flex justify-center items-center h-full py-4 px-3 text-lg text-gray-400\"\n                  >\n                    Empty\n                  </div>\n                </td>\n              </tr>\n            {:else}\n              {#each virtualPortfolioDashboard as item}\n                <tr\n                  class={`group transition-all cursor-pointer ${\n                    $isDarkMode ? \"text-gray-400\" : \"text-[#666666]\"\n                  }`}\n                >\n                  <td\n                    class={`pl-3 py-3 ${\n                      $isDarkMode\n                        ? \"group-hover:bg-[#000]\"\n                        : \"group-hover:bg-gray-100\"\n                    }`}\n                    on:click={() => {\n                      handleSelectedVirtual({\n                        tab: \"paper-trade\",\n                        owner: item.owner,\n                        virtualPortfolioId: item.id,\n                        name: item.name,\n                      });\n                    }}\n                  >\n                    <div class=\"text-left text-sm font-medium\">\n                      {item?.name}\n                    </div>\n                  </td>\n\n                  <td\n                    class={`py-3 ${\n                      $isDarkMode\n                        ? \"group-hover:bg-[#000]\"\n                        : \"group-hover:bg-gray-100\"\n                    }`}\n                    on:click={() => {\n                      handleSelectedVirtual({\n                        tab: \"paper-trade\",\n                        owner: item.owner,\n                        virtualPortfolioId: item.id,\n                        name: item.name,\n                      });\n                    }}\n                  >\n                    <div class=\"flex justify-start items-center -space-x-2\">\n                      {#if item?.data?.length > 5}\n                        {#each item?.data?.slice(0, 4) as token, index}\n                          <div\n                            class={`${index > 0 && \"-ml-2\"}`}\n                            use:tooltip={{\n                              content: `<tooltip-detail text=\"${token.symbol.toUpperCase()}\" />`,\n                              allowHTML: true,\n                              placement: \"top\",\n                            }}\n                          >\n                            <img\n                              src={token.logo || defaultToken}\n                              alt=\"\"\n                              class=\"w-7 h-7 object-contain rounded-full bg-white\"\n                              on:error={(e) => handleImgError(e, defaultToken)}\n                            />\n                          </div>\n                        {/each}\n                        <div class=\"relative w-7 h-7\">\n                          <div\n                            class=\"absolute top-0 -left-2 w-full h-full bg-[#f1f1f1] text-gray-400 text-center flex justify-center items-center pb-2 rounded-full\"\n                          >\n                            ...\n                          </div>\n                        </div>\n                      {:else}\n                        {#each item?.data as token, index}\n                          <div\n                            class={`${index > 0 && \"-ml-2\"}`}\n                            use:tooltip={{\n                              content: `<tooltip-detail text=\"${token.symbol.toUpperCase()}\" />`,\n                              allowHTML: true,\n                              placement: \"top\",\n                            }}\n                          >\n                            <img\n                              src={token.logo || defaultToken}\n                              alt=\"\"\n                              class=\"w-7 h-7 object-contain rounded-full bg-white\"\n                              on:error={(e) => handleImgError(e, defaultToken)}\n                            />\n                          </div>\n                        {/each}\n                      {/if}\n                    </div>\n                  </td>\n\n                  <td\n                    class={`py-3 ${\n                      $isDarkMode\n                        ? \"group-hover:bg-[#000]\"\n                        : \"group-hover:bg-gray-100\"\n                    }`}\n                    on:click={() => {\n                      handleSelectedVirtual({\n                        tab: \"paper-trade\",\n                        owner: item.owner,\n                        virtualPortfolioId: item.id,\n                        name: item.name,\n                      });\n                    }}\n                  >\n                    <div\n                      class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                    >\n                      <div\n                        class={`flex items-center ${\n                          item?.performanceOneDay === 0\n                            ? \"\"\n                            : item?.performanceOneDay >= 0\n                              ? \"text-[#00A878]\"\n                              : \"text-red-500\"\n                        }`}\n                      >\n                        <TooltipNumber\n                          number={Math.abs(Number(item?.performanceOneDay))}\n                          type={Math.abs(Number(item?.performanceOneDay)) >\n                          999999\n                            ? \"balance\"\n                            : \"percent\"}\n                        />%\n                        {#if item?.performanceOneDay !== 0}\n                          <img\n                            src={item?.performanceOneDay >= 0\n                              ? TrendUp\n                              : TrendDown}\n                            alt=\"trend\"\n                            class=\"ml-1 mb-1 w-4 h-4\"\n                          />\n                        {/if}\n                      </div>\n                    </div>\n                  </td>\n\n                  <td\n                    class={`py-3 ${\n                      $isDarkMode\n                        ? \"group-hover:bg-[#000]\"\n                        : \"group-hover:bg-gray-100\"\n                    }`}\n                    on:click={() => {\n                      handleSelectedVirtual({\n                        tab: \"paper-trade\",\n                        owner: item.owner,\n                        virtualPortfolioId: item.id,\n                        name: item.name,\n                      });\n                    }}\n                  >\n                    <div\n                      class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                    >\n                      <div\n                        class={`flex items-center ${\n                          item?.performanceOneWeek === 0\n                            ? \"\"\n                            : item?.performanceOneWeek >= 0\n                              ? \"text-[#00A878]\"\n                              : \"text-red-500\"\n                        }`}\n                      >\n                        <TooltipNumber\n                          number={Math.abs(Number(item?.performanceOneWeek))}\n                          type={Math.abs(Number(item?.performanceOneWeek)) >\n                          999999\n                            ? \"balance\"\n                            : \"percent\"}\n                        />%\n                        {#if item?.performanceOneWeek !== 0}\n                          <img\n                            src={item?.performanceOneWeek >= 0\n                              ? TrendUp\n                              : TrendDown}\n                            alt=\"trend\"\n                            class=\"ml-1 mb-1 w-4 h-4\"\n                          />\n                        {/if}\n                      </div>\n                    </div>\n                  </td>\n\n                  <td\n                    class={`py-3 ${\n                      $isDarkMode\n                        ? \"group-hover:bg-[#000]\"\n                        : \"group-hover:bg-gray-100\"\n                    }`}\n                    on:click={() => {\n                      handleSelectedVirtual({\n                        tab: \"paper-trade\",\n                        owner: item.owner,\n                        virtualPortfolioId: item.id,\n                        name: item.name,\n                      });\n                    }}\n                  >\n                    <div\n                      class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                    >\n                      <div\n                        class={`flex items-center ${\n                          item?.performanceOneMonth === 0\n                            ? \"\"\n                            : item?.performanceOneMonth >= 0\n                              ? \"text-[#00A878]\"\n                              : \"text-red-500\"\n                        }`}\n                      >\n                        <TooltipNumber\n                          number={Math.abs(Number(item?.performanceOneMonth))}\n                          type={Math.abs(Number(item?.performanceOneMonth)) >\n                          999999\n                            ? \"balance\"\n                            : \"percent\"}\n                        />%\n                        {#if item?.performanceOneMonth !== 0}\n                          <img\n                            src={item?.performanceOneMonth >= 0\n                              ? TrendUp\n                              : TrendDown}\n                            alt=\"trend\"\n                            class=\"ml-1 mb-1 w-4 h-4\"\n                          />\n                        {/if}\n                      </div>\n                    </div>\n                  </td>\n\n                  <td\n                    class={`py-3 ${\n                      $isDarkMode\n                        ? \"group-hover:bg-[#000]\"\n                        : \"group-hover:bg-gray-100\"\n                    }`}\n                    on:click={() => {\n                      handleSelectedVirtual({\n                        tab: \"paper-trade\",\n                        owner: item.owner,\n                        virtualPortfolioId: item.id,\n                        name: item.name,\n                      });\n                    }}\n                  >\n                    <div\n                      class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                    >\n                      <div\n                        class={`flex items-center ${\n                          item?.max_drawdown === 0\n                            ? \"\"\n                            : item?.max_drawdown >= 0\n                              ? \"text-[#00A878]\"\n                              : \"text-red-500\"\n                        }`}\n                      >\n                        <TooltipNumber\n                          number={Math.abs(Number(item?.max_drawdown))}\n                          type={Math.abs(Number(item?.max_drawdown)) > 999999\n                            ? \"balance\"\n                            : \"percent\"}\n                        />%\n                        {#if item?.max_drawdown !== 0}\n                          <img\n                            src={item?.max_drawdown >= 0 ? TrendUp : TrendDown}\n                            alt=\"trend\"\n                            class=\"ml-1 mb-1 w-4 h-4\"\n                          />\n                        {/if}\n                      </div>\n                    </div>\n                  </td>\n\n                  <td\n                    class={`py-3 ${\n                      $isDarkMode\n                        ? \"group-hover:bg-[#000]\"\n                        : \"group-hover:bg-gray-100\"\n                    }`}\n                  >\n                    <div\n                      class=\"flex items-center justify-end gap-1 text-sm font-medium\"\n                    >\n                      <div\n                        class={`flex items-center ${\n                          item.realizedProfit !== 0\n                            ? item.realizedProfit >= 0\n                              ? \"text-[#00A878]\"\n                              : \"text-red-500\"\n                            : \"text_00000099\"\n                        }`}\n                      >\n                        <TooltipNumber\n                          number={Math.abs(item.percentRealizeProfit)}\n                          type=\"percent\"\n                        />\n                        <span>%</span>\n                      </div>\n                      {#if item.realizedProfit !== 0}\n                        <img\n                          src={item.realizedProfit >= 0 ? TrendUp : TrendDown}\n                          alt=\"trend\"\n                          class=\"mb-1 block\"\n                        />\n                      {/if}\n                    </div>\n                  </td>\n\n                  <td\n                    class={`py-3 pr-3 ${\n                      $isDarkMode\n                        ? \"group-hover:bg-[#000]\"\n                        : \"group-hover:bg-gray-100\"\n                    }`}\n                  >\n                    <div class=\"text-sm flex justify-end\">\n                      <Copy\n                        address={item?.owner}\n                        textTooltip=\"Copy address to clipboard\"\n                        iconColor={$isDarkMode ? \"#9ca3af\" : \"#666666\"}\n                        color={$isDarkMode ? \"text-gray-400\" : \"text-[#666666]\"}\n                        isShorten={true}\n                      />\n                    </div>\n                  </td>\n                </tr>\n              {/each}\n            {/if}\n          </tbody>\n        {/if}\n      </table>\n    </span>\n\n    <span slot=\"mobile\">\n      {#if $queryVirtualPortfolioDashboard.isFetching}\n        <div class=\"flex justify-center items-center h-full py-3 px-3\">\n          {#if isNimbusVersion}\n            <LoadingPremium />\n          {:else}\n            <Loading />\n          {/if}\n        </div>\n      {:else}\n        <div class=\"relative w-full\">\n          {#if virtualPortfolioDashboard && virtualPortfolioDashboard?.length === 0}\n            <div\n              class=\"flex justify-center items-center h-full py-3 px-3 text-lg text-gray-400\"\n            >\n              {$t(\"Empty\")}\n            </div>\n          {:else}\n            {#each virtualPortfolioDashboard as item}\n              <div\n                class=\"flex flex-col gap-4 border-b-[1px] border_0000000d last:border-none py-4\"\n              >\n                <div class=\"flex justify-between items-start\">\n                  <div class=\"text-right text-sm uppercase font-medium\">\n                    {$t(\"Name\")}\n                  </div>\n                  <div\n                    class=\"text-sm text_00000099 font-medium flex justify-end\"\n                  >\n                    {item?.name}\n                  </div>\n                </div>\n\n                <div class=\"flex justify-between items-start\">\n                  <div class=\"text-right text-sm uppercase font-medium\">\n                    {$t(\"Assets\")}\n                  </div>\n                  <div class=\"flex justify-end items-center -space-x-2\">\n                    {#if item?.data?.length > 5}\n                      {#each item?.data?.slice(0, 4) as token, index}\n                        <div\n                          class={`${index > 0 && \"-ml-2\"}`}\n                          use:tooltip={{\n                            content: `<tooltip-detail text=\"${token.symbol.toUpperCase()}\" />`,\n                            allowHTML: true,\n                            placement: \"top\",\n                          }}\n                        >\n                          <img\n                            src={token.logo || defaultToken}\n                            alt=\"\"\n                            class=\"w-7 h-7 object-contain rounded-full bg-white\"\n                            on:error={(e) => handleImgError(e, defaultToken)}\n                          />\n                        </div>\n                      {/each}\n                      <div class=\"relative w-7 h-7\">\n                        <div\n                          class=\"absolute top-0 -left-2 w-full h-full bg-[#f1f1f1] text-gray-400 text-center flex justify-center items-center pb-2 rounded-full\"\n                        >\n                          ...\n                        </div>\n                      </div>\n                    {:else}\n                      {#each item?.data as token, index}\n                        <div\n                          class={`${index > 0 && \"-ml-2\"}`}\n                          use:tooltip={{\n                            content: `<tooltip-detail text=\"${token.symbol.toUpperCase()}\" />`,\n                            allowHTML: true,\n                            placement: \"top\",\n                          }}\n                        >\n                          <img\n                            src={token.logo || defaultToken}\n                            alt=\"\"\n                            class=\"w-7 h-7 object-contain rounded-full bg-white\"\n                            on:error={(e) => handleImgError(e, defaultToken)}\n                          />\n                        </div>\n                      {/each}\n                    {/if}\n                  </div>\n                </div>\n\n                <div class=\"flex justify-between items-start\">\n                  <div class=\"text-right text-sm uppercase font-medium\">1d</div>\n                  <div\n                    class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                  >\n                    <div\n                      class={`flex items-center ${\n                        item?.performanceOneDay === 0\n                          ? \"\"\n                          : item?.performanceOneDay >= 0\n                            ? \"text-[#00A878]\"\n                            : \"text-red-500\"\n                      }`}\n                    >\n                      <TooltipNumber\n                        number={Math.abs(Number(item?.performanceOneDay))}\n                        type={Math.abs(Number(item?.performanceOneDay)) > 999999\n                          ? \"balance\"\n                          : \"percent\"}\n                      />%\n                      {#if item?.performanceOneDay !== 0}\n                        <img\n                          src={item?.performanceOneDay >= 0\n                            ? TrendUp\n                            : TrendDown}\n                          alt=\"trend\"\n                          class=\"ml-1 mb-1 w-4 h-4\"\n                        />\n                      {/if}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"flex justify-between items-start\">\n                  <div class=\"text-right text-sm uppercase font-medium\">1w</div>\n                  <div\n                    class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                  >\n                    <div\n                      class={`flex items-center ${\n                        item?.performanceOneWeek === 0\n                          ? \"\"\n                          : item?.performanceOneWeek >= 0\n                            ? \"text-[#00A878]\"\n                            : \"text-red-500\"\n                      }`}\n                    >\n                      <TooltipNumber\n                        number={Math.abs(Number(item?.performanceOneWeek))}\n                        type={Math.abs(Number(item?.performanceOneWeek)) >\n                        999999\n                          ? \"balance\"\n                          : \"percent\"}\n                      />%\n                      {#if item?.performanceOneWeek !== 0}\n                        <img\n                          src={item?.performanceOneWeek >= 0\n                            ? TrendUp\n                            : TrendDown}\n                          alt=\"trend\"\n                          class=\"ml-1 mb-1 w-4 h-4\"\n                        />\n                      {/if}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"flex justify-between items-start\">\n                  <div class=\"text-right text-sm uppercase font-medium\">1m</div>\n                  <div\n                    class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                  >\n                    <div\n                      class={`flex items-center ${\n                        item?.performanceOneMonth === 0\n                          ? \"\"\n                          : item?.performanceOneMonth >= 0\n                            ? \"text-[#00A878]\"\n                            : \"text-red-500\"\n                      }`}\n                    >\n                      <TooltipNumber\n                        number={Math.abs(Number(item?.performanceOneMonth))}\n                        type={Math.abs(Number(item?.performanceOneMonth)) >\n                        999999\n                          ? \"balance\"\n                          : \"percent\"}\n                      />%\n                      {#if item?.performanceOneMonth !== 0}\n                        <img\n                          src={item?.performanceOneMonth >= 0\n                            ? TrendUp\n                            : TrendDown}\n                          alt=\"trend\"\n                          class=\"ml-1 mb-1 w-4 h-4\"\n                        />\n                      {/if}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"flex justify-between items-start\">\n                  <div class=\"text-right text-sm uppercase font-medium\">\n                    {$t(\"Max Drawdown\")}\n                  </div>\n                  <div\n                    class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                  >\n                    <div\n                      class={`flex items-center ${\n                        item?.max_drawdown === 0\n                          ? \"\"\n                          : item?.max_drawdown >= 0\n                            ? \"text-[#00A878]\"\n                            : \"text-red-500\"\n                      }`}\n                    >\n                      <TooltipNumber\n                        number={Math.abs(Number(item?.max_drawdown))}\n                        type={Math.abs(Number(item?.max_drawdown)) > 999999\n                          ? \"balance\"\n                          : \"percent\"}\n                      />%\n                      {#if item?.max_drawdown !== 0}\n                        <img\n                          src={item?.max_drawdown >= 0 ? TrendUp : TrendDown}\n                          alt=\"trend\"\n                          class=\"ml-1 mb-1 w-4 h-4\"\n                        />\n                      {/if}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"flex justify-between items-start\">\n                  <div class=\"text-right text-sm uppercase font-medium\">\n                    ROI\n                  </div>\n                  <div\n                    class=\"flex items-center justify-end gap-1 text-sm font-medium\"\n                  >\n                    <div\n                      class={`flex items-center ${\n                        item.realizedProfit !== 0\n                          ? item.realizedProfit >= 0\n                            ? \"text-[#00A878]\"\n                            : \"text-red-500\"\n                          : \"text_00000099\"\n                      }`}\n                    >\n                      <TooltipNumber\n                        number={Math.abs(item.percentRealizeProfit)}\n                        type=\"percent\"\n                      />\n                      <span>%</span>\n                    </div>\n                    {#if item.realizedProfit !== 0}\n                      <img\n                        src={item.realizedProfit >= 0 ? TrendUp : TrendDown}\n                        alt=\"trend\"\n                        class=\"mb-1 block\"\n                      />\n                    {/if}\n                  </div>\n                </div>\n\n                <div class=\"flex justify-between items-start\">\n                  <div class=\"text-right text-sm uppercase font-medium\">\n                    {$t(\"Creator\")}\n                  </div>\n                  <div\n                    class=\"text-sm text_00000099 font-medium flex justify-end\"\n                  >\n                    <Copy\n                      address={item?.owner}\n                      textTooltip=\"Copy address to clipboard\"\n                      iconColor={$isDarkMode ? \"#9ca3af\" : \"#666666\"}\n                      color={$isDarkMode ? \"text-gray-400\" : \"text-[#666666]\"}\n                      isShorten={true}\n                    />\n                  </div>\n                </div>\n\n                <div class=\"flex justify-between items-center\">\n                  <div class=\"text-right text-sm uppercase font-medium mt-1\">\n                    {$t(\"Action\")}\n                  </div>\n                  <div\n                    class=\"flex justify-center cursor-pointer\"\n                    on:click={() => {\n                      handleSelectedVirtual({\n                        tab: \"paper-trade\",\n                        owner: item.owner,\n                        virtualPortfolioId: item.id,\n                        name: item.name,\n                      });\n                    }}\n                  >\n                    <div class=\"w-[20px] h-[20px]\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                        version=\"1.1\"\n                        viewBox=\"0 0 256 256\"\n                        xml:space=\"preserve\"\n                      >\n                        <defs />\n                        <g\n                          style=\"stroke: none; stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\"\n                          fill={$isDarkMode ? \"white\" : \"#00000080\"}\n                          transform=\"translate(1.4065934065934016 1.4065934065934016) scale(2.81 2.81)\"\n                        >\n                          <path\n                            d=\"M 87.994 0 H 69.342 c -1.787 0 -2.682 2.16 -1.418 3.424 l 5.795 5.795 l -33.82 33.82 L 28.056 31.196 l -3.174 -3.174 c -1.074 -1.074 -2.815 -1.074 -3.889 0 L 0.805 48.209 c -1.074 1.074 -1.074 2.815 0 3.889 l 3.174 3.174 c 1.074 1.074 2.815 1.074 3.889 0 l 15.069 -15.069 l 14.994 14.994 c 1.074 1.074 2.815 1.074 3.889 0 l 1.614 -1.614 c 0.083 -0.066 0.17 -0.125 0.247 -0.202 l 37.1 -37.1 l 5.795 5.795 C 87.84 23.34 90 22.445 90 20.658 V 2.006 C 90 0.898 89.102 0 87.994 0 z\"\n                            style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\"\n                            transform=\" matrix(1 0 0 1 0 0) \"\n                            fill={$isDarkMode ? \"white\" : \"#00000080\"}\n                            stroke-linecap=\"round\"\n                          />\n                          <path\n                            d=\"M 65.626 37.8 v 49.45 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 23.518 L 65.626 37.8 z\"\n                            style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\"\n                            fill={$isDarkMode ? \"white\" : \"#00000080\"}\n                            transform=\" matrix(1 0 0 1 0 0) \"\n                            stroke-linecap=\"round\"\n                          />\n                          <path\n                            d=\"M 47.115 56.312 V 87.25 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 42.03 L 47.115 56.312 z\"\n                            style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\"\n                            fill={$isDarkMode ? \"white\" : \"#00000080\"}\n                            transform=\" matrix(1 0 0 1 0 0) \"\n                            stroke-linecap=\"round\"\n                          />\n                          <path\n                            d=\"M 39.876 60.503 c -1.937 0 -3.757 -0.754 -5.127 -2.124 l -6.146 -6.145 V 87.25 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 59.844 C 41.952 60.271 40.933 60.503 39.876 60.503 z\"\n                            style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\"\n                            fill={$isDarkMode ? \"white\" : \"#00000080\"}\n                            transform=\" matrix(1 0 0 1 0 0) \"\n                            stroke-linecap=\"round\"\n                          />\n                          <path\n                            d=\"M 22.937 46.567 L 11.051 58.453 c -0.298 0.298 -0.621 0.562 -0.959 0.8 V 87.25 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 48.004 L 22.937 46.567 z\"\n                            style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\"\n                            fill={$isDarkMode ? \"white\" : \"#00000080\"}\n                            transform=\" matrix(1 0 0 1 0 0) \"\n                            stroke-linecap=\"round\"\n                          />\n                        </g>\n                      </svg>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            {/each}\n          {/if}\n        </div>\n      {/if}\n    </span>\n  </Table>\n  <Pagination\n    isDisabled={$queryVirtualPortfolioDashboard.isFetching}\n    {totalPage}\n    {handlePageChange}\n  />\n</div>\n\n<style></style>\n","<script lang=\"ts\">\n  import { isNimbusVersion } from \"~/utils/constants\";\n  import { isDarkMode } from \"~/store\";\n  import tooltip from \"~/lib/tooltip\";\n  import { t } from \"~/lib/i18n\";\n  import { handleImgError } from \"~/utils\";\n\n  export let listVirtualPortfolio;\n  export let handleSelectedVirtual = (data) => {};\n  export let isLoading;\n\n  import Loading from \"~/components/Loading.svelte\";\n  import LoadingPremium from \"~/components/LoadingPremium.svelte\";\n  import TooltipNumber from \"~/components/TooltipNumber.svelte\";\n  import Table from \"~/components/Table.svelte\";\n\n  import TrendUp from \"~/assets/trend-up.svg\";\n  import TrendDown from \"~/assets/trend-down.svg\";\n  import defaultToken from \"~/assets/defaultToken.png\";\n\n  let virtualPortfolioDashboard: any = [];\n\n  $: {\n    if (listVirtualPortfolio && listVirtualPortfolio.length !== 0) {\n      handleFormatDatVirtualPortfolioDashboard(listVirtualPortfolio);\n    } else {\n      virtualPortfolioDashboard = [];\n    }\n  }\n\n  const handleFormatDatVirtualPortfolioDashboard = (data: any) => {\n    virtualPortfolioDashboard = data?.map((item: any) => {\n      const realizedProfit =\n        Number(item?.current_networth) - Number(item?.initial_networth);\n      const percentRealizeProfit =\n        ((Number(item?.current_networth) - Number(item?.initial_networth)) /\n          Number(item?.initial_networth)) *\n        100;\n\n      return {\n        ...item,\n        data: item.virtual_portfolio.filter(\n          (eachData: any) => eachData.version === item.latest_version,\n        ),\n        realizedProfit,\n        percentRealizeProfit,\n      };\n    });\n  };\n</script>\n\n<Table>\n  <span slot=\"desktop\">\n    <table class=\"table-auto w-full h-full\">\n      <thead>\n        <tr class=\"bg_f4f5f8\">\n          <th class=\"pl-3 py-3 rounded-tl-[10px]\">\n            <div class=\"text-left text-xs uppercase font-medium\">\n              {$t(\"Name\")}\n            </div>\n          </th>\n\n          <th class=\"py-3\">\n            <div class=\"text-left text-xs uppercase font-medium\">\n              {$t(\"Assets\")}\n            </div>\n          </th>\n\n          <th class=\"py-3\">\n            <div class=\"text-right text-xs uppercase font-medium\">1d</div>\n          </th>\n\n          <th class=\"py-3\">\n            <div class=\"text-right text-xs uppercase font-medium\">1w</div>\n          </th>\n\n          <th class=\"py-3\">\n            <div class=\"text-right text-xs uppercase font-medium\">1m</div>\n          </th>\n\n          <th class=\"py-3\">\n            <div class=\"text-right text-xs uppercase font-medium\">\n              {$t(\"Max Drawdown\")}\n            </div>\n          </th>\n\n          <th class=\"py-3\">\n            <div class=\"text-right text-xs uppercase font-medium\">ROI</div>\n          </th>\n\n          <th class=\"pr-3 py-3 rounded-tr-[10px]\">\n            <div class=\"text-right text-xs uppercase font-medium\">\n              # {$t(\"of coins\")}\n            </div>\n          </th>\n        </tr>\n      </thead>\n\n      {#if isLoading}\n        <tbody>\n          <tr>\n            <td colspan=\"9\">\n              <div class=\"flex justify-center items-center h-full py-3 px-3\">\n                {#if isNimbusVersion}\n                  <LoadingPremium />\n                {:else}\n                  <Loading />\n                {/if}\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      {:else}\n        <tbody>\n          {#if virtualPortfolioDashboard && virtualPortfolioDashboard?.length === 0}\n            <tr>\n              <td colspan=\"9\">\n                <div\n                  class=\"flex justify-center items-center h-full py-4 px-3 text-lg text-gray-400\"\n                >\n                  {$t(\"No paper trade added yet\")}.\n                </div>\n              </td>\n            </tr>\n          {:else}\n            {#each virtualPortfolioDashboard || [] as item}\n              <tr\n                class={`group transition-all cursor-pointer ${\n                  $isDarkMode ? \"text-gray-400\" : \"text-[#666666]\"\n                }`}\n              >\n                <td\n                  class={`pl-3 py-3 ${\n                    $isDarkMode\n                      ? \"group-hover:bg-[#000]\"\n                      : \"group-hover:bg-gray-100\"\n                  }`}\n                  on:click={() => {\n                    handleSelectedVirtual({\n                      tab: \"paper-trade\",\n                      owner: item.owner,\n                      virtualPortfolioId: item.id,\n                      name: item.name,\n                    });\n                  }}\n                >\n                  <div class=\"text-left text-sm font-medium\">\n                    {item?.name}\n                  </div>\n                </td>\n\n                <td\n                  class={`py-3 ${\n                    $isDarkMode\n                      ? \"group-hover:bg-[#000]\"\n                      : \"group-hover:bg-gray-100\"\n                  }`}\n                  on:click={() => {\n                    handleSelectedVirtual({\n                      tab: \"paper-trade\",\n                      owner: item.owner,\n                      virtualPortfolioId: item.id,\n                      name: item.name,\n                    });\n                  }}\n                >\n                  <div class=\"flex justify-start items-center -space-x-2\">\n                    {#if item?.data?.length > 5}\n                      {#each item?.data?.slice(0, 4) as token, index}\n                        <div\n                          class={`${index > 0 && \"-ml-2\"}`}\n                          use:tooltip={{\n                            content: `<tooltip-detail text=\"${token.symbol.toUpperCase()}\" />`,\n                            allowHTML: true,\n                            placement: \"top\",\n                          }}\n                        >\n                          <img\n                            src={token.logo || defaultToken}\n                            alt=\"\"\n                            class=\"w-7 h-7 object-contain rounded-full bg-white\"\n                            on:error={(e) => handleImgError(e, defaultToken)}\n                          />\n                        </div>\n                      {/each}\n                      <div class=\"relative w-7 h-7\">\n                        <div\n                          class=\"absolute top-0 -left-2 w-full h-full bg-[#f1f1f1] text-gray-400 text-center flex justify-center items-center pb-2 rounded-full\"\n                        >\n                          ...\n                        </div>\n                      </div>\n                    {:else}\n                      {#each item?.data as token, index}\n                        <div\n                          class={`${index > 0 && \"-ml-2\"}`}\n                          use:tooltip={{\n                            content: `<tooltip-detail text=\"${token.symbol.toUpperCase()}\" />`,\n                            allowHTML: true,\n                            placement: \"top\",\n                          }}\n                        >\n                          <img\n                            src={token.logo || defaultToken}\n                            alt=\"\"\n                            class=\"w-7 h-7 object-contain rounded-full bg-white\"\n                            on:error={(e) => handleImgError(e, defaultToken)}\n                          />\n                        </div>\n                      {/each}\n                    {/if}\n                  </div>\n                </td>\n\n                <td\n                  class={`py-3 ${\n                    $isDarkMode\n                      ? \"group-hover:bg-[#000]\"\n                      : \"group-hover:bg-gray-100\"\n                  }`}\n                  on:click={() => {\n                    handleSelectedVirtual({\n                      tab: \"paper-trade\",\n                      owner: item.owner,\n                      virtualPortfolioId: item.id,\n                      name: item.name,\n                    });\n                  }}\n                >\n                  <div\n                    class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                  >\n                    <div\n                      class={`flex items-center ${\n                        item?.change_1d === 0\n                          ? \"\"\n                          : item?.change_1d >= 0\n                            ? \"text-[#00A878]\"\n                            : \"text-red-500\"\n                      }`}\n                    >\n                      <TooltipNumber\n                        number={Math.abs(Number(item?.change_1d))}\n                        type={Math.abs(Number(item?.change_1d)) > 999999\n                          ? \"balance\"\n                          : \"percent\"}\n                      />%\n                      {#if item?.change_1d !== 0}\n                        <img\n                          src={item?.change_1d >= 0 ? TrendUp : TrendDown}\n                          alt=\"trend\"\n                          class=\"ml-1 mb-1 w-4 h-4\"\n                        />\n                      {/if}\n                    </div>\n                  </div>\n                </td>\n\n                <td\n                  class={`py-3 ${\n                    $isDarkMode\n                      ? \"group-hover:bg-[#000]\"\n                      : \"group-hover:bg-gray-100\"\n                  }`}\n                  on:click={() => {\n                    handleSelectedVirtual({\n                      tab: \"paper-trade\",\n                      owner: item.owner,\n                      virtualPortfolioId: item.id,\n                      name: item.name,\n                    });\n                  }}\n                >\n                  <div\n                    class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                  >\n                    <div\n                      class={`flex items-center ${\n                        item?.change_1w === 0\n                          ? \"\"\n                          : item?.change_1w >= 0\n                            ? \"text-[#00A878]\"\n                            : \"text-red-500\"\n                      }`}\n                    >\n                      <TooltipNumber\n                        number={Math.abs(Number(item?.change_1w))}\n                        type={Math.abs(Number(item?.change_1w)) > 999999\n                          ? \"balance\"\n                          : \"percent\"}\n                      />%\n                      {#if item?.change_1w !== 0}\n                        <img\n                          src={item?.change_1w >= 0 ? TrendUp : TrendDown}\n                          alt=\"trend\"\n                          class=\"ml-1 mb-1 w-4 h-4\"\n                        />\n                      {/if}\n                    </div>\n                  </div>\n                </td>\n\n                <td\n                  class={`py-3 ${\n                    $isDarkMode\n                      ? \"group-hover:bg-[#000]\"\n                      : \"group-hover:bg-gray-100\"\n                  }`}\n                  on:click={() => {\n                    handleSelectedVirtual({\n                      tab: \"paper-trade\",\n                      owner: item.owner,\n                      virtualPortfolioId: item.id,\n                      name: item.name,\n                    });\n                  }}\n                >\n                  <div\n                    class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                  >\n                    <div\n                      class={`flex items-center ${\n                        item?.change_1m === 0\n                          ? \"\"\n                          : item?.change_1m >= 0\n                            ? \"text-[#00A878]\"\n                            : \"text-red-500\"\n                      }`}\n                    >\n                      <TooltipNumber\n                        number={Math.abs(Number(item?.change_1m))}\n                        type={Math.abs(Number(item?.change_1m)) > 999999\n                          ? \"balance\"\n                          : \"percent\"}\n                      />%\n                      {#if item?.change_1m !== 0}\n                        <img\n                          src={item?.change_1m >= 0 ? TrendUp : TrendDown}\n                          alt=\"trend\"\n                          class=\"ml-1 mb-1 w-4 h-4\"\n                        />\n                      {/if}\n                    </div>\n                  </div>\n                </td>\n\n                <td\n                  class={`py-3 ${\n                    $isDarkMode\n                      ? \"group-hover:bg-[#000]\"\n                      : \"group-hover:bg-gray-100\"\n                  }`}\n                >\n                  <div\n                    class=\"flex items-center justify-end gap-1 text-sm font-medium\"\n                  >\n                    <div\n                      class={`flex items-center ${\n                        item.realizedProfit !== 0\n                          ? item.realizedProfit >= 0\n                            ? \"text-[#00A878]\"\n                            : \"text-red-500\"\n                          : \"text_00000099\"\n                      }`}\n                    >\n                      <TooltipNumber\n                        number={Math.abs(item.percentRealizeProfit)}\n                        type=\"percent\"\n                      />\n                      <span>%</span>\n                    </div>\n                    {#if item.realizedProfit !== 0}\n                      <img\n                        src={item.realizedProfit >= 0 ? TrendUp : TrendDown}\n                        alt=\"trend\"\n                        class=\"mb-1 block\"\n                      />\n                    {/if}\n                  </div>\n                </td>\n\n                <td\n                  class={`py-3 ${\n                    $isDarkMode\n                      ? \"group-hover:bg-[#000]\"\n                      : \"group-hover:bg-gray-100\"\n                  }`}\n                >\n                  <div\n                    class=\"flex items-center justify-end gap-1 text-sm font-medium\"\n                  >\n                    <div\n                      class={`flex items-center ${\n                        item.max_drawdown !== 0\n                          ? item.max_drawdown >= 0\n                            ? \"text-[#00A878]\"\n                            : \"text-red-500\"\n                          : \"text_00000099\"\n                      }`}\n                    >\n                      <TooltipNumber\n                        number={Math.abs(item.max_drawdown)}\n                        type=\"percent\"\n                      />\n                      <span>%</span>\n                    </div>\n                    {#if item.max_drawdown !== 0}\n                      <img\n                        src={item.max_drawdown >= 0 ? TrendUp : TrendDown}\n                        alt=\"trend\"\n                        class=\"mb-1 block\"\n                      />\n                    {/if}\n                  </div>\n                </td>\n\n                <td\n                  class={`py-3 pr-3 ${\n                    $isDarkMode\n                      ? \"group-hover:bg-[#000]\"\n                      : \"group-hover:bg-gray-100\"\n                  }`}\n                  on:click={() => {\n                    handleSelectedVirtual({\n                      tab: \"paper-trade\",\n                      owner: item.owner,\n                      virtualPortfolioId: item.id,\n                      name: item.name,\n                    });\n                  }}\n                >\n                  <div class=\"text-right text-sm font-medium\">\n                    {item?.num_token || 0}\n                  </div>\n                </td>\n              </tr>\n            {/each}\n          {/if}\n        </tbody>\n      {/if}\n    </table>\n  </span>\n\n  <span slot=\"mobile\">\n    {#if isLoading}\n      <div class=\"flex justify-center items-center h-full py-3 px-3\">\n        {#if isNimbusVersion}\n          <LoadingPremium />\n        {:else}\n          <Loading />\n        {/if}\n      </div>\n    {:else}\n      <div class=\"relative w-full\">\n        {#if virtualPortfolioDashboard && virtualPortfolioDashboard?.length === 0}\n          <div\n            class=\"flex justify-center items-center h-full py-3 px-3 text-lg text-gray-400\"\n          >\n            {$t(\"Empty\")}\n          </div>\n        {:else}\n          {#each virtualPortfolioDashboard as item}\n            <div\n              class=\"flex flex-col gap-4 border-b-[1px] border_0000000d last:border-none py-4\"\n            >\n              <div class=\"flex justify-between items-start\">\n                <div class=\"text-right text-sm uppercase font-medium\">\n                  {$t(\"Name\")}\n                </div>\n                <div class=\"text-sm text_00000099 font-medium flex justify-end\">\n                  {item?.name}\n                </div>\n              </div>\n\n              <div class=\"flex justify-between items-start\">\n                <div class=\"text-right text-sm uppercase font-medium\">\n                  {$t(\"Assets\")}\n                </div>\n                <div class=\"flex justify-end items-center -space-x-2\">\n                  {#if item?.data?.length > 5}\n                    {#each item?.data?.slice(0, 4) as token, index}\n                      <div\n                        class={`${index > 0 && \"-ml-2\"}`}\n                        use:tooltip={{\n                          content: `<tooltip-detail text=\"${token.symbol.toUpperCase()}\" />`,\n                          allowHTML: true,\n                          placement: \"top\",\n                        }}\n                      >\n                        <img\n                          src={token.logo || defaultToken}\n                          alt=\"\"\n                          class=\"w-7 h-7 object-contain rounded-full bg-white\"\n                          on:error={(e) => handleImgError(e, defaultToken)}\n                        />\n                      </div>\n                    {/each}\n                    <div class=\"relative w-7 h-7\">\n                      <div\n                        class=\"absolute top-0 -left-2 w-full h-full bg-[#f1f1f1] text-gray-400 text-center flex justify-center items-center pb-2 rounded-full\"\n                      >\n                        ...\n                      </div>\n                    </div>\n                  {:else}\n                    {#each item?.data as token, index}\n                      <div\n                        class={`${index > 0 && \"-ml-2\"}`}\n                        use:tooltip={{\n                          content: `<tooltip-detail text=\"${token.symbol.toUpperCase()}\" />`,\n                          allowHTML: true,\n                          placement: \"top\",\n                        }}\n                      >\n                        <img\n                          src={token.logo || defaultToken}\n                          alt=\"\"\n                          class=\"w-7 h-7 object-contain rounded-full bg-white\"\n                          on:error={(e) => handleImgError(e, defaultToken)}\n                        />\n                      </div>\n                    {/each}\n                  {/if}\n                </div>\n              </div>\n\n              <div class=\"flex justify-between items-start\">\n                <div class=\"text-right text-sm uppercase font-medium\">1d</div>\n                <div\n                  class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                >\n                  <div\n                    class={`flex items-center ${\n                      item?.performanceOneDay === 0\n                        ? \"\"\n                        : item?.performanceOneDay >= 0\n                          ? \"text-[#00A878]\"\n                          : \"text-red-500\"\n                    }`}\n                  >\n                    <TooltipNumber\n                      number={Math.abs(Number(item?.performanceOneDay))}\n                      type={Math.abs(Number(item?.performanceOneDay)) > 999999\n                        ? \"balance\"\n                        : \"percent\"}\n                    />%\n                    {#if item?.performanceOneDay !== 0}\n                      <img\n                        src={item?.performanceOneDay >= 0 ? TrendUp : TrendDown}\n                        alt=\"trend\"\n                        class=\"ml-1 mb-1 w-4 h-4\"\n                      />\n                    {/if}\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"flex justify-between items-start\">\n                <div class=\"text-right text-sm uppercase font-medium\">1w</div>\n                <div\n                  class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                >\n                  <div\n                    class={`flex items-center ${\n                      item?.performanceOneWeek === 0\n                        ? \"\"\n                        : item?.performanceOneWeek >= 0\n                          ? \"text-[#00A878]\"\n                          : \"text-red-500\"\n                    }`}\n                  >\n                    <TooltipNumber\n                      number={Math.abs(Number(item?.performanceOneWeek))}\n                      type={Math.abs(Number(item?.performanceOneWeek)) > 999999\n                        ? \"balance\"\n                        : \"percent\"}\n                    />%\n                    {#if item?.performanceOneWeek !== 0}\n                      <img\n                        src={item?.performanceOneWeek >= 0\n                          ? TrendUp\n                          : TrendDown}\n                        alt=\"trend\"\n                        class=\"ml-1 mb-1 w-4 h-4\"\n                      />\n                    {/if}\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"flex justify-between items-start\">\n                <div class=\"text-right text-sm uppercase font-medium\">1m</div>\n                <div\n                  class=\"text-sm text-right font-medium flex flex-col items-end gap-1\"\n                >\n                  <div\n                    class={`flex items-center ${\n                      item?.performanceOneMonth === 0\n                        ? \"\"\n                        : item?.performanceOneMonth >= 0\n                          ? \"text-[#00A878]\"\n                          : \"text-red-500\"\n                    }`}\n                  >\n                    <TooltipNumber\n                      number={Math.abs(Number(item?.performanceOneMonth))}\n                      type={Math.abs(Number(item?.performanceOneMonth)) > 999999\n                        ? \"balance\"\n                        : \"percent\"}\n                    />%\n                    {#if item?.performanceOneMonth !== 0}\n                      <img\n                        src={item?.performanceOneMonth >= 0\n                          ? TrendUp\n                          : TrendDown}\n                        alt=\"trend\"\n                        class=\"ml-1 mb-1 w-4 h-4\"\n                      />\n                    {/if}\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"flex justify-between items-start\">\n                <div class=\"text-right text-sm uppercase font-medium\">ROI</div>\n                <div\n                  class=\"flex items-center justify-end gap-1 text-sm font-medium\"\n                >\n                  <div\n                    class={`flex items-center ${\n                      item.realizedProfit !== 0\n                        ? item.realizedProfit >= 0\n                          ? \"text-[#00A878]\"\n                          : \"text-red-500\"\n                        : \"text_00000099\"\n                    }`}\n                  >\n                    <TooltipNumber\n                      number={Math.abs(item.percentRealizeProfit)}\n                      type=\"percent\"\n                    />\n                    <span>%</span>\n                  </div>\n                  {#if item.realizedProfit !== 0}\n                    <img\n                      src={item.realizedProfit >= 0 ? TrendUp : TrendDown}\n                      alt=\"trend\"\n                      class=\"mb-1 block\"\n                    />\n                  {/if}\n                </div>\n              </div>\n\n              <div class=\"flex justify-between items-start\">\n                <div class=\"text-right text-sm uppercase font-medium\">\n                  {$t(\"Max Drawdown\")}\n                </div>\n                <div\n                  class=\"flex items-center justify-end gap-1 text-sm font-medium\"\n                >\n                  <div\n                    class={`flex items-center ${\n                      item.max_drawdown !== 0\n                        ? item.max_drawdown >= 0\n                          ? \"text-[#00A878]\"\n                          : \"text-red-500\"\n                        : \"text_00000099\"\n                    }`}\n                  >\n                    <TooltipNumber\n                      number={Math.abs(item.max_drawdown)}\n                      type=\"percent\"\n                    />\n                    <span>%</span>\n                  </div>\n                  {#if item.max_drawdown !== 0}\n                    <img\n                      src={item.max_drawdown >= 0 ? TrendUp : TrendDown}\n                      alt=\"trend\"\n                      class=\"mb-1 block\"\n                    />\n                  {/if}\n                </div>\n              </div>\n\n              <div class=\"flex justify-between items-start\">\n                <div class=\"text-right text-sm uppercase font-medium\">\n                  # {$t(\"of coins\")}\n                </div>\n                <div class=\"text-sm text_00000099 font-medium flex justify-end\">\n                  {item?.num_token || 0}\n                </div>\n              </div>\n\n              <div class=\"flex justify-between items-center\">\n                <div class=\"text-right text-sm uppercase font-medium mt-1\">\n                  Action\n                </div>\n                <div\n                  class=\"flex justify-center cursor-pointer\"\n                  on:click={() => {\n                    handleSelectedVirtual({\n                      tab: \"paper-trade\",\n                      owner: item.owner,\n                      virtualPortfolioId: item.id,\n                      name: item.name,\n                    });\n                  }}\n                >\n                  <div class=\"w-[20px] h-[20px]\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                      version=\"1.1\"\n                      viewBox=\"0 0 256 256\"\n                      xml:space=\"preserve\"\n                    >\n                      <defs />\n                      <g\n                        style=\"stroke: none; stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\"\n                        fill={$isDarkMode ? \"white\" : \"#00000080\"}\n                        transform=\"translate(1.4065934065934016 1.4065934065934016) scale(2.81 2.81)\"\n                      >\n                        <path\n                          d=\"M 87.994 0 H 69.342 c -1.787 0 -2.682 2.16 -1.418 3.424 l 5.795 5.795 l -33.82 33.82 L 28.056 31.196 l -3.174 -3.174 c -1.074 -1.074 -2.815 -1.074 -3.889 0 L 0.805 48.209 c -1.074 1.074 -1.074 2.815 0 3.889 l 3.174 3.174 c 1.074 1.074 2.815 1.074 3.889 0 l 15.069 -15.069 l 14.994 14.994 c 1.074 1.074 2.815 1.074 3.889 0 l 1.614 -1.614 c 0.083 -0.066 0.17 -0.125 0.247 -0.202 l 37.1 -37.1 l 5.795 5.795 C 87.84 23.34 90 22.445 90 20.658 V 2.006 C 90 0.898 89.102 0 87.994 0 z\"\n                          style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\"\n                          transform=\" matrix(1 0 0 1 0 0) \"\n                          fill={$isDarkMode ? \"white\" : \"#00000080\"}\n                          stroke-linecap=\"round\"\n                        />\n                        <path\n                          d=\"M 65.626 37.8 v 49.45 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 23.518 L 65.626 37.8 z\"\n                          style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\"\n                          fill={$isDarkMode ? \"white\" : \"#00000080\"}\n                          transform=\" matrix(1 0 0 1 0 0) \"\n                          stroke-linecap=\"round\"\n                        />\n                        <path\n                          d=\"M 47.115 56.312 V 87.25 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 42.03 L 47.115 56.312 z\"\n                          style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\"\n                          fill={$isDarkMode ? \"white\" : \"#00000080\"}\n                          transform=\" matrix(1 0 0 1 0 0) \"\n                          stroke-linecap=\"round\"\n                        />\n                        <path\n                          d=\"M 39.876 60.503 c -1.937 0 -3.757 -0.754 -5.127 -2.124 l -6.146 -6.145 V 87.25 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 59.844 C 41.952 60.271 40.933 60.503 39.876 60.503 z\"\n                          style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\"\n                          fill={$isDarkMode ? \"white\" : \"#00000080\"}\n                          transform=\" matrix(1 0 0 1 0 0) \"\n                          stroke-linecap=\"round\"\n                        />\n                        <path\n                          d=\"M 22.937 46.567 L 11.051 58.453 c -0.298 0.298 -0.621 0.562 -0.959 0.8 V 87.25 c 0 1.519 1.231 2.75 2.75 2.75 h 8.782 c 1.519 0 2.75 -1.231 2.75 -2.75 V 48.004 L 22.937 46.567 z\"\n                          style=\"stroke: none; stroke-width: 1; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill-rule: nonzero; opacity: 1;\"\n                          fill={$isDarkMode ? \"white\" : \"#00000080\"}\n                          transform=\" matrix(1 0 0 1 0 0) \"\n                          stroke-linecap=\"round\"\n                        />\n                      </g>\n                    </svg>\n                  </div>\n                </div>\n              </div>\n            </div>\n          {/each}\n        {/if}\n      </div>\n    {/if}\n  </span>\n</Table>\n\n<style></style>\n","<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n  import { nimbus } from \"~/lib/network\";\n  import { t } from \"~/lib/i18n\";\n  import {\n    user,\n    isDarkMode,\n    userPublicAddress,\n    triggerConnectWallet,\n  } from \"~/store\";\n  import { AnimateSharedLayout, Motion } from \"svelte-motion\";\n  import { createQuery, useQueryClient } from \"@tanstack/svelte-query\";\n  import {\n    getVirtualPortfolio,\n    getVirtualPortfolioProfile,\n  } from \"~/lib/queryAPI\";\n  import { triggerToast } from \"~/utils/functions\";\n  import { isNimbusVersion } from \"~/utils/constants\";\n\n  import AppOverlay from \"~/components/Overlay.svelte\";\n  import ErrorBoundary from \"~/components/ErrorBoundary.svelte\";\n  import Button from \"~/components/Button.svelte\";\n  import Copy from \"~/components/Copy.svelte\";\n  import FormVirtualPortfolio from \"~/UI/VirtualPortfolio/FormVirtualPortfolio.svelte\";\n  import VirtualPortfolio from \"~/UI/VirtualPortfolio/VirtualPortfolio.svelte\";\n  import Dashboard from \"~/UI/VirtualPortfolio/Dashboard.svelte\";\n  import MyPaperTradeDashboard from \"~/UI/VirtualPortfolio/MyPaperTradeDashboard.svelte\";\n\n  import LeftArrow from \"~/assets/left-arrow-black.svg\";\n  import LeftArrowWhite from \"~/assets/left-arrow.svg\";\n  import Plus from \"~/assets/plus.svg\";\n\n  const queryClient = useQueryClient();\n  const tabList = [\n    {\n      label: \"Dashboard\",\n      value: \"dashboard\",\n    },\n    {\n      label: \"My Paper Trade\",\n      value: \"paper-trade\",\n    },\n  ];\n\n  let listVirtualPortfolio: any = [];\n  let selectedVirtualPortfolio: any = {};\n  let virtualPortfolioId = \"\";\n  let dataVirtualPortfolio: any = {};\n  let listTokenHolding: any = [];\n  let listTokenHistoryChanges: any = [];\n  let wallet = $userPublicAddress;\n  let privateData = {};\n  let selectedPaperTrade: any = {};\n  let addedVirtualName = \"\";\n\n  let showDisable = false;\n\n  let isOpenConfirmDelete = false;\n  let isLoadingDelete = false;\n\n  let tab = \"dashboard\";\n  let type = \"main\";\n  let tabMyPaperTrade = \"dashboard\";\n  let isLoading = false;\n\n  onMount(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const addressParams = urlParams.get(\"address\");\n    const virtualPortfolioIdParams = urlParams.get(\"virtualPortfolioId\");\n    const typeParams = urlParams.get(\"type\");\n    const tabParams = urlParams.get(\"tab\");\n\n    if (tabParams) {\n      tab = tabParams;\n    } else {\n      tab = \"dashboard\";\n    }\n\n    if (typeParams) {\n      type = typeParams;\n    } else {\n      type = \"main\";\n    }\n\n    if (addressParams) {\n      wallet = addressParams;\n    } else {\n      wallet = $userPublicAddress;\n    }\n\n    if (virtualPortfolioIdParams) {\n      virtualPortfolioId = virtualPortfolioIdParams;\n    } else {\n      virtualPortfolioId = \"\";\n    }\n  });\n\n  const updateStateFromParams = async (id: any) => {\n    if (id && id.length !== 0) {\n      selectedVirtualPortfolio =\n        listVirtualPortfolio &&\n        listVirtualPortfolio?.find((item: any) => item?.id === id);\n    } else {\n      if (addedVirtualName) {\n        selectedVirtualPortfolio =\n          listVirtualPortfolio &&\n          listVirtualPortfolio?.find(\n            (item: any) =>\n              item?.name?.toLowerCase() === addedVirtualName?.toLowerCase(),\n          );\n      } else {\n        selectedVirtualPortfolio =\n          listVirtualPortfolio &&\n          listVirtualPortfolio?.find(\n            (item: any) =>\n              item?.id ===\n              listVirtualPortfolio[listVirtualPortfolio.length - 1]?.id,\n          );\n      }\n    }\n  };\n\n  $: queryVirtualPortfolioProfile = createQuery({\n    queryKey: [\"virtual-portfolio-profile\", wallet, $user],\n    queryFn: () => getVirtualPortfolioProfile(wallet),\n    retry: false,\n    enabled: Boolean(wallet && wallet.length !== 0),\n  });\n\n  $: {\n    if (\n      !$queryVirtualPortfolioProfile?.isError &&\n      $queryVirtualPortfolioProfile?.data !== undefined\n    ) {\n      handleFormatListVirtualPortfolioProfile(\n        $queryVirtualPortfolioProfile?.data?.data || [],\n      );\n    }\n  }\n\n  const handleFormatListVirtualPortfolioProfile = (data: any) => {\n    if (data && data.length !== 0) {\n      if ($user && Object.keys($user).length !== 0) {\n        listVirtualPortfolio = data;\n      } else {\n        listVirtualPortfolio = data.filter(\n          (item: any) => item?.id === virtualPortfolioId,\n        );\n      }\n\n      if (wallet === $userPublicAddress) {\n        updateStateFromParams(\"\");\n      } else {\n        updateStateFromParams(virtualPortfolioId);\n      }\n    } else {\n      listVirtualPortfolio = [];\n      virtualPortfolioId = \"\";\n      selectedVirtualPortfolio = {};\n      window.history.replaceState(\n        null,\n        \"\",\n        window.location.pathname + `?tab=${tab}&type=${type}&address=${wallet}`,\n      );\n    }\n  };\n\n  $: queryVirtualPortfolio = createQuery({\n    queryKey: [\"virtual-portfolio\", virtualPortfolioId, wallet],\n    queryFn: () =>\n      getVirtualPortfolio(wallet, virtualPortfolioId, $userPublicAddress),\n    retry: false,\n    enabled: Boolean(\n      wallet &&\n        wallet.length !== 0 &&\n        virtualPortfolioId &&\n        virtualPortfolioId?.length !== 0 &&\n        !$queryVirtualPortfolioProfile.isError &&\n        $queryVirtualPortfolioProfile.data !== undefined &&\n        $queryVirtualPortfolioProfile?.data?.data.length !== 0,\n    ),\n  });\n\n  $: {\n    if (\n      !$queryVirtualPortfolio.isError &&\n      $queryVirtualPortfolio.data !== undefined &&\n      !$queryVirtualPortfolioProfile.isError &&\n      $queryVirtualPortfolioProfile.data !== undefined &&\n      $queryVirtualPortfolioProfile?.data?.data.length !== 0\n    ) {\n      const selectedVirtualProfile =\n        $queryVirtualPortfolioProfile?.data?.data.find(\n          (item: any) => item?.id === virtualPortfolioId,\n        );\n\n      if (\n        (wallet &&\n          wallet !== $userPublicAddress &&\n          $userPublicAddress &&\n          selectedVirtualProfile &&\n          selectedVirtualProfile?.status === \"PRIVATE\") ||\n        (!$userPublicAddress &&\n          selectedVirtualProfile &&\n          selectedVirtualProfile?.status === \"PRIVATE\")\n      ) {\n        privateData = $queryVirtualPortfolio?.data?.data;\n      } else {\n        formatDataVirtualPortfolio($queryVirtualPortfolio?.data?.data);\n      }\n    }\n  }\n\n  const formatDataVirtualPortfolio = (data: any) => {\n    const selectedPortfolioProfile = listVirtualPortfolio.find(\n      (item: any) => item?.id === virtualPortfolioId,\n    );\n\n    selectedPaperTrade = selectedPortfolioProfile;\n\n    if (wallet !== $userPublicAddress) {\n      tabMyPaperTrade = \"detail\";\n    }\n\n    const virtualPortfolioNameList = data && Object.getOwnPropertyNames(data);\n\n    const formatDataVirtualPortfolio =\n      virtualPortfolioNameList &&\n      (virtualPortfolioNameList || [])?.map((item: any) => {\n        return {\n          portfolioName: selectedPortfolioProfile?.name,\n          coins: (data[item]?.tokens || [])?.map((coin: any) => {\n            return {\n              ...coin,\n              percent: Number(coin?.percent),\n            };\n          }),\n          history: (data[item]?.history || [])?.map((coin: any) => {\n            return {\n              ...coin,\n              percent: Number(coin?.percent),\n            };\n          }),\n          updatedTime: selectedVirtualPortfolio?.startedAt,\n        };\n      });\n\n    dataVirtualPortfolio = virtualPortfolioNameList?.reduce(\n      (acc: any, key: any, index: any) => {\n        acc[key] = formatDataVirtualPortfolio[index];\n        return acc;\n      },\n      {},\n    );\n\n    if (dataVirtualPortfolio) {\n      listTokenHistoryChanges =\n        dataVirtualPortfolio[virtualPortfolioId]?.history || [];\n\n      const formatDataTokenHolding = (\n        dataVirtualPortfolio[virtualPortfolioId]?.coins || []\n      )?.map((item: any) => {\n        return {\n          ...item,\n          value: Number(item.amount) * Number(item.currentPrice),\n        };\n      });\n\n      const totalValues = formatDataTokenHolding?.reduce(\n        (prev: any, item: any) => prev + Number(item?.value),\n        0,\n      );\n\n      listTokenHolding = (formatDataTokenHolding || [])?.map((item: any) => {\n        return {\n          ...item,\n          percent: (Number(item.value) / Number(totalValues)) * 100,\n        };\n      });\n    }\n  };\n\n  $: {\n    if (\n      selectedVirtualPortfolio &&\n      Object.keys(selectedVirtualPortfolio).length !== 0\n    ) {\n      privateData = {};\n      virtualPortfolioId = selectedVirtualPortfolio?.id;\n      window.history.replaceState(\n        null,\n        \"\",\n        window.location.pathname +\n          `?tab=${tab}&type=${type}&address=${wallet}&virtualPortfolioId=${virtualPortfolioId}`,\n      );\n    }\n  }\n\n  const handleSubmit = async (\n    data: any,\n    typeSubmit: string,\n    virtualPortfolioNetworth: any,\n  ) => {\n    isLoading = true;\n    try {\n      if (typeSubmit === \"add\") {\n        const responseAdd: any = await nimbus.post(\n          `/address/personalize/virtual-portfolio`,\n          {\n            ...data,\n            virtualPortfolioNetworth,\n          },\n        );\n        if (responseAdd && responseAdd?.error) {\n          triggerToast(responseAdd.error, \"fail\");\n          return;\n        }\n\n        addedVirtualName = data?.portfolioName;\n\n        triggerToast(\n          `Successfully add ${data?.portfolioName} virtual portfolio`,\n          \"success\",\n        );\n      }\n\n      if (typeSubmit === \"edit\") {\n        const responseEdit: any = await nimbus.put(\n          `/address/personalize/virtual-portfolio?portfolioName=${dataVirtualPortfolio[virtualPortfolioId]?.portfolioName}&portfolioProfileId=${virtualPortfolioId}`,\n          {\n            ...data,\n            virtualPortfolioNetworth,\n          },\n        );\n        if (responseEdit && responseEdit?.error) {\n          triggerToast(responseEdit.error, \"fail\");\n          return;\n        }\n\n        triggerToast(\n          `Successfully edit ${dataVirtualPortfolio[virtualPortfolioId]?.portfolioName} virtual portfolio`,\n          \"success\",\n        );\n      }\n\n      queryClient.invalidateQueries([\"virtual-portfolio-profile\"]);\n      queryClient.invalidateQueries([\"virtual-portfolio\"]);\n      queryClient.invalidateQueries([\"virtual-portfolio-performance\"]);\n      queryClient.refetchQueries([\"virtual-portfolio-dashboard\"]);\n\n      type = \"main\";\n      tabMyPaperTrade = \"detail\";\n    } catch (e) {\n      console.error(\"error: \", e);\n      if (type === \"edit\") {\n        triggerToast(\n          `Something wrong when edit ${data?.portfolioName} virtual portfolio. Please try again!`,\n          \"fail\",\n        );\n      }\n      if (type === \"add\") {\n        triggerToast(\n          `Something wrong when add ${data?.portfolioName} virtual portfolio. Please try again!`,\n          \"fail\",\n        );\n      }\n    } finally {\n      isLoading = false;\n    }\n  };\n\n  const handleDeleteVirtualPortfolio = async () => {\n    isLoadingDelete = true;\n    try {\n      const response = await nimbus.delete(\n        `/address/personalize/virtual-portfolio?portfolioName=${selectedVirtualPortfolio?.name}&portfolioProfileId=${virtualPortfolioId}`,\n        {},\n      );\n      if (response && response?.error) {\n        triggerToast(response?.error, \"fail\");\n        return;\n      }\n\n      triggerToast(\n        `Successfully delete ${selectedVirtualPortfolio?.name} virtual portfolio`,\n        \"success\",\n      );\n      queryClient.invalidateQueries([\"virtual-portfolio-profile\"]);\n      queryClient.invalidateQueries([\"virtual-portfolio\"]);\n      queryClient.refetchQueries([\"virtual-portfolio-dashboard\"]);\n\n      virtualPortfolioId = \"\";\n      selectedVirtualPortfolio = {};\n      window.history.replaceState(\n        null,\n        \"\",\n        window.location.pathname + `?tab=${tab}&type=${type}&address=${wallet}`,\n      );\n    } catch (e) {\n      console.error(e);\n      triggerToast(\n        `Something wrong when delete ${selectedVirtualPortfolio?.name} virtual portfolio. Please try again!`,\n        \"fail\",\n      );\n    } finally {\n      isLoadingDelete = false;\n      isOpenConfirmDelete = false;\n      tabMyPaperTrade = \"dashboard\";\n    }\n  };\n\n  const handleCancel = (id: string) => {\n    type = \"main\";\n    updateStateFromParams(id);\n  };\n\n  const handleSelectedVirtual = (data: any) => {\n    tabMyPaperTrade = \"detail\";\n    selectedPaperTrade = data;\n    tab = data.tab;\n    wallet = data.owner;\n    virtualPortfolioId = data.virtualPortfolioId;\n    updateStateFromParams(virtualPortfolioId);\n  };\n</script>\n\n<ErrorBoundary>\n  <div class=\"header-container\">\n    <div class=\"flex flex-col max-w-[1600px] m-auto xl:w-[82%] w-[94%]\">\n      <div class=\"flex flex-col mb-5 gap-7\">\n        {#if type === \"add\" || type === \"edit\"}\n          <div class=\"flex items-center justify-between\">\n            <div\n              class=\"flex items-center gap-1 text-white cursor-pointer\"\n              on:click={() => {\n                if (!isLoading) {\n                  handleCancel(virtualPortfolioId);\n                }\n              }}\n            >\n              <img src={LeftArrowWhite} alt=\"\" class=\"xl:w-5 xl:h-5 w-7 h-7\" />\n              <div class=\"text-sm font-medium\">{$t(\"Back\")}</div>\n            </div>\n          </div>\n        {/if}\n        <div class=\"text-4xl font-semibold text-white\">Paper Trade</div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"xl:min-h-screen max-w-[1600px] m-auto md:w-[94%] w-full xl:-mt-26 -mt-34\"\n  >\n    {#if type === \"main\"}\n      <div\n        class=\"virtual_portfolio_container rounded-[20px] xl:p-8 p-4 xl:shadow-md\"\n      >\n        <div class=\"flex flex-wrap items-center xl:gap-2 gap-4\">\n          <AnimateSharedLayout>\n            {#each tabList as item}\n              <div\n                class=\"relative cursor-pointer text-base font-medium py-1 px-3 rounded-[100px] transition-all\"\n                id={item.value}\n                on:click={() => {\n                  window.history.replaceState(\n                    null,\n                    \"\",\n                    window.location.pathname +\n                      `?tab=${item.value}&type=${type}&address=${wallet}&virtualPortfolioId=${virtualPortfolioId}`,\n                  );\n                  tab = item.value;\n                }}\n              >\n                <div\n                  class={`relative z-1 ${tab === item.value && \"text-white\"}`}\n                >\n                  {$t(item.label)}\n                </div>\n\n                {#if item.value === tab}\n                  <Motion\n                    let:motion\n                    layoutId=\"active-pill\"\n                    transition={{ type: \"spring\", duration: 0.6 }}\n                  >\n                    <div\n                      class=\"absolute inset-0 rounded-full bg-[#1E96FC] z-0\"\n                      use:motion\n                    />\n                  </Motion>\n                {/if}\n              </div>\n            {/each}\n          </AnimateSharedLayout>\n        </div>\n\n        <div class=\"pt-6\">\n          {#if tab === \"dashboard\"}\n            <Dashboard {tab} {handleSelectedVirtual} />\n          {/if}\n\n          {#if tab === \"paper-trade\"}\n            <div\n              class={`w-full h-full flex flex-col gap-4 ${listVirtualPortfolio && listVirtualPortfolio?.length === 0 ? \"min-h-screen\" : \"\"}`}\n            >\n              <div\n                class=\"flex xl:flex-row flex-col xl:items-center items-start justify-between gap-4\"\n              >\n                {#if selectedPaperTrade && Object.keys(selectedPaperTrade).length !== 0 && selectedPaperTrade?.owner !== $userPublicAddress}\n                  <div class=\"flex-1\">\n                    <div\n                      class=\"relative cursor-pointer text-base font-medium py-1 px-3 rounded-[100px] transition-all w-max\"\n                    >\n                      <div class=\"relative z-2\">\n                        {selectedPaperTrade?.name}\n                      </div>\n                      <div\n                        class={`z-1 absolute inset-0 rounded-full ${$isDarkMode ? \"bg-[#ffffff1c]\" : \"bg-[#f4f5f8]\"}`}\n                      />\n                    </div>\n                  </div>\n                {/if}\n\n                <div\n                  class=\"flex lg:justify-end justify-start items-center gap-3 w-full\"\n                >\n                  {#if $user && Object.keys($user).length === 0 && listVirtualPortfolio && listVirtualPortfolio.length !== 0}\n                    <div class=\"xl:block hidden w-max\">\n                      <Button\n                        variant=\"secondary\"\n                        on:click={() => {\n                          triggerConnectWallet.update((n) => (n = true));\n                        }}\n                      >\n                        {#if isNimbusVersion}\n                          Connect Wallet\n                        {:else}\n                          Login\n                        {/if} to create Paper Trade\n                      </Button>\n                    </div>\n                  {/if}\n\n                  {#if wallet && $userPublicAddress && wallet === $userPublicAddress}\n                    {#if tabMyPaperTrade === \"detail\" && selectedVirtualPortfolio && Object.keys(selectedVirtualPortfolio).length !== 0}\n                      <div\n                        class=\"flex md:flex-row flex-col gap-4 justify-between w-full\"\n                      >\n                        <div\n                          class=\"flex items-center gap-1 cursor-pointer\"\n                          on:click={() => (tabMyPaperTrade = \"dashboard\")}\n                        >\n                          <img\n                            src={$isDarkMode ? LeftArrowWhite : LeftArrow}\n                            alt=\"\"\n                            class=\"xl:w-5 xl:h-5 w-7 h-7\"\n                          />\n                          <div class=\"text-base font-medium\">{$t(\"Back\")}</div>\n                        </div>\n\n                        <div class=\"flex items-center gap-2\">\n                          <div class=\"w-max\">\n                            <Button\n                              variant=\"delete\"\n                              on:click={() => {\n                                isOpenConfirmDelete = true;\n                              }}\n                            >\n                              {$t(\"Delete\")}\n                            </Button>\n                          </div>\n                          <div class=\"w-max\">\n                            <Button\n                              variant=\"secondary\"\n                              on:click={() => {\n                                type = \"edit\";\n                              }}\n                            >\n                              {$t(\"Rebalance Portfolio\")}\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                    {/if}\n\n                    {#if tabMyPaperTrade === \"dashboard\"}\n                      <div\n                        class=\"relative w-max\"\n                        on:mouseenter={() => {\n                          if ($user && Object.keys($user).length === 0) {\n                            showDisable = true;\n                          }\n                        }}\n                        on:mouseleave={() => {\n                          if ($user && Object.keys($user).length === 0) {\n                            showDisable = false;\n                          }\n                        }}\n                      >\n                        {#if $user && Object.keys($user).length === 0}\n                          <Button variant=\"disabled\" disabled>\n                            <img src={Plus} alt=\"\" class=\"w-3 h-3\" />\n                            <div class=\"text-white\">{$t(\"New Portfolio\")}</div>\n                          </Button>\n                        {:else}\n                          <Button\n                            variant=\"tertiary\"\n                            on:click={() => {\n                              type = \"add\";\n                              virtualPortfolioId = \"\";\n                              selectedVirtualPortfolio = {};\n                              window.history.replaceState(\n                                null,\n                                \"\",\n                                window.location.pathname +\n                                  `?tab=${tab}&type=${type}&address=${wallet}`,\n                              );\n                            }}\n                          >\n                            <img src={Plus} alt=\"\" class=\"w-3 h-3\" />\n                            <div class=\"text-white\">{$t(\"New Portfolio\")}</div>\n                          </Button>\n                        {/if}\n                        {#if showDisable}\n                          <div\n                            class={`xl:block hidden absolute transform left-1/2 -translate-x-1/2 ${\n                              $user && Object.keys($user).length === 0\n                                ? \"-top-8\"\n                                : \"-top-12\"\n                            }`}\n                            style=\"z-index: 2147483648;\"\n                          >\n                            <div\n                              class=\"max-w-[360px] text-white bg-black py-1 px-2 text-xs rounded relative w-max normal-case\"\n                            >\n                              Connect your wallet to add virtual portfolio\n                            </div>\n                          </div>\n                        {/if}\n                      </div>\n                    {/if}\n                  {/if}\n\n                  {#if wallet && $userPublicAddress && wallet !== $userPublicAddress}\n                    <div class=\"w-max\">\n                      {#if $user && Object.keys($user).length !== 0}\n                        <Button\n                          variant=\"secondary\"\n                          on:click={() => {\n                            selectedPaperTrade = {};\n                            wallet = $userPublicAddress;\n                            tabMyPaperTrade = \"dashboard\";\n                          }}\n                        >\n                          {$t(\"My Paper Trade\")}\n                        </Button>\n                      {/if}\n                    </div>\n                  {/if}\n                </div>\n              </div>\n\n              {#if tabMyPaperTrade === \"dashboard\"}\n                <MyPaperTradeDashboard\n                  {listVirtualPortfolio}\n                  {handleSelectedVirtual}\n                  isLoading={$queryVirtualPortfolioProfile.isFetching}\n                />\n              {:else}\n                <div>\n                  {#if $queryVirtualPortfolio.isError || $queryVirtualPortfolioProfile.isError}\n                    <div\n                      class=\"border border_0000001a rounded-[20px] px-6 py-12 flex items-center gap-2 justify-center\"\n                    >\n                      Empty\n                    </div>\n                  {:else}\n                    <div class=\"w-full h-full\">\n                      {#if privateData && Object.keys(privateData).length !== 0 && privateData?.owner !== $userPublicAddress}\n                        <div\n                          class=\"border border_0000001a rounded-[20px] px-6 py-12 flex items-center gap-2 justify-center\"\n                        >\n                          You can not access this paper trade from user <Copy\n                            address={privateData?.owner}\n                            iconColor={$isDarkMode ? \"#fff\" : \"#000\"}\n                            color={$isDarkMode ? \"#fff\" : \"#000\"}\n                            isShorten\n                            iconSize={20}\n                          />\n                        </div>\n                      {:else}\n                        <VirtualPortfolio\n                          {wallet}\n                          listTokenHistoryChanges={listTokenHistoryChanges ||\n                            []}\n                          {listVirtualPortfolio}\n                          {listTokenHolding}\n                          isLoading={$queryVirtualPortfolio.isFetching ||\n                            $queryVirtualPortfolioProfile.isFetching}\n                          isQuery={!$queryVirtualPortfolioProfile.isError &&\n                            $queryVirtualPortfolioProfile.data !== undefined &&\n                            $queryVirtualPortfolioProfile?.data?.data\n                              ?.length !== 0}\n                          {virtualPortfolioId}\n                        />\n                      {/if}\n                    </div>\n                  {/if}\n                </div>\n              {/if}\n            </div>\n          {/if}\n        </div>\n      </div>\n    {/if}\n\n    {#if type === \"add\" || type === \"edit\"}\n      <div\n        class=\"virtual_portfolio_container rounded-[20px] xl:p-8 p-4 xl:shadow-md\"\n      >\n        <FormVirtualPortfolio\n          {handleSubmit}\n          {handleCancel}\n          {isLoading}\n          {wallet}\n          {listVirtualPortfolio}\n          {virtualPortfolioId}\n          {type}\n        />\n      </div>\n    {/if}\n  </div>\n</ErrorBoundary>\n\n<!-- Modal confirm delete virtual portfolio -->\n<AppOverlay\n  clickOutSideToClose\n  isOpen={isOpenConfirmDelete}\n  on:close={() => (isOpenConfirmDelete = false)}\n>\n  <div class=\"flex flex-col gap-4 xl:mt-0 mt-4\">\n    <div class=\"flex flex-col items-start gap-1\">\n      <div class=\"font-semibold title-3\">{$t(\"Are you sure?\")}</div>\n      <div class=\"text-gray-500 text-sm\">\n        {$t(\"Do you really want\", { name: \"paper trade\" })}\n      </div>\n    </div>\n    <div class=\"flex justify-end gap-4\">\n      <div class=\"w-[120px]\">\n        <Button\n          variant=\"secondary\"\n          on:click={() => {\n            isOpenConfirmDelete = false;\n          }}\n        >\n          Cancel\n        </Button>\n      </div>\n      <div class=\"w-[120px]\">\n        <Button\n          variant=\"delete\"\n          isLoading={isLoadingDelete}\n          disabled={isLoadingDelete}\n          on:click={() => {\n            handleDeleteVirtualPortfolio();\n          }}\n        >\n          {$t(\"Delete\")}\n        </Button>\n      </div>\n    </div>\n  </div>\n</AppOverlay>\n\n<style>\n  .header-container {\n    background-repeat: no-repeat;\n    background-size: auto;\n    background-position: top right;\n    padding-bottom: 144px;\n    padding-top: 24px;\n  }\n\n  :global(body) .header-container {\n    background-color: #27326f;\n    background-image: url(\"~/assets/capa.svg\");\n  }\n  :global(body.dark) .header-container {\n    background-color: #080808;\n    background-image: url(\"~/assets/capa-dark.svg\");\n  }\n\n  :global(body) .virtual_portfolio_container {\n    background: #fff;\n    box-shadow: 0px 0px 40px 0px rgba(0, 0, 0, 0.1);\n  }\n  :global(body.dark) .virtual_portfolio_container {\n    background: #0f0f0f;\n    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 1);\n  }\n</style>\n"],"names":["t0_value","ctx","t2_value","if_block","create_if_block_1","insert","target","div","anchor","append","span0","span1","focus","dirty","set_data_contenteditable","t0","t2","t1_value","create_if_block_2","span","t1","create_if_block","browseDate","$$props","fields","$$value","e","isLeapYear","year","getMonthLength","month","toText","date","formatTokens","text","token","getMonthDays","monthLength","days","i","getCalendarDays","value","weekStartsOn","firstWeekday","daysBefore","lastMonth","lastMonthYear","nextMonth","nextMonthYear","daysAfter","getLocaleDefaults","getInnerLocale","locale","innerLocale","option","set_data","t","t_value","option_selected_value","option_value_value","toggle_class","dayIsInRange","each_value_1","ensure_array_like","each_value_6","each_value_5","each_value_2","div5","div4","div2","button0","div0","select0","select1","svg1","path1","div1","select2","select3","svg2","path2","button1","div3","listen","click_handler","setMonth","input_handler_1","setYear","click_handler_1","click_handler_2","calendarDay","selectDay","parse","str","tokens","baseDate","missingPunctuation","valid","day","hours","minutes","seconds","ms","parseString","parseUint","pattern","min","max","matches","n","parseEnum","allowedValues","allowedValue","parseToken","twoDigit","parseRule","s","d","createFormat","input","InputElement","focus_handler","$$invalidate","visible","mousedown_handler","result","$store","pickerElement","t_1_value","t_1","dayjs","create_if_block_6","tbody","tr","td","create_if_block_7","attr","a","a_href_value","create_if_block_10","create_if_block_9","if_block2","create_if_block_8","src_url_equal","img","img_src_value","td1","td1_class_value","null_to_empty","td0","div6","current","svg","circle","path0","input_value_value","div13","div13_id_value","div12","div9","div8","div7","div10","div11","t4_value","t9_value","t14_value","t25_value","t27_value","t32_value","t34_value","t36_value","numeral","create_if_block_13","if_block1","create_if_block_12","create_if_block_11","if_block4","create_if_block_3","input1","input1_placeholder_value","input3","input3_placeholder_value","input3_class_value","span4","span4_class_value","label","input0","div28","span2","input2","span3","div24","div17","div15","div14","div16","table","div23","div21","div20","div18","div19","div22","div27","div25","div26","t4","t9","t14","t25","t27","t32","t34","t36","checkedStatus","event","isLoading","virtualPortfolioName","handleChangeNetworth","time","keyup_handler","debounceSearch","handleSelectToken","data","handleClearAllTokenAllocation","handleAutoAllocate","handleDecreaseTokenAllocation","handleChangeTokenAllocation","handleIncreaseTokenAllocation","handleLockTokenAllocation","handleRemoveTokenAllocation","handleCancelRebalance","handleSubmitRebalance","div1_class_value","TrendUp","TrendDown","each_blocks","shorterAddress","defaultToken","create_if_block_17","create_if_block_16","td2","td3","td4","image_changes","tooltipnumber0_changes","tooltipnumber1_changes","tooltipnumber2_changes","tooltipnumber3_changes","t5_value","t7_value","thead","th0","th1","th2","th3","th4","t5","t7","path","path3","path4","path5","path6","path7","path8","path9","path10","path11","t6_value","t17_value","if_block3","create_if_block_5","create_if_block_4","t6","t17","t3_value","filterTokenValueType","t3","filterTokenType","index","t8_value","func_7","func_1","t8","t10","t10_value","func_9","shorterName","tooltip_changes","create_if_block_20","create_if_block_19","create_if_block_18","tooltipnumber_changes","create_if_block_15","show_if","each_value_11","each_value_9","each_value_8","each_value_7","td5","td6","each_blocks_4","each_blocks_3","each_blocks_2","each_blocks_1","t12_value","th5","th6","t12","func_3","func","func_5","t13_value","t16_value","t19_value","t22_value","each_value_3","br","t13","t16","t19","t22","item","func_2","func_4","func_6","func_8","selectedItemIndex","isShowTooltipSymbol","t29_value","tooltipnumber4_changes","tooltipnumber5_changes","tooltipnumber6_changes","t29","triggerConnectWallet","each_value_4","create_if_block_14","td7","copy_changes","raw0_value","raw1_value","raw2_value","raw3_value","raw4_value","t15_value","th7","t15","div33","div32","div29","div31","div30","defs","g","pagination_1_changes","error_handler","handleImgError","error_handler_1","handleSelectedVirtual","toggleShortDashboard","keysort","error_handler_2","error_handler_3","LeftArrowWhite","if_block0","div0_class_value","show_if_1","div2_class_value","LeftArrow","Plus","mypapertradedashboard_changes","virtualportfolio_changes","handleCancel","virtualPortfolioId","type","wallet","tab","click_handler_3","tabMyPaperTrade","isOpenConfirmDelete","selectedVirtualPortfolio","$user","showDisable","selectedPaperTrade","$userPublicAddress","handleDeleteVirtualPortfolio","close_handler"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}